{
	"id": "7e546960f8c1391a02b7e8446897b18c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"MyERC20/backend/contracts/MyERC20TokenOZ.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\";\n// import { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MyERC20TokenOZ is ERC20 {\n\n    uint8 private token_decimals;\n\n    constructor(string memory _name, string memory _symbol, uint256 _decimals, uint256 _totalSupply) \n        ERC20(_name, _symbol) {\n        token_decimals = uint8(_decimals);\n        _mint(msg.sender, _totalSupply);\n    }\n\n    function decimals() public view override returns (uint8) {\n        return uint8(token_decimals);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the ERC may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the ERC. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"MyERC20/backend/contracts/MyERC20TokenOZ.sol": {
				"MyERC20TokenOZ": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_decimals",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the ERC. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":241:645  contract MyERC20TokenOZ is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":316:535  constructor(string memory _name, string memory _symbol, uint256 _decimals, uint256 _totalSupply) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":428:433  _name */\n  dup4\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":435:442  _symbol */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1971:1976  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1963:1968  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1963:1976  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1996:2003  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1986:1993  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1986:2003  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":1897:2010  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":477:486  _decimals */\n  dup2\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":454:468  token_decimals */\n  0x05\n  0x00\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":454:487  token_decimals = uint8(_decimals) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":497:528  _mint(msg.sender, _totalSupply) */\n  tag_11\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":503:513  msg.sender */\n  caller\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":515:527  _totalSupply */\n  dup3\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":497:502  _mint */\n  shl(0x20, tag_12)\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":497:528  _mint(msg.sender, _totalSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":316:535  constructor(string memory _name, string memory _symbol, uint256 _decimals, uint256 _totalSupply) ... */\n  pop\n  pop\n  pop\n  pop\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":241:645  contract MyERC20TokenOZ is ERC20 {... */\n  jump(tag_13)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7722:7930  function _mint(address account, uint256 value) internal {... */\ntag_12:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7811:7812  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7792:7813  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7792:7799  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7792:7813  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7788:7879  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7865:7866  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7836:7868  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7788:7879  if (account == address(0)) {... */\ntag_15:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7888:7923  _update(address(0), account, value) */\n  tag_18\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7904:7905  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7908:7915  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7917:7922  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7888:7895  _update */\n  shl(0x20, tag_19)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7888:7923  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7722:7930  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6272:7379  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6377:6378  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6361:6379  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6361:6365  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6361:6379  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6357:6897  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6513:6518  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6497:6509  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6497:6518  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6357:6897  if (from == address(0)) {... */\n  jump(tag_24)\ntag_21:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6549:6568  uint256 fromBalance */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6549:6586  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6618:6623  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6604:6615  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6604:6623  fromBalance < value */\n  lt\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6600:6715  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6675:6679  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6681:6692  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6694:6699  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6650:6700  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6600:6715  if (fromBalance < value) {... */\ntag_25:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6867:6872  value */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6853:6864  fromBalance */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6853:6872  fromBalance - value */\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6835:6844  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6835:6850  _balances[from] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6845:6849  from */\n  dup7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6835:6850  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6835:6872  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6535:6897  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6357:6897  if (from == address(0)) {... */\ntag_24:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6926  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6911:6927  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6911:6913  to */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6911:6927  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6907:7332  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7090:7095  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7074:7086  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7074:7095  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6907:7332  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7302:7307  value */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7285:7294  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7285:7298  _balances[to] */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7295:7297  to */\n  dup5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7285:7298  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7285:7307  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6907:7332  if (to == address(0)) {... */\ntag_29:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7362:7364  to */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7347:7372  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7356:7360  from */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7347:7372  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7366:7371  value */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7347:7372  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6272:7379  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_32:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_34:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_35:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_36:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_37:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_38:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_39:\n    /* \"#utility.yul\":957:984   */\n  tag_80\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_37\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_82\n  tag_38\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1030:1118   */\ntag_81:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_40:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_84\n  tag_32\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_85\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_39\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_41:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_88\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1434:1490   */\ntag_87:\n    /* \"#utility.yul\":1508:1537   */\n  tag_89\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_37\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_42:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_91:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_91)\ntag_93:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_43:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_95\n    /* \"#utility.yul\":1992:2041   */\n  tag_96\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1976:2042   */\n  tag_40\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_98\n  tag_36\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2117:2229   */\ntag_97:\n    /* \"#utility.yul\":2238:2290   */\n  tag_99\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_42\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_44:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_102\n  tag_35\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2399:2521   */\ntag_101:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_103\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_43\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2754   */\ntag_45:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2743:2748   */\n  dup2\n    /* \"#utility.yul\":2732:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2760:2882   */\ntag_46:\n    /* \"#utility.yul\":2833:2857   */\n  tag_106\n    /* \"#utility.yul\":2851:2856   */\n  dup2\n    /* \"#utility.yul\":2833:2857   */\n  tag_45\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2826:2831   */\n  dup2\n    /* \"#utility.yul\":2823:2858   */\n  eq\n    /* \"#utility.yul\":2813:2876   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2869:2870   */\n  dup1\n    /* \"#utility.yul\":2862:2874   */\n  revert\n    /* \"#utility.yul\":2813:2876   */\ntag_107:\n    /* \"#utility.yul\":2760:2882   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3031   */\ntag_47:\n    /* \"#utility.yul\":2945:2950   */\n  0x00\n    /* \"#utility.yul\":2976:2982   */\n  dup2\n    /* \"#utility.yul\":2970:2983   */\n  mload\n    /* \"#utility.yul\":2961:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2992:3025   */\n  tag_109\n    /* \"#utility.yul\":3019:3024   */\n  dup2\n    /* \"#utility.yul\":2992:3025   */\n  tag_46\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2888:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:4203   */\ntag_3:\n    /* \"#utility.yul\":3154:3160   */\n  0x00\n    /* \"#utility.yul\":3162:3168   */\n  dup1\n    /* \"#utility.yul\":3170:3176   */\n  0x00\n    /* \"#utility.yul\":3178:3184   */\n  dup1\n    /* \"#utility.yul\":3227:3230   */\n  0x80\n    /* \"#utility.yul\":3215:3224   */\n  dup6\n    /* \"#utility.yul\":3206:3213   */\n  dup8\n    /* \"#utility.yul\":3202:3225   */\n  sub\n    /* \"#utility.yul\":3198:3231   */\n  slt\n    /* \"#utility.yul\":3195:3315   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3234:3313   */\n  tag_112\n  tag_33\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3195:3315   */\ntag_111:\n    /* \"#utility.yul\":3375:3376   */\n  0x00\n    /* \"#utility.yul\":3364:3373   */\n  dup6\n    /* \"#utility.yul\":3360:3377   */\n  add\n    /* \"#utility.yul\":3354:3378   */\n  mload\n    /* \"#utility.yul\":3405:3423   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3397:3403   */\n  dup2\n    /* \"#utility.yul\":3394:3424   */\n  gt\n    /* \"#utility.yul\":3391:3508   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3427:3506   */\n  tag_114\n  tag_34\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3391:3508   */\ntag_113:\n    /* \"#utility.yul\":3532:3606   */\n  tag_115\n    /* \"#utility.yul\":3598:3605   */\n  dup8\n    /* \"#utility.yul\":3589:3595   */\n  dup3\n    /* \"#utility.yul\":3578:3587   */\n  dup9\n    /* \"#utility.yul\":3574:3596   */\n  add\n    /* \"#utility.yul\":3532:3606   */\n  tag_44\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3522:3606   */\n  swap5\n  pop\n    /* \"#utility.yul\":3325:3616   */\n  pop\n    /* \"#utility.yul\":3676:3678   */\n  0x20\n    /* \"#utility.yul\":3665:3674   */\n  dup6\n    /* \"#utility.yul\":3661:3679   */\n  add\n    /* \"#utility.yul\":3655:3680   */\n  mload\n    /* \"#utility.yul\":3707:3725   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3699:3705   */\n  dup2\n    /* \"#utility.yul\":3696:3726   */\n  gt\n    /* \"#utility.yul\":3693:3810   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3729:3808   */\n  tag_117\n  tag_34\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3693:3810   */\ntag_116:\n    /* \"#utility.yul\":3834:3908   */\n  tag_118\n    /* \"#utility.yul\":3900:3907   */\n  dup8\n    /* \"#utility.yul\":3891:3897   */\n  dup3\n    /* \"#utility.yul\":3880:3889   */\n  dup9\n    /* \"#utility.yul\":3876:3898   */\n  add\n    /* \"#utility.yul\":3834:3908   */\n  tag_44\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3824:3908   */\n  swap4\n  pop\n    /* \"#utility.yul\":3626:3918   */\n  pop\n    /* \"#utility.yul\":3957:3959   */\n  0x40\n    /* \"#utility.yul\":3983:4047   */\n  tag_119\n    /* \"#utility.yul\":4039:4046   */\n  dup8\n    /* \"#utility.yul\":4030:4036   */\n  dup3\n    /* \"#utility.yul\":4019:4028   */\n  dup9\n    /* \"#utility.yul\":4015:4037   */\n  add\n    /* \"#utility.yul\":3983:4047   */\n  tag_47\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3973:4047   */\n  swap3\n  pop\n    /* \"#utility.yul\":3928:4057   */\n  pop\n    /* \"#utility.yul\":4096:4098   */\n  0x60\n    /* \"#utility.yul\":4122:4186   */\n  tag_120\n    /* \"#utility.yul\":4178:4185   */\n  dup8\n    /* \"#utility.yul\":4169:4175   */\n  dup3\n    /* \"#utility.yul\":4158:4167   */\n  dup9\n    /* \"#utility.yul\":4154:4176   */\n  add\n    /* \"#utility.yul\":4122:4186   */\n  tag_47\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4112:4186   */\n  swap2\n  pop\n    /* \"#utility.yul\":4067:4196   */\n  pop\n    /* \"#utility.yul\":3037:4203   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4209:4308   */\ntag_48:\n    /* \"#utility.yul\":4261:4267   */\n  0x00\n    /* \"#utility.yul\":4295:4300   */\n  dup2\n    /* \"#utility.yul\":4289:4301   */\n  mload\n    /* \"#utility.yul\":4279:4301   */\n  swap1\n  pop\n    /* \"#utility.yul\":4209:4308   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4314:4494   */\ntag_49:\n    /* \"#utility.yul\":4362:4439   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4359:4360   */\n  0x00\n    /* \"#utility.yul\":4352:4440   */\n  mstore\n    /* \"#utility.yul\":4459:4463   */\n  0x22\n    /* \"#utility.yul\":4456:4457   */\n  0x04\n    /* \"#utility.yul\":4449:4464   */\n  mstore\n    /* \"#utility.yul\":4483:4487   */\n  0x24\n    /* \"#utility.yul\":4480:4481   */\n  0x00\n    /* \"#utility.yul\":4473:4488   */\n  revert\n    /* \"#utility.yul\":4500:4820   */\ntag_50:\n    /* \"#utility.yul\":4544:4550   */\n  0x00\n    /* \"#utility.yul\":4581:4582   */\n  0x02\n    /* \"#utility.yul\":4575:4579   */\n  dup3\n    /* \"#utility.yul\":4571:4583   */\n  div\n    /* \"#utility.yul\":4561:4583   */\n  swap1\n  pop\n    /* \"#utility.yul\":4628:4629   */\n  0x01\n    /* \"#utility.yul\":4622:4626   */\n  dup3\n    /* \"#utility.yul\":4618:4630   */\n  and\n    /* \"#utility.yul\":4649:4667   */\n  dup1\n    /* \"#utility.yul\":4639:4720   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4705:4709   */\n  0x7f\n    /* \"#utility.yul\":4697:4703   */\n  dup3\n    /* \"#utility.yul\":4693:4710   */\n  and\n    /* \"#utility.yul\":4683:4710   */\n  swap2\n  pop\n    /* \"#utility.yul\":4639:4720   */\ntag_124:\n    /* \"#utility.yul\":4767:4769   */\n  0x20\n    /* \"#utility.yul\":4759:4765   */\n  dup3\n    /* \"#utility.yul\":4756:4770   */\n  lt\n    /* \"#utility.yul\":4736:4754   */\n  dup2\n    /* \"#utility.yul\":4733:4771   */\n  sub\n    /* \"#utility.yul\":4730:4814   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4786:4804   */\n  tag_126\n  tag_49\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4730:4814   */\ntag_125:\n    /* \"#utility.yul\":4551:4820   */\n  pop\n    /* \"#utility.yul\":4500:4820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4826:4967   */\ntag_51:\n    /* \"#utility.yul\":4875:4879   */\n  0x00\n    /* \"#utility.yul\":4898:4901   */\n  dup2\n    /* \"#utility.yul\":4890:4901   */\n  swap1\n  pop\n    /* \"#utility.yul\":4921:4924   */\n  dup2\n    /* \"#utility.yul\":4918:4919   */\n  0x00\n    /* \"#utility.yul\":4911:4925   */\n  mstore\n    /* \"#utility.yul\":4955:4959   */\n  0x20\n    /* \"#utility.yul\":4952:4953   */\n  0x00\n    /* \"#utility.yul\":4942:4960   */\n  keccak256\n    /* \"#utility.yul\":4934:4960   */\n  swap1\n  pop\n    /* \"#utility.yul\":4826:4967   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4973:5066   */\ntag_52:\n    /* \"#utility.yul\":5010:5016   */\n  0x00\n    /* \"#utility.yul\":5057:5059   */\n  0x20\n    /* \"#utility.yul\":5052:5054   */\n  0x1f\n    /* \"#utility.yul\":5045:5050   */\n  dup4\n    /* \"#utility.yul\":5041:5055   */\n  add\n    /* \"#utility.yul\":5037:5060   */\n  div\n    /* \"#utility.yul\":5027:5060   */\n  swap1\n  pop\n    /* \"#utility.yul\":4973:5066   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5072:5179   */\ntag_53:\n    /* \"#utility.yul\":5116:5124   */\n  0x00\n    /* \"#utility.yul\":5166:5171   */\n  dup3\n    /* \"#utility.yul\":5160:5164   */\n  dup3\n    /* \"#utility.yul\":5156:5172   */\n  shl\n    /* \"#utility.yul\":5135:5172   */\n  swap1\n  pop\n    /* \"#utility.yul\":5072:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5185:5578   */\ntag_54:\n    /* \"#utility.yul\":5254:5260   */\n  0x00\n    /* \"#utility.yul\":5304:5305   */\n  0x08\n    /* \"#utility.yul\":5292:5302   */\n  dup4\n    /* \"#utility.yul\":5288:5306   */\n  mul\n    /* \"#utility.yul\":5327:5424   */\n  tag_131\n    /* \"#utility.yul\":5357:5423   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5346:5355   */\n  dup3\n    /* \"#utility.yul\":5327:5424   */\n  tag_53\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5445:5484   */\n  tag_132\n    /* \"#utility.yul\":5475:5483   */\n  dup7\n    /* \"#utility.yul\":5464:5473   */\n  dup4\n    /* \"#utility.yul\":5445:5484   */\n  tag_53\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5433:5484   */\n  swap6\n  pop\n    /* \"#utility.yul\":5517:5521   */\n  dup1\n    /* \"#utility.yul\":5513:5522   */\n  not\n    /* \"#utility.yul\":5506:5511   */\n  dup5\n    /* \"#utility.yul\":5502:5523   */\n  and\n    /* \"#utility.yul\":5493:5523   */\n  swap4\n  pop\n    /* \"#utility.yul\":5566:5570   */\n  dup1\n    /* \"#utility.yul\":5556:5564   */\n  dup7\n    /* \"#utility.yul\":5552:5571   */\n  and\n    /* \"#utility.yul\":5545:5550   */\n  dup5\n    /* \"#utility.yul\":5542:5572   */\n  or\n    /* \"#utility.yul\":5532:5572   */\n  swap3\n  pop\n    /* \"#utility.yul\":5261:5578   */\n  pop\n  pop\n    /* \"#utility.yul\":5185:5578   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5584:5644   */\ntag_55:\n    /* \"#utility.yul\":5612:5615   */\n  0x00\n    /* \"#utility.yul\":5633:5638   */\n  dup2\n    /* \"#utility.yul\":5626:5638   */\n  swap1\n  pop\n    /* \"#utility.yul\":5584:5644   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5650:5792   */\ntag_56:\n    /* \"#utility.yul\":5700:5709   */\n  0x00\n    /* \"#utility.yul\":5733:5786   */\n  tag_135\n    /* \"#utility.yul\":5751:5785   */\n  tag_136\n    /* \"#utility.yul\":5760:5784   */\n  tag_137\n    /* \"#utility.yul\":5778:5783   */\n  dup5\n    /* \"#utility.yul\":5760:5784   */\n  tag_45\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5751:5785   */\n  tag_55\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5733:5786   */\n  tag_45\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5720:5786   */\n  swap1\n  pop\n    /* \"#utility.yul\":5650:5792   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5798:5873   */\ntag_57:\n    /* \"#utility.yul\":5841:5844   */\n  0x00\n    /* \"#utility.yul\":5862:5867   */\n  dup2\n    /* \"#utility.yul\":5855:5867   */\n  swap1\n  pop\n    /* \"#utility.yul\":5798:5873   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5879:6148   */\ntag_58:\n    /* \"#utility.yul\":5989:6028   */\n  tag_140\n    /* \"#utility.yul\":6020:6027   */\n  dup4\n    /* \"#utility.yul\":5989:6028   */\n  tag_56\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6050:6141   */\n  tag_141\n    /* \"#utility.yul\":6099:6140   */\n  tag_142\n    /* \"#utility.yul\":6123:6139   */\n  dup3\n    /* \"#utility.yul\":6099:6140   */\n  tag_57\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6091:6097   */\n  dup5\n    /* \"#utility.yul\":6084:6088   */\n  dup5\n    /* \"#utility.yul\":6078:6089   */\n  sload\n    /* \"#utility.yul\":6050:6141   */\n  tag_54\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6044:6048   */\n  dup3\n    /* \"#utility.yul\":6037:6142   */\n  sstore\n    /* \"#utility.yul\":5955:6148   */\n  pop\n    /* \"#utility.yul\":5879:6148   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6154:6227   */\ntag_59:\n    /* \"#utility.yul\":6199:6202   */\n  0x00\n    /* \"#utility.yul\":6154:6227   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6233:6422   */\ntag_60:\n    /* \"#utility.yul\":6310:6342   */\n  tag_145\n  tag_59\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6351:6416   */\n  tag_146\n    /* \"#utility.yul\":6409:6415   */\n  dup2\n    /* \"#utility.yul\":6401:6407   */\n  dup5\n    /* \"#utility.yul\":6395:6399   */\n  dup5\n    /* \"#utility.yul\":6351:6416   */\n  tag_58\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6286:6422   */\n  pop\n    /* \"#utility.yul\":6233:6422   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6428:6614   */\ntag_61:\n    /* \"#utility.yul\":6488:6608   */\ntag_148:\n    /* \"#utility.yul\":6505:6508   */\n  dup2\n    /* \"#utility.yul\":6498:6503   */\n  dup2\n    /* \"#utility.yul\":6495:6509   */\n  lt\n    /* \"#utility.yul\":6488:6608   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":6559:6598   */\n  tag_151\n    /* \"#utility.yul\":6596:6597   */\n  0x00\n    /* \"#utility.yul\":6589:6594   */\n  dup3\n    /* \"#utility.yul\":6559:6598   */\n  tag_60\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6532:6533   */\n  0x01\n    /* \"#utility.yul\":6525:6530   */\n  dup2\n    /* \"#utility.yul\":6521:6534   */\n  add\n    /* \"#utility.yul\":6512:6534   */\n  swap1\n  pop\n    /* \"#utility.yul\":6488:6608   */\n  jump(tag_148)\ntag_150:\n    /* \"#utility.yul\":6428:6614   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6620:7163   */\ntag_62:\n    /* \"#utility.yul\":6721:6723   */\n  0x1f\n    /* \"#utility.yul\":6716:6719   */\n  dup3\n    /* \"#utility.yul\":6713:6724   */\n  gt\n    /* \"#utility.yul\":6710:7156   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":6755:6793   */\n  tag_154\n    /* \"#utility.yul\":6787:6792   */\n  dup2\n    /* \"#utility.yul\":6755:6793   */\n  tag_51\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6839:6868   */\n  tag_155\n    /* \"#utility.yul\":6857:6867   */\n  dup5\n    /* \"#utility.yul\":6839:6868   */\n  tag_52\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6829:6837   */\n  dup2\n    /* \"#utility.yul\":6825:6869   */\n  add\n    /* \"#utility.yul\":7022:7024   */\n  0x20\n    /* \"#utility.yul\":7010:7020   */\n  dup6\n    /* \"#utility.yul\":7007:7025   */\n  lt\n    /* \"#utility.yul\":7004:7053   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":7043:7051   */\n  dup2\n    /* \"#utility.yul\":7028:7051   */\n  swap1\n  pop\n    /* \"#utility.yul\":7004:7053   */\ntag_156:\n    /* \"#utility.yul\":7066:7146   */\n  tag_157\n    /* \"#utility.yul\":7122:7144   */\n  tag_158\n    /* \"#utility.yul\":7140:7143   */\n  dup6\n    /* \"#utility.yul\":7122:7144   */\n  tag_52\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7112:7120   */\n  dup4\n    /* \"#utility.yul\":7108:7145   */\n  add\n    /* \"#utility.yul\":7095:7106   */\n  dup3\n    /* \"#utility.yul\":7066:7146   */\n  tag_61\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6725:7156   */\n  pop\n  pop\n    /* \"#utility.yul\":6710:7156   */\ntag_153:\n    /* \"#utility.yul\":6620:7163   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7169:7286   */\ntag_63:\n    /* \"#utility.yul\":7223:7231   */\n  0x00\n    /* \"#utility.yul\":7273:7278   */\n  dup3\n    /* \"#utility.yul\":7267:7271   */\n  dup3\n    /* \"#utility.yul\":7263:7279   */\n  shr\n    /* \"#utility.yul\":7242:7279   */\n  swap1\n  pop\n    /* \"#utility.yul\":7169:7286   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7292:7461   */\ntag_64:\n    /* \"#utility.yul\":7336:7342   */\n  0x00\n    /* \"#utility.yul\":7369:7420   */\n  tag_161\n    /* \"#utility.yul\":7417:7418   */\n  0x00\n    /* \"#utility.yul\":7413:7419   */\n  not\n    /* \"#utility.yul\":7405:7410   */\n  dup5\n    /* \"#utility.yul\":7402:7403   */\n  0x08\n    /* \"#utility.yul\":7398:7411   */\n  mul\n    /* \"#utility.yul\":7369:7420   */\n  tag_63\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7365:7421   */\n  not\n    /* \"#utility.yul\":7450:7454   */\n  dup1\n    /* \"#utility.yul\":7444:7448   */\n  dup4\n    /* \"#utility.yul\":7440:7455   */\n  and\n    /* \"#utility.yul\":7430:7455   */\n  swap2\n  pop\n    /* \"#utility.yul\":7343:7461   */\n  pop\n    /* \"#utility.yul\":7292:7461   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7466:7761   */\ntag_65:\n    /* \"#utility.yul\":7542:7546   */\n  0x00\n    /* \"#utility.yul\":7688:7717   */\n  tag_163\n    /* \"#utility.yul\":7713:7716   */\n  dup4\n    /* \"#utility.yul\":7707:7711   */\n  dup4\n    /* \"#utility.yul\":7688:7717   */\n  tag_64\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7680:7717   */\n  swap2\n  pop\n    /* \"#utility.yul\":7750:7753   */\n  dup3\n    /* \"#utility.yul\":7747:7748   */\n  0x02\n    /* \"#utility.yul\":7743:7754   */\n  mul\n    /* \"#utility.yul\":7737:7741   */\n  dup3\n    /* \"#utility.yul\":7734:7755   */\n  or\n    /* \"#utility.yul\":7726:7755   */\n  swap1\n  pop\n    /* \"#utility.yul\":7466:7761   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7766:9161   */\ntag_8:\n    /* \"#utility.yul\":7883:7920   */\n  tag_165\n    /* \"#utility.yul\":7916:7919   */\n  dup3\n    /* \"#utility.yul\":7883:7920   */\n  tag_48\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7985:8003   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7977:7983   */\n  dup2\n    /* \"#utility.yul\":7974:8004   */\n  gt\n    /* \"#utility.yul\":7971:8027   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":8007:8025   */\n  tag_167\n  tag_38\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7971:8027   */\ntag_166:\n    /* \"#utility.yul\":8051:8089   */\n  tag_168\n    /* \"#utility.yul\":8083:8087   */\n  dup3\n    /* \"#utility.yul\":8077:8088   */\n  sload\n    /* \"#utility.yul\":8051:8089   */\n  tag_50\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8136:8203   */\n  tag_169\n    /* \"#utility.yul\":8196:8202   */\n  dup3\n    /* \"#utility.yul\":8188:8194   */\n  dup3\n    /* \"#utility.yul\":8182:8186   */\n  dup6\n    /* \"#utility.yul\":8136:8203   */\n  tag_62\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8230:8231   */\n  0x00\n    /* \"#utility.yul\":8254:8258   */\n  0x20\n    /* \"#utility.yul\":8241:8258   */\n  swap1\n  pop\n    /* \"#utility.yul\":8286:8288   */\n  0x1f\n    /* \"#utility.yul\":8278:8284   */\n  dup4\n    /* \"#utility.yul\":8275:8289   */\n  gt\n    /* \"#utility.yul\":8303:8304   */\n  0x01\n    /* \"#utility.yul\":8298:8916   */\n  dup2\n  eq\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8960:8961   */\n  0x00\n    /* \"#utility.yul\":8977:8983   */\n  dup5\n    /* \"#utility.yul\":8974:9051   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":9026:9035   */\n  dup3\n    /* \"#utility.yul\":9021:9024   */\n  dup8\n    /* \"#utility.yul\":9017:9036   */\n  add\n    /* \"#utility.yul\":9011:9037   */\n  mload\n    /* \"#utility.yul\":9002:9037   */\n  swap1\n  pop\n    /* \"#utility.yul\":8974:9051   */\ntag_172:\n    /* \"#utility.yul\":9077:9144   */\n  tag_173\n    /* \"#utility.yul\":9137:9143   */\n  dup6\n    /* \"#utility.yul\":9130:9135   */\n  dup3\n    /* \"#utility.yul\":9077:9144   */\n  tag_65\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":9071:9075   */\n  dup7\n    /* \"#utility.yul\":9064:9145   */\n  sstore\n    /* \"#utility.yul\":8933:9155   */\n  pop\n    /* \"#utility.yul\":8268:9155   */\n  jump(tag_170)\n    /* \"#utility.yul\":8298:8916   */\ntag_171:\n    /* \"#utility.yul\":8350:8354   */\n  0x1f\n    /* \"#utility.yul\":8346:8355   */\n  not\n    /* \"#utility.yul\":8338:8344   */\n  dup5\n    /* \"#utility.yul\":8334:8356   */\n  and\n    /* \"#utility.yul\":8384:8421   */\n  tag_174\n    /* \"#utility.yul\":8416:8420   */\n  dup7\n    /* \"#utility.yul\":8384:8421   */\n  tag_51\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8443:8444   */\n  0x00\n    /* \"#utility.yul\":8457:8665   */\ntag_175:\n    /* \"#utility.yul\":8471:8478   */\n  dup3\n    /* \"#utility.yul\":8468:8469   */\n  dup2\n    /* \"#utility.yul\":8465:8479   */\n  lt\n    /* \"#utility.yul\":8457:8665   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":8550:8559   */\n  dup5\n    /* \"#utility.yul\":8545:8548   */\n  dup10\n    /* \"#utility.yul\":8541:8560   */\n  add\n    /* \"#utility.yul\":8535:8561   */\n  mload\n    /* \"#utility.yul\":8527:8533   */\n  dup3\n    /* \"#utility.yul\":8520:8562   */\n  sstore\n    /* \"#utility.yul\":8601:8602   */\n  0x01\n    /* \"#utility.yul\":8593:8599   */\n  dup3\n    /* \"#utility.yul\":8589:8603   */\n  add\n    /* \"#utility.yul\":8579:8603   */\n  swap2\n  pop\n    /* \"#utility.yul\":8648:8650   */\n  0x20\n    /* \"#utility.yul\":8637:8646   */\n  dup6\n    /* \"#utility.yul\":8633:8651   */\n  add\n    /* \"#utility.yul\":8620:8651   */\n  swap5\n  pop\n    /* \"#utility.yul\":8494:8498   */\n  0x20\n    /* \"#utility.yul\":8491:8492   */\n  dup2\n    /* \"#utility.yul\":8487:8499   */\n  add\n    /* \"#utility.yul\":8482:8499   */\n  swap1\n  pop\n    /* \"#utility.yul\":8457:8665   */\n  jump(tag_175)\ntag_177:\n    /* \"#utility.yul\":8693:8699   */\n  dup7\n    /* \"#utility.yul\":8684:8691   */\n  dup4\n    /* \"#utility.yul\":8681:8700   */\n  lt\n    /* \"#utility.yul\":8678:8857   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8751:8760   */\n  dup5\n    /* \"#utility.yul\":8746:8749   */\n  dup10\n    /* \"#utility.yul\":8742:8761   */\n  add\n    /* \"#utility.yul\":8736:8762   */\n  mload\n    /* \"#utility.yul\":8794:8842   */\n  tag_179\n    /* \"#utility.yul\":8836:8840   */\n  0x1f\n    /* \"#utility.yul\":8828:8834   */\n  dup10\n    /* \"#utility.yul\":8824:8841   */\n  and\n    /* \"#utility.yul\":8813:8822   */\n  dup3\n    /* \"#utility.yul\":8794:8842   */\n  tag_64\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8786:8792   */\n  dup4\n    /* \"#utility.yul\":8779:8843   */\n  sstore\n    /* \"#utility.yul\":8701:8857   */\n  pop\n    /* \"#utility.yul\":8678:8857   */\ntag_178:\n    /* \"#utility.yul\":8903:8904   */\n  0x01\n    /* \"#utility.yul\":8899:8900   */\n  0x02\n    /* \"#utility.yul\":8891:8897   */\n  dup9\n    /* \"#utility.yul\":8887:8901   */\n  mul\n    /* \"#utility.yul\":8883:8905   */\n  add\n    /* \"#utility.yul\":8877:8881   */\n  dup9\n    /* \"#utility.yul\":8870:8906   */\n  sstore\n    /* \"#utility.yul\":8305:8916   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8268:9155   */\ntag_170:\n  pop\n    /* \"#utility.yul\":7858:9161   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7766:9161   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9167:9293   */\ntag_66:\n    /* \"#utility.yul\":9204:9211   */\n  0x00\n    /* \"#utility.yul\":9244:9286   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9237:9242   */\n  dup3\n    /* \"#utility.yul\":9233:9287   */\n  and\n    /* \"#utility.yul\":9222:9287   */\n  swap1\n  pop\n    /* \"#utility.yul\":9167:9293   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9299:9395   */\ntag_67:\n    /* \"#utility.yul\":9336:9343   */\n  0x00\n    /* \"#utility.yul\":9365:9389   */\n  tag_182\n    /* \"#utility.yul\":9383:9388   */\n  dup3\n    /* \"#utility.yul\":9365:9389   */\n  tag_66\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":9354:9389   */\n  swap1\n  pop\n    /* \"#utility.yul\":9299:9395   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9401:9519   */\ntag_68:\n    /* \"#utility.yul\":9488:9512   */\n  tag_184\n    /* \"#utility.yul\":9506:9511   */\n  dup2\n    /* \"#utility.yul\":9488:9512   */\n  tag_67\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9483:9486   */\n  dup3\n    /* \"#utility.yul\":9476:9513   */\n  mstore\n    /* \"#utility.yul\":9401:9519   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9525:9747   */\ntag_17:\n    /* \"#utility.yul\":9618:9622   */\n  0x00\n    /* \"#utility.yul\":9656:9658   */\n  0x20\n    /* \"#utility.yul\":9645:9654   */\n  dup3\n    /* \"#utility.yul\":9641:9659   */\n  add\n    /* \"#utility.yul\":9633:9659   */\n  swap1\n  pop\n    /* \"#utility.yul\":9669:9740   */\n  tag_186\n    /* \"#utility.yul\":9737:9738   */\n  0x00\n    /* \"#utility.yul\":9726:9735   */\n  dup4\n    /* \"#utility.yul\":9722:9739   */\n  add\n    /* \"#utility.yul\":9713:9719   */\n  dup5\n    /* \"#utility.yul\":9669:9740   */\n  tag_68\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9525:9747   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9753:9933   */\ntag_69:\n    /* \"#utility.yul\":9801:9878   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9798:9799   */\n  0x00\n    /* \"#utility.yul\":9791:9879   */\n  mstore\n    /* \"#utility.yul\":9898:9902   */\n  0x11\n    /* \"#utility.yul\":9895:9896   */\n  0x04\n    /* \"#utility.yul\":9888:9903   */\n  mstore\n    /* \"#utility.yul\":9922:9926   */\n  0x24\n    /* \"#utility.yul\":9919:9920   */\n  0x00\n    /* \"#utility.yul\":9912:9927   */\n  revert\n    /* \"#utility.yul\":9939:10130   */\ntag_23:\n    /* \"#utility.yul\":9979:9982   */\n  0x00\n    /* \"#utility.yul\":9998:10018   */\n  tag_189\n    /* \"#utility.yul\":10016:10017   */\n  dup3\n    /* \"#utility.yul\":9998:10018   */\n  tag_45\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9993:10018   */\n  swap2\n  pop\n    /* \"#utility.yul\":10032:10052   */\n  tag_190\n    /* \"#utility.yul\":10050:10051   */\n  dup4\n    /* \"#utility.yul\":10032:10052   */\n  tag_45\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":10027:10052   */\n  swap3\n  pop\n    /* \"#utility.yul\":10075:10076   */\n  dup3\n    /* \"#utility.yul\":10072:10073   */\n  dup3\n    /* \"#utility.yul\":10068:10077   */\n  add\n    /* \"#utility.yul\":10061:10077   */\n  swap1\n  pop\n    /* \"#utility.yul\":10096:10099   */\n  dup1\n    /* \"#utility.yul\":10093:10094   */\n  dup3\n    /* \"#utility.yul\":10090:10100   */\n  gt\n    /* \"#utility.yul\":10087:10123   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":10103:10121   */\n  tag_192\n  tag_69\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":10087:10123   */\ntag_191:\n    /* \"#utility.yul\":9939:10130   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10136:10254   */\ntag_70:\n    /* \"#utility.yul\":10223:10247   */\n  tag_194\n    /* \"#utility.yul\":10241:10246   */\n  dup2\n    /* \"#utility.yul\":10223:10247   */\n  tag_45\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":10218:10221   */\n  dup3\n    /* \"#utility.yul\":10211:10248   */\n  mstore\n    /* \"#utility.yul\":10136:10254   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10260:10702   */\ntag_27:\n    /* \"#utility.yul\":10409:10413   */\n  0x00\n    /* \"#utility.yul\":10447:10449   */\n  0x60\n    /* \"#utility.yul\":10436:10445   */\n  dup3\n    /* \"#utility.yul\":10432:10450   */\n  add\n    /* \"#utility.yul\":10424:10450   */\n  swap1\n  pop\n    /* \"#utility.yul\":10460:10531   */\n  tag_196\n    /* \"#utility.yul\":10528:10529   */\n  0x00\n    /* \"#utility.yul\":10517:10526   */\n  dup4\n    /* \"#utility.yul\":10513:10530   */\n  add\n    /* \"#utility.yul\":10504:10510   */\n  dup7\n    /* \"#utility.yul\":10460:10531   */\n  tag_68\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":10541:10613   */\n  tag_197\n    /* \"#utility.yul\":10609:10611   */\n  0x20\n    /* \"#utility.yul\":10598:10607   */\n  dup4\n    /* \"#utility.yul\":10594:10612   */\n  add\n    /* \"#utility.yul\":10585:10591   */\n  dup6\n    /* \"#utility.yul\":10541:10613   */\n  tag_70\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10623:10695   */\n  tag_198\n    /* \"#utility.yul\":10691:10693   */\n  0x40\n    /* \"#utility.yul\":10680:10689   */\n  dup4\n    /* \"#utility.yul\":10676:10694   */\n  add\n    /* \"#utility.yul\":10667:10673   */\n  dup5\n    /* \"#utility.yul\":10623:10695   */\n  tag_70\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":10260:10702   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10708:10930   */\ntag_31:\n    /* \"#utility.yul\":10801:10805   */\n  0x00\n    /* \"#utility.yul\":10839:10841   */\n  0x20\n    /* \"#utility.yul\":10828:10837   */\n  dup3\n    /* \"#utility.yul\":10824:10842   */\n  add\n    /* \"#utility.yul\":10816:10842   */\n  swap1\n  pop\n    /* \"#utility.yul\":10852:10923   */\n  tag_200\n    /* \"#utility.yul\":10920:10921   */\n  0x00\n    /* \"#utility.yul\":10909:10918   */\n  dup4\n    /* \"#utility.yul\":10905:10922   */\n  add\n    /* \"#utility.yul\":10896:10902   */\n  dup5\n    /* \"#utility.yul\":10852:10923   */\n  tag_70\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10708:10930   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":241:645  contract MyERC20TokenOZ is ERC20 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":241:645  contract MyERC20TokenOZ is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2075:2164  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4294:4480  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3145:3242  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5040:5284  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":541:643  function decimals() public view override returns (uint8) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3300:3416  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2277:2370  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3611:3789  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3847:3987  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2075:2164  function name() public view virtual returns (string memory) {... */\n    tag_14:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2120:2133  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2152:2157  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2145:2157  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2075:2164  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4294:4480  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4367:4371  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4383:4396  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4399:4411  _msgSender() */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4399:4409  _msgSender */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4399:4411  _msgSender() */\n      jump\t// in\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4383:4411  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4421:4452  _approve(owner, spender, value) */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4430:4435  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4437:4444  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4446:4451  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4421:4429  _approve */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4421:4452  _approve(owner, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4469:4473  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4462:4473  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":4294:4480  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3145:3242  function totalSupply() public view virtual returns (uint256) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3197:3204  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3223:3235  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3216:3235  return _totalSupply */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3145:3242  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5040:5284  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5127:5131  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5143:5158  address spender */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5161:5173  _msgSender() */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5161:5171  _msgSender */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5161:5173  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5143:5173  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5183:5220  _spendAllowance(from, spender, value) */\n      tag_68\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5199:5203  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5205:5212  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5214:5219  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5183:5198  _spendAllowance */\n      tag_69\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5183:5220  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5230:5256  _transfer(from, to, value) */\n      tag_70\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5240:5244  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5246:5248  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5250:5255  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5230:5239  _transfer */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5230:5256  _transfer(from, to, value) */\n      jump\t// in\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5273:5277  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5266:5277  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5040:5284  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":541:643  function decimals() public view override returns (uint8) {... */\n    tag_33:\n        /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":591:596  uint8 */\n      0x00\n        /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":621:635  token_decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":608:636  return uint8(token_decimals) */\n      swap1\n      pop\n        /* \"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":541:643  function decimals() public view override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3300:3416  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3365:3372  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3391:3400  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3391:3409  _balances[account] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3401:3408  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3391:3409  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3384:3409  return _balances[account] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3300:3416  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2277:2370  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2324:2337  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2356:2363  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2349:2363  return _symbol */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_55\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_55\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":2277:2370  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3611:3789  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3680:3684  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3696:3709  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3712:3724  _msgSender() */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3712:3722  _msgSender */\n      tag_62\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3712:3724  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3696:3724  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3734:3761  _transfer(owner, to, value) */\n      tag_82\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3744:3749  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3751:3753  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3755:3760  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3734:3743  _transfer */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3734:3761  _transfer(owner, to, value) */\n      jump\t// in\n    tag_82:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3778:3782  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3771:3782  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3611:3789  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3847:3987  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3927:3934  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3953:3964  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3953:3971  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3965:3970  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3953:3971  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3953:3980  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3972:3979  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3953:3980  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3946:3980  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":3847:3987  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8990:9118  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9074:9111  _approve(owner, spender, value, true) */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9083:9088  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9090:9097  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9099:9104  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9106:9110  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9074:9082  _approve */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9074:9111  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":8990:9118  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10664:11141  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10763:10787  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10790:10815  allowance(owner, spender) */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10800:10805  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10807:10814  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10790:10799  allowance */\n      tag_51\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10790:10815  allowance(owner, spender) */\n      jump\t// in\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10763:10815  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10849:10866  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10829:10866  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10825:11135  if (currentAllowance != type(uint256).max) {... */\n      tag_90\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10905:10910  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10886:10902  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10886:10910  currentAllowance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10882:11012  if (currentAllowance < value) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10964:10971  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10973:10989  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10991:10996  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10937:10997  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10882:11012  if (currentAllowance < value) {... */\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11053:11110  _approve(owner, spender, currentAllowance - value, false) */\n      tag_94\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11062:11067  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11069:11076  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11097:11102  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11078:11094  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11078:11102  currentAllowance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11104:11109  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11053:11061  _approve */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":11053:11110  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10825:11135  if (currentAllowance != type(uint256).max) {... */\n    tag_90:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10753:11141  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10664:11141  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5657:5957  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5756:5757  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5740:5758  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5740:5744  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5740:5758  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5736:5822  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5808:5809  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5781:5811  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5736:5822  if (from == address(0)) {... */\n    tag_96:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5849:5850  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5835:5851  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5835:5837  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5835:5851  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5831:5917  if (to == address(0)) {... */\n      tag_99\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5903:5904  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5874:5906  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5831:5917  if (to == address(0)) {... */\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5926:5950  _update(from, to, value) */\n      tag_101\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5934:5938  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5940:5942  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5944:5949  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5926:5933  _update */\n      tag_102\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5926:5950  _update(from, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":5657:5957  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9950:10382  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10079:10080  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10062:10081  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10062:10067  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10062:10081  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10058:10147  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10133:10134  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10104:10136  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10058:10147  if (owner == address(0)) {... */\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10179:10180  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10160:10181  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10160:10167  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10160:10181  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10156:10246  if (spender == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10232:10233  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10204:10235  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10156:10246  if (spender == address(0)) {... */\n    tag_106:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10285:10290  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10255:10266  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10255:10273  _allowances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10267:10272  owner */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10255:10273  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10255:10282  _allowances[owner][spender] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10274:10281  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10255:10282  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10255:10290  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10304:10313  emitEvent */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10300:10376  if (emitEvent) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10350:10357  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10334:10365  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10343:10348  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10334:10365  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10359:10364  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10334:10365  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":10300:10376  if (emitEvent) {... */\n    tag_108:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":9950:10382  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6272:7379  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_102:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6377:6378  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6361:6379  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6361:6365  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6361:6379  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6357:6897  if (from == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6513:6518  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6497:6509  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6497:6518  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6357:6897  if (from == address(0)) {... */\n      jump(tag_114)\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6549:6568  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6549:6586  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6618:6623  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6604:6615  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6604:6623  fromBalance < value */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6600:6715  if (fromBalance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6675:6679  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6681:6692  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6694:6699  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6650:6700  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6600:6715  if (fromBalance < value) {... */\n    tag_115:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6867:6872  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6853:6864  fromBalance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6853:6872  fromBalance - value */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6835:6844  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6835:6850  _balances[from] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6845:6849  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6835:6850  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6835:6872  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6535:6897  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6357:6897  if (from == address(0)) {... */\n    tag_114:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6925:6926  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6911:6927  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6911:6913  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6911:6927  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6907:7332  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7090:7095  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7074:7086  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7074:7095  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6907:7332  if (to == address(0)) {... */\n      jump(tag_118)\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7302:7307  value */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7285:7294  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7285:7298  _balances[to] */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7295:7297  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7285:7298  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7285:7307  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6907:7332  if (to == address(0)) {... */\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7362:7364  to */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7347:7372  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7356:7360  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7347:7372  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7366:7371  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":7347:7372  Transfer(from, to, value) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":6272:7379  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_120:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_121:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_122:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_147:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_147)\n    tag_149:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_123:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_124:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_152\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_120\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":818:889   */\n      tag_153\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_121\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_154\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_122\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":988:1017   */\n      tag_155\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_123\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_16:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_157\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_124\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_126:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_128:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_129:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_163\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_128\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_130:\n        /* \"#utility.yul\":1983:2007   */\n      tag_165\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_129\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_166:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_131:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_168\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_130\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_132:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_133:\n        /* \"#utility.yul\":2339:2363   */\n      tag_171\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_132\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_172:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_134:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_174\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_133\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_19:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_177\n      tag_126\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2632:2751   */\n    tag_176:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_178\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_131\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_179\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_134\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_135:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_136:\n        /* \"#utility.yul\":3196:3217   */\n      tag_182\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_135\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_22:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_184\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_136\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_137:\n        /* \"#utility.yul\":3533:3557   */\n      tag_186\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_132\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_26:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_188\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_137\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_29:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_191\n      tag_126\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3908:4027   */\n    tag_190:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_192\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_131\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_193\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_131\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_194\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_134\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_138:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_139:\n        /* \"#utility.yul\":4598:4620   */\n      tag_197\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_138\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_35:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_199\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_139\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_38:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_202\n      tag_126\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4929:5048   */\n    tag_201:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_203\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_131\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_50:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_206\n      tag_126\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5281:5400   */\n    tag_205:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_207\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_131\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_208\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_131\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_140:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_55:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_211:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_213\n      tag_140\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6084:6168   */\n    tag_212:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6298   */\n    tag_141:\n        /* \"#utility.yul\":6267:6291   */\n      tag_215\n        /* \"#utility.yul\":6285:6290   */\n      dup2\n        /* \"#utility.yul\":6267:6291   */\n      tag_129\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6262:6265   */\n      dup3\n        /* \"#utility.yul\":6255:6292   */\n      mstore\n        /* \"#utility.yul\":6180:6298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6304:6746   */\n    tag_93:\n        /* \"#utility.yul\":6453:6457   */\n      0x00\n        /* \"#utility.yul\":6491:6493   */\n      0x60\n        /* \"#utility.yul\":6480:6489   */\n      dup3\n        /* \"#utility.yul\":6476:6494   */\n      add\n        /* \"#utility.yul\":6468:6494   */\n      swap1\n      pop\n        /* \"#utility.yul\":6504:6575   */\n      tag_217\n        /* \"#utility.yul\":6572:6573   */\n      0x00\n        /* \"#utility.yul\":6561:6570   */\n      dup4\n        /* \"#utility.yul\":6557:6574   */\n      add\n        /* \"#utility.yul\":6548:6554   */\n      dup7\n        /* \"#utility.yul\":6504:6575   */\n      tag_141\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6585:6657   */\n      tag_218\n        /* \"#utility.yul\":6653:6655   */\n      0x20\n        /* \"#utility.yul\":6642:6651   */\n      dup4\n        /* \"#utility.yul\":6638:6656   */\n      add\n        /* \"#utility.yul\":6629:6635   */\n      dup6\n        /* \"#utility.yul\":6585:6657   */\n      tag_137\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6667:6739   */\n      tag_219\n        /* \"#utility.yul\":6735:6737   */\n      0x40\n        /* \"#utility.yul\":6724:6733   */\n      dup4\n        /* \"#utility.yul\":6720:6738   */\n      add\n        /* \"#utility.yul\":6711:6717   */\n      dup5\n        /* \"#utility.yul\":6667:6739   */\n      tag_137\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6304:6746   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6752:6974   */\n    tag_98:\n        /* \"#utility.yul\":6845:6849   */\n      0x00\n        /* \"#utility.yul\":6883:6885   */\n      0x20\n        /* \"#utility.yul\":6872:6881   */\n      dup3\n        /* \"#utility.yul\":6868:6886   */\n      add\n        /* \"#utility.yul\":6860:6886   */\n      swap1\n      pop\n        /* \"#utility.yul\":6896:6967   */\n      tag_221\n        /* \"#utility.yul\":6964:6965   */\n      0x00\n        /* \"#utility.yul\":6953:6962   */\n      dup4\n        /* \"#utility.yul\":6949:6966   */\n      add\n        /* \"#utility.yul\":6940:6946   */\n      dup5\n        /* \"#utility.yul\":6896:6967   */\n      tag_141\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6752:6974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7160   */\n    tag_142:\n        /* \"#utility.yul\":7028:7105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7106   */\n      mstore\n        /* \"#utility.yul\":7125:7129   */\n      0x11\n        /* \"#utility.yul\":7122:7123   */\n      0x04\n        /* \"#utility.yul\":7115:7130   */\n      mstore\n        /* \"#utility.yul\":7149:7153   */\n      0x24\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7154   */\n      revert\n        /* \"#utility.yul\":7166:7357   */\n    tag_113:\n        /* \"#utility.yul\":7206:7209   */\n      0x00\n        /* \"#utility.yul\":7225:7245   */\n      tag_224\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7225:7245   */\n      tag_132\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7220:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7259:7279   */\n      tag_225\n        /* \"#utility.yul\":7277:7278   */\n      dup4\n        /* \"#utility.yul\":7259:7279   */\n      tag_132\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7254:7279   */\n      swap3\n      pop\n        /* \"#utility.yul\":7302:7303   */\n      dup3\n        /* \"#utility.yul\":7299:7300   */\n      dup3\n        /* \"#utility.yul\":7295:7304   */\n      add\n        /* \"#utility.yul\":7288:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7326   */\n      dup1\n        /* \"#utility.yul\":7320:7321   */\n      dup3\n        /* \"#utility.yul\":7317:7327   */\n      gt\n        /* \"#utility.yul\":7314:7350   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":7330:7348   */\n      tag_227\n      tag_142\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7314:7350   */\n    tag_226:\n        /* \"#utility.yul\":7166:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f90e0ded08b7c39681fc1700f533ca663905923552b1069f86604ae8faae66e664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_540": {
									"entryPoint": 148,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_507": {
									"entryPoint": 286,
									"id": 507,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1462,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10933:6",
										"nodeType": "YulBlock",
										"src": "0:10933:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:184:6",
													"nodeType": "YulBlock",
													"src": "1672:184:6",
													"statements": [
														{
															"nativeSrc": "1682:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:6",
																"nodeType": "YulLiteral",
																"src": "1691:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:6",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:6",
																"nodeType": "YulBlock",
																"src": "1751:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:6"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:6"
																					},
																					"nativeSrc": "1772:11:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:6"
																							},
																							"nativeSrc": "1791:11:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:6"
																					},
																					"nativeSrc": "1785:18:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:6"
																			},
																			"nativeSrc": "1765:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:6"
																		},
																		"nativeSrc": "1765:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:6"
																},
																"nativeSrc": "1709:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:6"
															},
															"nativeSrc": "1701:113:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:6",
																"nodeType": "YulBlock",
																"src": "1723:19:6",
																"statements": [
																	{
																		"nativeSrc": "1725:15:6",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:6",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:6"
																			},
																			"nativeSrc": "1730:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:6",
																"nodeType": "YulBlock",
																"src": "1705:3:6",
																"statements": []
															},
															"src": "1701:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:6"
																		},
																		"nativeSrc": "1830:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:6"
																},
																"nativeSrc": "1823:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:6"
															},
															"nativeSrc": "1823:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:246:6"
											},
											{
												"body": {
													"nativeSrc": "1957:339:6",
													"nodeType": "YulBlock",
													"src": "1957:339:6",
													"statements": [
														{
															"nativeSrc": "1967:75:6",
															"nodeType": "YulAssignment",
															"src": "1967:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:6"
																		},
																		"nativeSrc": "1992:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:6"
																},
																"nativeSrc": "1976:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:6"
																},
																"nativeSrc": "2051:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:6"
															},
															"nativeSrc": "2051:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:6"
														},
														{
															"nativeSrc": "2081:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:6"
																},
																"nativeSrc": "2092:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:6",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:6",
																"nodeType": "YulBlock",
																"src": "2146:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:6"
																			},
																			"nativeSrc": "2148:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:6"
																		},
																		"nativeSrc": "2148:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:6"
																		},
																		"nativeSrc": "2123:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:6"
																},
																"nativeSrc": "2120:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:6"
															},
															"nativeSrc": "2117:112:6",
															"nodeType": "YulIf",
															"src": "2117:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:6"
																},
																"nativeSrc": "2238:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:6"
															},
															"nativeSrc": "2238:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:6",
														"nodeType": "YulTypedName",
														"src": "1930:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:6",
														"nodeType": "YulTypedName",
														"src": "1935:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:6",
														"nodeType": "YulTypedName",
														"src": "1943:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:6",
														"nodeType": "YulTypedName",
														"src": "1951:5:6",
														"type": ""
													}
												],
												"src": "1862:434:6"
											},
											{
												"body": {
													"nativeSrc": "2389:282:6",
													"nodeType": "YulBlock",
													"src": "2389:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:6",
																"nodeType": "YulBlock",
																"src": "2438:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:6"
																			},
																			"nativeSrc": "2440:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:6"
																		},
																		"nativeSrc": "2440:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:6"
																				},
																				"nativeSrc": "2413:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:6"
																		},
																		"nativeSrc": "2409:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:6"
																},
																"nativeSrc": "2402:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:6"
															},
															"nativeSrc": "2399:122:6",
															"nodeType": "YulIf",
															"src": "2399:122:6"
														},
														{
															"nativeSrc": "2530:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:6"
																},
																"nativeSrc": "2544:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:6",
															"nodeType": "YulAssignment",
															"src": "2566:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:6"
																		},
																		"nativeSrc": "2634:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:6"
																},
																"nativeSrc": "2575:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:6",
														"nodeType": "YulTypedName",
														"src": "2367:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:6",
														"nodeType": "YulTypedName",
														"src": "2375:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:6",
														"nodeType": "YulTypedName",
														"src": "2383:5:6",
														"type": ""
													}
												],
												"src": "2316:355:6"
											},
											{
												"body": {
													"nativeSrc": "2722:32:6",
													"nodeType": "YulBlock",
													"src": "2722:32:6",
													"statements": [
														{
															"nativeSrc": "2732:16:6",
															"nodeType": "YulAssignment",
															"src": "2732:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2743:5:6",
																"nodeType": "YulIdentifier",
																"src": "2743:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2732:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2677:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2704:5:6",
														"nodeType": "YulTypedName",
														"src": "2704:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2714:7:6",
														"nodeType": "YulTypedName",
														"src": "2714:7:6",
														"type": ""
													}
												],
												"src": "2677:77:6"
											},
											{
												"body": {
													"nativeSrc": "2803:79:6",
													"nodeType": "YulBlock",
													"src": "2803:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2860:16:6",
																"nodeType": "YulBlock",
																"src": "2860:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2869:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2872:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2862:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:6"
																			},
																			"nativeSrc": "2862:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:6"
																		},
																		"nativeSrc": "2862:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2826:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2826:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2851:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2833:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2833:17:6"
																				},
																				"nativeSrc": "2833:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2833:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2823:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2823:2:6"
																		},
																		"nativeSrc": "2823:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2823:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2816:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:6"
																},
																"nativeSrc": "2816:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2816:43:6"
															},
															"nativeSrc": "2813:63:6",
															"nodeType": "YulIf",
															"src": "2813:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2760:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2796:5:6",
														"nodeType": "YulTypedName",
														"src": "2796:5:6",
														"type": ""
													}
												],
												"src": "2760:122:6"
											},
											{
												"body": {
													"nativeSrc": "2951:80:6",
													"nodeType": "YulBlock",
													"src": "2951:80:6",
													"statements": [
														{
															"nativeSrc": "2961:22:6",
															"nodeType": "YulAssignment",
															"src": "2961:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2976:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2970:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:6"
																},
																"nativeSrc": "2970:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2970:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2961:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3019:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3019:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2992:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2992:26:6"
																},
																"nativeSrc": "2992:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2992:33:6"
															},
															"nativeSrc": "2992:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2992:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2888:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2929:6:6",
														"nodeType": "YulTypedName",
														"src": "2929:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2937:3:6",
														"nodeType": "YulTypedName",
														"src": "2937:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2945:5:6",
														"nodeType": "YulTypedName",
														"src": "2945:5:6",
														"type": ""
													}
												],
												"src": "2888:143:6"
											},
											{
												"body": {
													"nativeSrc": "3185:1018:6",
													"nodeType": "YulBlock",
													"src": "3185:1018:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3232:83:6",
																"nodeType": "YulBlock",
																"src": "3232:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3234:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3234:77:6"
																			},
																			"nativeSrc": "3234:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3234:79:6"
																		},
																		"nativeSrc": "3234:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3234:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3206:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3206:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3215:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3215:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3202:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:6"
																		},
																		"nativeSrc": "3202:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3202:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3227:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3227:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3198:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3198:3:6"
																},
																"nativeSrc": "3198:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3198:33:6"
															},
															"nativeSrc": "3195:120:6",
															"nodeType": "YulIf",
															"src": "3195:120:6"
														},
														{
															"nativeSrc": "3325:291:6",
															"nodeType": "YulBlock",
															"src": "3325:291:6",
															"statements": [
																{
																	"nativeSrc": "3340:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3340:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3364:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3364:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3375:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3375:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3360:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3360:3:6"
																				},
																				"nativeSrc": "3360:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3360:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3354:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3354:5:6"
																		},
																		"nativeSrc": "3354:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3354:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3344:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3344:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3425:83:6",
																		"nodeType": "YulBlock",
																		"src": "3425:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3427:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3427:77:6"
																					},
																					"nativeSrc": "3427:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3427:79:6"
																				},
																				"nativeSrc": "3427:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3427:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3397:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3397:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3405:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3405:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3394:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3394:2:6"
																		},
																		"nativeSrc": "3394:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:30:6"
																	},
																	"nativeSrc": "3391:117:6",
																	"nodeType": "YulIf",
																	"src": "3391:117:6"
																},
																{
																	"nativeSrc": "3522:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3522:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3578:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3578:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3589:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3589:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3574:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3574:3:6"
																				},
																				"nativeSrc": "3574:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3574:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3598:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3598:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3532:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3532:41:6"
																		},
																		"nativeSrc": "3532:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3532:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3522:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3522:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3626:292:6",
															"nodeType": "YulBlock",
															"src": "3626:292:6",
															"statements": [
																{
																	"nativeSrc": "3641:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3641:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3665:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3665:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3676:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3676:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3661:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3661:3:6"
																				},
																				"nativeSrc": "3661:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3661:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3655:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3655:5:6"
																		},
																		"nativeSrc": "3655:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3655:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3645:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3645:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3727:83:6",
																		"nodeType": "YulBlock",
																		"src": "3727:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3729:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3729:77:6"
																					},
																					"nativeSrc": "3729:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3729:79:6"
																				},
																				"nativeSrc": "3729:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3729:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3699:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3699:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3707:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3707:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3696:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3696:2:6"
																		},
																		"nativeSrc": "3696:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3696:30:6"
																	},
																	"nativeSrc": "3693:117:6",
																	"nodeType": "YulIf",
																	"src": "3693:117:6"
																},
																{
																	"nativeSrc": "3824:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3824:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3880:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3880:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3891:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3891:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3876:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3876:3:6"
																				},
																				"nativeSrc": "3876:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3876:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3900:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3900:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3834:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3834:41:6"
																		},
																		"nativeSrc": "3834:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3834:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3824:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3824:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3928:129:6",
															"nodeType": "YulBlock",
															"src": "3928:129:6",
															"statements": [
																{
																	"nativeSrc": "3943:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3943:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3957:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3957:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3947:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3947:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3973:74:6",
																	"nodeType": "YulAssignment",
																	"src": "3973:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4019:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4019:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4030:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4030:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4015:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4015:3:6"
																				},
																				"nativeSrc": "4015:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4015:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4039:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4039:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3983:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "3983:31:6"
																		},
																		"nativeSrc": "3983:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3983:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3973:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3973:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4067:129:6",
															"nodeType": "YulBlock",
															"src": "4067:129:6",
															"statements": [
																{
																	"nativeSrc": "4082:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4082:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4096:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4096:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4086:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4086:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4112:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4112:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4158:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4158:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4169:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4169:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4154:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4154:3:6"
																				},
																				"nativeSrc": "4154:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4154:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4178:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4178:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4122:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4122:31:6"
																		},
																		"nativeSrc": "4122:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4122:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4112:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory",
												"nativeSrc": "3037:1166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3131:9:6",
														"nodeType": "YulTypedName",
														"src": "3131:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3142:7:6",
														"nodeType": "YulTypedName",
														"src": "3142:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3154:6:6",
														"nodeType": "YulTypedName",
														"src": "3154:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3162:6:6",
														"nodeType": "YulTypedName",
														"src": "3162:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3170:6:6",
														"nodeType": "YulTypedName",
														"src": "3170:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3178:6:6",
														"nodeType": "YulTypedName",
														"src": "3178:6:6",
														"type": ""
													}
												],
												"src": "3037:1166:6"
											},
											{
												"body": {
													"nativeSrc": "4268:40:6",
													"nodeType": "YulBlock",
													"src": "4268:40:6",
													"statements": [
														{
															"nativeSrc": "4279:22:6",
															"nodeType": "YulAssignment",
															"src": "4279:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4295:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4295:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4289:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4289:5:6"
																},
																"nativeSrc": "4289:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4289:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4279:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4279:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4209:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4251:5:6",
														"nodeType": "YulTypedName",
														"src": "4251:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4261:6:6",
														"nodeType": "YulTypedName",
														"src": "4261:6:6",
														"type": ""
													}
												],
												"src": "4209:99:6"
											},
											{
												"body": {
													"nativeSrc": "4342:152:6",
													"nodeType": "YulBlock",
													"src": "4342:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4359:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4359:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4362:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4362:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4352:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4352:6:6"
																},
																"nativeSrc": "4352:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4352:88:6"
															},
															"nativeSrc": "4352:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4352:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4456:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4456:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4459:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4459:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4449:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4449:6:6"
																},
																"nativeSrc": "4449:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4449:15:6"
															},
															"nativeSrc": "4449:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4449:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4480:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4480:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4483:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4483:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4473:6:6"
																},
																"nativeSrc": "4473:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4473:15:6"
															},
															"nativeSrc": "4473:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4473:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4314:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4314:180:6"
											},
											{
												"body": {
													"nativeSrc": "4551:269:6",
													"nodeType": "YulBlock",
													"src": "4551:269:6",
													"statements": [
														{
															"nativeSrc": "4561:22:6",
															"nodeType": "YulAssignment",
															"src": "4561:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4575:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4575:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4581:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4581:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4571:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4571:3:6"
																},
																"nativeSrc": "4571:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4571:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4561:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4561:6:6"
																}
															]
														},
														{
															"nativeSrc": "4592:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4592:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4622:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4622:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4628:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4628:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4618:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4618:3:6"
																},
																"nativeSrc": "4618:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4618:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4596:18:6",
																	"nodeType": "YulTypedName",
																	"src": "4596:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4669:51:6",
																"nodeType": "YulBlock",
																"src": "4669:51:6",
																"statements": [
																	{
																		"nativeSrc": "4683:27:6",
																		"nodeType": "YulAssignment",
																		"src": "4683:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4697:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4697:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4705:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4705:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4693:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4693:3:6"
																			},
																			"nativeSrc": "4693:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4693:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4683:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4683:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4649:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4649:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4642:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:6"
																},
																"nativeSrc": "4642:26:6",
																"nodeType": "YulFunctionCall",
																"src": "4642:26:6"
															},
															"nativeSrc": "4639:81:6",
															"nodeType": "YulIf",
															"src": "4639:81:6"
														},
														{
															"body": {
																"nativeSrc": "4772:42:6",
																"nodeType": "YulBlock",
																"src": "4772:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4786:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4786:16:6"
																			},
																			"nativeSrc": "4786:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4786:18:6"
																		},
																		"nativeSrc": "4786:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4786:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4736:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4736:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4759:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4759:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4767:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4767:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4756:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4756:2:6"
																		},
																		"nativeSrc": "4756:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4756:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4733:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4733:2:6"
																},
																"nativeSrc": "4733:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4733:38:6"
															},
															"nativeSrc": "4730:84:6",
															"nodeType": "YulIf",
															"src": "4730:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4500:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4535:4:6",
														"nodeType": "YulTypedName",
														"src": "4535:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4544:6:6",
														"nodeType": "YulTypedName",
														"src": "4544:6:6",
														"type": ""
													}
												],
												"src": "4500:320:6"
											},
											{
												"body": {
													"nativeSrc": "4880:87:6",
													"nodeType": "YulBlock",
													"src": "4880:87:6",
													"statements": [
														{
															"nativeSrc": "4890:11:6",
															"nodeType": "YulAssignment",
															"src": "4890:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "4898:3:6",
																"nodeType": "YulIdentifier",
																"src": "4898:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4890:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4890:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4918:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4918:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4921:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4921:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4911:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4911:6:6"
																},
																"nativeSrc": "4911:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4911:14:6"
															},
															"nativeSrc": "4911:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "4911:14:6"
														},
														{
															"nativeSrc": "4934:26:6",
															"nodeType": "YulAssignment",
															"src": "4934:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4952:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4952:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4955:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4955:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4942:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4942:9:6"
																},
																"nativeSrc": "4942:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4942:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4934:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4826:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4867:3:6",
														"nodeType": "YulTypedName",
														"src": "4867:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4875:4:6",
														"nodeType": "YulTypedName",
														"src": "4875:4:6",
														"type": ""
													}
												],
												"src": "4826:141:6"
											},
											{
												"body": {
													"nativeSrc": "5017:49:6",
													"nodeType": "YulBlock",
													"src": "5017:49:6",
													"statements": [
														{
															"nativeSrc": "5027:33:6",
															"nodeType": "YulAssignment",
															"src": "5027:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5045:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5045:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5052:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5052:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5041:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5041:3:6"
																		},
																		"nativeSrc": "5041:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5041:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5057:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5057:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5037:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5037:3:6"
																},
																"nativeSrc": "5037:23:6",
																"nodeType": "YulFunctionCall",
																"src": "5037:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5027:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5027:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4973:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5000:5:6",
														"nodeType": "YulTypedName",
														"src": "5000:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5010:6:6",
														"nodeType": "YulTypedName",
														"src": "5010:6:6",
														"type": ""
													}
												],
												"src": "4973:93:6"
											},
											{
												"body": {
													"nativeSrc": "5125:54:6",
													"nodeType": "YulBlock",
													"src": "5125:54:6",
													"statements": [
														{
															"nativeSrc": "5135:37:6",
															"nodeType": "YulAssignment",
															"src": "5135:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5160:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5160:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5166:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5166:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5156:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5156:3:6"
																},
																"nativeSrc": "5156:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5156:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5135:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5135:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5072:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5100:4:6",
														"nodeType": "YulTypedName",
														"src": "5100:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5106:5:6",
														"nodeType": "YulTypedName",
														"src": "5106:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5116:8:6",
														"nodeType": "YulTypedName",
														"src": "5116:8:6",
														"type": ""
													}
												],
												"src": "5072:107:6"
											},
											{
												"body": {
													"nativeSrc": "5261:317:6",
													"nodeType": "YulBlock",
													"src": "5261:317:6",
													"statements": [
														{
															"nativeSrc": "5271:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5271:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5292:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5292:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5304:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5304:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5288:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5288:3:6"
																},
																"nativeSrc": "5288:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5288:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5275:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5275:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5315:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5315:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5346:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5346:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5357:66:6",
																		"nodeType": "YulLiteral",
																		"src": "5357:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5327:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5327:18:6"
																},
																"nativeSrc": "5327:97:6",
																"nodeType": "YulFunctionCall",
																"src": "5327:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5319:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5319:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5433:51:6",
															"nodeType": "YulAssignment",
															"src": "5433:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5464:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5464:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5475:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "5475:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5445:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5445:18:6"
																},
																"nativeSrc": "5445:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5445:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5433:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5433:8:6"
																}
															]
														},
														{
															"nativeSrc": "5493:30:6",
															"nodeType": "YulAssignment",
															"src": "5493:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5506:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5506:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5517:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5517:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5513:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5513:3:6"
																		},
																		"nativeSrc": "5513:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5513:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5502:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:6"
																},
																"nativeSrc": "5502:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5502:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5493:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5493:5:6"
																}
															]
														},
														{
															"nativeSrc": "5532:40:6",
															"nodeType": "YulAssignment",
															"src": "5532:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5545:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5545:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5556:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "5556:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5566:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5566:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5552:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5552:3:6"
																		},
																		"nativeSrc": "5552:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5552:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5542:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5542:2:6"
																},
																"nativeSrc": "5542:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5542:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5532:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5532:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5185:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5222:5:6",
														"nodeType": "YulTypedName",
														"src": "5222:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5229:10:6",
														"nodeType": "YulTypedName",
														"src": "5229:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5241:8:6",
														"nodeType": "YulTypedName",
														"src": "5241:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5254:6:6",
														"nodeType": "YulTypedName",
														"src": "5254:6:6",
														"type": ""
													}
												],
												"src": "5185:393:6"
											},
											{
												"body": {
													"nativeSrc": "5616:28:6",
													"nodeType": "YulBlock",
													"src": "5616:28:6",
													"statements": [
														{
															"nativeSrc": "5626:12:6",
															"nodeType": "YulAssignment",
															"src": "5626:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5633:5:6",
																"nodeType": "YulIdentifier",
																"src": "5633:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5626:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5626:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5584:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5602:5:6",
														"nodeType": "YulTypedName",
														"src": "5602:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5612:3:6",
														"nodeType": "YulTypedName",
														"src": "5612:3:6",
														"type": ""
													}
												],
												"src": "5584:60:6"
											},
											{
												"body": {
													"nativeSrc": "5710:82:6",
													"nodeType": "YulBlock",
													"src": "5710:82:6",
													"statements": [
														{
															"nativeSrc": "5720:66:6",
															"nodeType": "YulAssignment",
															"src": "5720:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5778:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5778:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5760:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5760:17:6"
																				},
																				"nativeSrc": "5760:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5760:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5751:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "5751:8:6"
																		},
																		"nativeSrc": "5751:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5751:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5733:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5733:17:6"
																},
																"nativeSrc": "5733:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5733:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5720:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5720:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5650:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5690:5:6",
														"nodeType": "YulTypedName",
														"src": "5690:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5700:9:6",
														"nodeType": "YulTypedName",
														"src": "5700:9:6",
														"type": ""
													}
												],
												"src": "5650:142:6"
											},
											{
												"body": {
													"nativeSrc": "5845:28:6",
													"nodeType": "YulBlock",
													"src": "5845:28:6",
													"statements": [
														{
															"nativeSrc": "5855:12:6",
															"nodeType": "YulAssignment",
															"src": "5855:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "5862:5:6",
																"nodeType": "YulIdentifier",
																"src": "5862:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5855:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5855:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5798:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5831:5:6",
														"nodeType": "YulTypedName",
														"src": "5831:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5841:3:6",
														"nodeType": "YulTypedName",
														"src": "5841:3:6",
														"type": ""
													}
												],
												"src": "5798:75:6"
											},
											{
												"body": {
													"nativeSrc": "5955:193:6",
													"nodeType": "YulBlock",
													"src": "5955:193:6",
													"statements": [
														{
															"nativeSrc": "5965:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5965:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6020:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "6020:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5989:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5989:30:6"
																},
																"nativeSrc": "5989:39:6",
																"nodeType": "YulFunctionCall",
																"src": "5989:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5969:16:6",
																	"nodeType": "YulTypedName",
																	"src": "5969:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6044:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6044:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6084:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6084:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6078:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6078:5:6"
																				},
																				"nativeSrc": "6078:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6078:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6091:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6091:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6123:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "6123:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6099:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "6099:23:6"
																				},
																				"nativeSrc": "6099:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6099:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6050:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "6050:27:6"
																		},
																		"nativeSrc": "6050:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6050:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6037:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:6"
																},
																"nativeSrc": "6037:105:6",
																"nodeType": "YulFunctionCall",
																"src": "6037:105:6"
															},
															"nativeSrc": "6037:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "6037:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5879:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5932:4:6",
														"nodeType": "YulTypedName",
														"src": "5932:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5938:6:6",
														"nodeType": "YulTypedName",
														"src": "5938:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5946:7:6",
														"nodeType": "YulTypedName",
														"src": "5946:7:6",
														"type": ""
													}
												],
												"src": "5879:269:6"
											},
											{
												"body": {
													"nativeSrc": "6203:24:6",
													"nodeType": "YulBlock",
													"src": "6203:24:6",
													"statements": [
														{
															"nativeSrc": "6213:8:6",
															"nodeType": "YulAssignment",
															"src": "6213:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6220:1:6",
																"nodeType": "YulLiteral",
																"src": "6220:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6213:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6213:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6154:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6199:3:6",
														"nodeType": "YulTypedName",
														"src": "6199:3:6",
														"type": ""
													}
												],
												"src": "6154:73:6"
											},
											{
												"body": {
													"nativeSrc": "6286:136:6",
													"nodeType": "YulBlock",
													"src": "6286:136:6",
													"statements": [
														{
															"nativeSrc": "6296:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6296:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6310:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6310:30:6"
																},
																"nativeSrc": "6310:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6310:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6300:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6300:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6395:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6395:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6401:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6401:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6409:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6409:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6351:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6351:43:6"
																},
																"nativeSrc": "6351:65:6",
																"nodeType": "YulFunctionCall",
																"src": "6351:65:6"
															},
															"nativeSrc": "6351:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "6351:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6233:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6272:4:6",
														"nodeType": "YulTypedName",
														"src": "6272:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6278:6:6",
														"nodeType": "YulTypedName",
														"src": "6278:6:6",
														"type": ""
													}
												],
												"src": "6233:189:6"
											},
											{
												"body": {
													"nativeSrc": "6478:136:6",
													"nodeType": "YulBlock",
													"src": "6478:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6545:63:6",
																"nodeType": "YulBlock",
																"src": "6545:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6589:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6589:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6596:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6596:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6559:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "6559:29:6"
																			},
																			"nativeSrc": "6559:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6559:39:6"
																		},
																		"nativeSrc": "6559:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6559:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6498:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6498:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6505:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6505:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6495:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6495:2:6"
																},
																"nativeSrc": "6495:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6495:14:6"
															},
															"nativeSrc": "6488:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6510:26:6",
																"nodeType": "YulBlock",
																"src": "6510:26:6",
																"statements": [
																	{
																		"nativeSrc": "6512:22:6",
																		"nodeType": "YulAssignment",
																		"src": "6512:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6525:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6525:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6532:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6532:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6521:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6521:3:6"
																			},
																			"nativeSrc": "6521:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6521:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6512:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6512:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6492:2:6",
																"nodeType": "YulBlock",
																"src": "6492:2:6",
																"statements": []
															},
															"src": "6488:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6428:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6466:5:6",
														"nodeType": "YulTypedName",
														"src": "6466:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6473:3:6",
														"nodeType": "YulTypedName",
														"src": "6473:3:6",
														"type": ""
													}
												],
												"src": "6428:186:6"
											},
											{
												"body": {
													"nativeSrc": "6699:464:6",
													"nodeType": "YulBlock",
													"src": "6699:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6725:431:6",
																"nodeType": "YulBlock",
																"src": "6725:431:6",
																"statements": [
																	{
																		"nativeSrc": "6739:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6739:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6787:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6787:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6755:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "6755:31:6"
																			},
																			"nativeSrc": "6755:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6755:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6743:8:6",
																				"nodeType": "YulTypedName",
																				"src": "6743:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6806:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6806:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6829:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "6829:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6857:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "6857:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6839:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "6839:17:6"
																					},
																					"nativeSrc": "6839:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6839:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6825:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6825:3:6"
																			},
																			"nativeSrc": "6825:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6825:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6810:11:6",
																				"nodeType": "YulTypedName",
																				"src": "6810:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7026:27:6",
																			"nodeType": "YulBlock",
																			"src": "7026:27:6",
																			"statements": [
																				{
																					"nativeSrc": "7028:23:6",
																					"nodeType": "YulAssignment",
																					"src": "7028:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7043:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "7043:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7028:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "7028:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7010:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "7010:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7022:2:6",
																					"nodeType": "YulLiteral",
																					"src": "7022:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7007:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "7007:2:6"
																			},
																			"nativeSrc": "7007:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7007:18:6"
																		},
																		"nativeSrc": "7004:49:6",
																		"nodeType": "YulIf",
																		"src": "7004:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7095:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "7095:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7112:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7112:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7140:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "7140:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7122:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "7122:17:6"
																							},
																							"nativeSrc": "7122:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7122:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7108:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7108:3:6"
																					},
																					"nativeSrc": "7108:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7108:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7066:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "7066:28:6"
																			},
																			"nativeSrc": "7066:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7066:80:6"
																		},
																		"nativeSrc": "7066:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7066:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6716:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6716:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6721:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6721:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6713:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6713:2:6"
																},
																"nativeSrc": "6713:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6713:11:6"
															},
															"nativeSrc": "6710:446:6",
															"nodeType": "YulIf",
															"src": "6710:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6620:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6675:5:6",
														"nodeType": "YulTypedName",
														"src": "6675:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6682:3:6",
														"nodeType": "YulTypedName",
														"src": "6682:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6687:10:6",
														"nodeType": "YulTypedName",
														"src": "6687:10:6",
														"type": ""
													}
												],
												"src": "6620:543:6"
											},
											{
												"body": {
													"nativeSrc": "7232:54:6",
													"nodeType": "YulBlock",
													"src": "7232:54:6",
													"statements": [
														{
															"nativeSrc": "7242:37:6",
															"nodeType": "YulAssignment",
															"src": "7242:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7267:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7267:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7273:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7273:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7263:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7263:3:6"
																},
																"nativeSrc": "7263:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7263:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7242:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "7242:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7169:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7207:4:6",
														"nodeType": "YulTypedName",
														"src": "7207:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7213:5:6",
														"nodeType": "YulTypedName",
														"src": "7213:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7223:8:6",
														"nodeType": "YulTypedName",
														"src": "7223:8:6",
														"type": ""
													}
												],
												"src": "7169:117:6"
											},
											{
												"body": {
													"nativeSrc": "7343:118:6",
													"nodeType": "YulBlock",
													"src": "7343:118:6",
													"statements": [
														{
															"nativeSrc": "7353:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7353:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7402:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7402:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7405:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7405:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7398:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7398:3:6"
																				},
																				"nativeSrc": "7398:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7398:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7417:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7417:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7413:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:6"
																				},
																				"nativeSrc": "7413:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7413:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7369:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "7369:28:6"
																		},
																		"nativeSrc": "7369:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7369:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7365:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7365:3:6"
																},
																"nativeSrc": "7365:56:6",
																"nodeType": "YulFunctionCall",
																"src": "7365:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7357:4:6",
																	"nodeType": "YulTypedName",
																	"src": "7357:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7430:25:6",
															"nodeType": "YulAssignment",
															"src": "7430:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7444:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7450:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7450:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7440:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:6"
																},
																"nativeSrc": "7440:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7440:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7430:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7430:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7292:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7320:4:6",
														"nodeType": "YulTypedName",
														"src": "7320:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7326:5:6",
														"nodeType": "YulTypedName",
														"src": "7326:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7336:6:6",
														"nodeType": "YulTypedName",
														"src": "7336:6:6",
														"type": ""
													}
												],
												"src": "7292:169:6"
											},
											{
												"body": {
													"nativeSrc": "7547:214:6",
													"nodeType": "YulBlock",
													"src": "7547:214:6",
													"statements": [
														{
															"nativeSrc": "7680:37:6",
															"nodeType": "YulAssignment",
															"src": "7680:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7707:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7713:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7713:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7688:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "7688:18:6"
																},
																"nativeSrc": "7688:29:6",
																"nodeType": "YulFunctionCall",
																"src": "7688:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7680:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7680:4:6"
																}
															]
														},
														{
															"nativeSrc": "7726:29:6",
															"nodeType": "YulAssignment",
															"src": "7726:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7737:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7737:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7747:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7747:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7750:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7750:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7743:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:6"
																		},
																		"nativeSrc": "7743:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7743:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7734:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7734:2:6"
																},
																"nativeSrc": "7734:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7734:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7726:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7726:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7466:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7528:4:6",
														"nodeType": "YulTypedName",
														"src": "7528:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7534:3:6",
														"nodeType": "YulTypedName",
														"src": "7534:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7542:4:6",
														"nodeType": "YulTypedName",
														"src": "7542:4:6",
														"type": ""
													}
												],
												"src": "7466:295:6"
											},
											{
												"body": {
													"nativeSrc": "7858:1303:6",
													"nodeType": "YulBlock",
													"src": "7858:1303:6",
													"statements": [
														{
															"nativeSrc": "7869:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7869:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7916:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7916:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7883:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "7883:32:6"
																},
																"nativeSrc": "7883:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7883:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7873:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7873:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8005:22:6",
																"nodeType": "YulBlock",
																"src": "8005:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8007:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8007:16:6"
																			},
																			"nativeSrc": "8007:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8007:18:6"
																		},
																		"nativeSrc": "8007:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8007:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7977:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7977:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7985:18:6",
																		"nodeType": "YulLiteral",
																		"src": "7985:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7974:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7974:2:6"
																},
																"nativeSrc": "7974:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7974:30:6"
															},
															"nativeSrc": "7971:56:6",
															"nodeType": "YulIf",
															"src": "7971:56:6"
														},
														{
															"nativeSrc": "8037:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8037:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8083:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8083:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8077:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8077:5:6"
																		},
																		"nativeSrc": "8077:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8077:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8051:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "8051:25:6"
																},
																"nativeSrc": "8051:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8051:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8041:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8041:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8182:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8182:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8188:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8188:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8196:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8196:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8136:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "8136:45:6"
																},
																"nativeSrc": "8136:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8136:67:6"
															},
															"nativeSrc": "8136:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "8136:67:6"
														},
														{
															"nativeSrc": "8213:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8213:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8230:1:6",
																"nodeType": "YulLiteral",
																"src": "8230:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8217:9:6",
																	"nodeType": "YulTypedName",
																	"src": "8217:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8241:17:6",
															"nodeType": "YulAssignment",
															"src": "8241:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "8254:4:6",
																"nodeType": "YulLiteral",
																"src": "8254:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8241:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "8241:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8305:611:6",
																		"nodeType": "YulBlock",
																		"src": "8305:611:6",
																		"statements": [
																			{
																				"nativeSrc": "8319:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8319:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8338:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8338:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8350:4:6",
																									"nodeType": "YulLiteral",
																									"src": "8350:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8346:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8346:3:6"
																							},
																							"nativeSrc": "8346:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8346:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8334:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "8334:3:6"
																					},
																					"nativeSrc": "8334:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8334:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8323:7:6",
																						"nodeType": "YulTypedName",
																						"src": "8323:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8370:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8370:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8416:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8416:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8384:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "8384:31:6"
																					},
																					"nativeSrc": "8384:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8384:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8374:6:6",
																						"nodeType": "YulTypedName",
																						"src": "8374:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8434:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8434:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8443:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8443:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8438:1:6",
																						"nodeType": "YulTypedName",
																						"src": "8438:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8502:163:6",
																					"nodeType": "YulBlock",
																					"src": "8502:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8527:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8527:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8545:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "8545:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8550:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "8550:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8541:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8541:3:6"
																												},
																												"nativeSrc": "8541:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8541:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8535:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "8535:5:6"
																										},
																										"nativeSrc": "8535:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8535:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8520:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8520:6:6"
																								},
																								"nativeSrc": "8520:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8520:42:6"
																							},
																							"nativeSrc": "8520:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8520:42:6"
																						},
																						{
																							"nativeSrc": "8579:24:6",
																							"nodeType": "YulAssignment",
																							"src": "8579:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8593:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8593:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8601:1:6",
																										"nodeType": "YulLiteral",
																										"src": "8601:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8589:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8589:3:6"
																								},
																								"nativeSrc": "8589:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8589:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8579:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8579:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8620:31:6",
																							"nodeType": "YulAssignment",
																							"src": "8620:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8637:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "8637:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8648:2:6",
																										"nodeType": "YulLiteral",
																										"src": "8648:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8633:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8633:3:6"
																								},
																								"nativeSrc": "8633:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8633:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8620:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "8620:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8468:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "8468:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8471:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8471:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8465:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8465:2:6"
																					},
																					"nativeSrc": "8465:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8465:14:6"
																				},
																				"nativeSrc": "8457:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8480:21:6",
																					"nodeType": "YulBlock",
																					"src": "8480:21:6",
																					"statements": [
																						{
																							"nativeSrc": "8482:17:6",
																							"nodeType": "YulAssignment",
																							"src": "8482:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8491:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "8491:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8494:4:6",
																										"nodeType": "YulLiteral",
																										"src": "8494:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8487:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8487:3:6"
																								},
																								"nativeSrc": "8487:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8487:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8482:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "8482:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8461:3:6",
																					"nodeType": "YulBlock",
																					"src": "8461:3:6",
																					"statements": []
																				},
																				"src": "8457:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "8701:156:6",
																					"nodeType": "YulBlock",
																					"src": "8701:156:6",
																					"statements": [
																						{
																							"nativeSrc": "8719:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8719:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8746:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "8746:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8751:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8751:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8742:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "8742:3:6"
																										},
																										"nativeSrc": "8742:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8742:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8736:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "8736:5:6"
																								},
																								"nativeSrc": "8736:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8736:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8723:9:6",
																									"nodeType": "YulTypedName",
																									"src": "8723:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8786:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "8786:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8813:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "8813:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8828:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "8828:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8836:4:6",
																														"nodeType": "YulLiteral",
																														"src": "8836:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8824:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "8824:3:6"
																												},
																												"nativeSrc": "8824:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "8824:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8794:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "8794:18:6"
																										},
																										"nativeSrc": "8794:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "8794:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8779:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "8779:6:6"
																								},
																								"nativeSrc": "8779:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "8779:64:6"
																							},
																							"nativeSrc": "8779:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "8779:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8684:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "8684:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8693:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8693:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8681:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "8681:2:6"
																					},
																					"nativeSrc": "8681:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8681:19:6"
																				},
																				"nativeSrc": "8678:179:6",
																				"nodeType": "YulIf",
																				"src": "8678:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8877:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "8877:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8891:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "8891:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8899:1:6",
																											"nodeType": "YulLiteral",
																											"src": "8899:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8887:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "8887:3:6"
																									},
																									"nativeSrc": "8887:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "8887:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8903:1:6",
																									"nodeType": "YulLiteral",
																									"src": "8903:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8883:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "8883:3:6"
																							},
																							"nativeSrc": "8883:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "8883:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8870:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8870:6:6"
																					},
																					"nativeSrc": "8870:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8870:36:6"
																				},
																				"nativeSrc": "8870:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "8870:36:6"
																			}
																		]
																	},
																	"nativeSrc": "8298:618:6",
																	"nodeType": "YulCase",
																	"src": "8298:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8303:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8303:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8933:222:6",
																		"nodeType": "YulBlock",
																		"src": "8933:222:6",
																		"statements": [
																			{
																				"nativeSrc": "8947:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8947:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8960:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8960:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8951:5:6",
																						"nodeType": "YulTypedName",
																						"src": "8951:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8984:67:6",
																					"nodeType": "YulBlock",
																					"src": "8984:67:6",
																					"statements": [
																						{
																							"nativeSrc": "9002:35:6",
																							"nodeType": "YulAssignment",
																							"src": "9002:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9021:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9021:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9026:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9026:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9017:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9017:3:6"
																										},
																										"nativeSrc": "9017:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9017:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9011:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9011:5:6"
																								},
																								"nativeSrc": "9011:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9011:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9002:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9002:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8977:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8977:6:6"
																				},
																				"nativeSrc": "8974:77:6",
																				"nodeType": "YulIf",
																				"src": "8974:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9071:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9071:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9130:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9130:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9137:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9137:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9077:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "9077:52:6"
																							},
																							"nativeSrc": "9077:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9077:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9064:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9064:6:6"
																					},
																					"nativeSrc": "9064:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9064:81:6"
																				},
																				"nativeSrc": "9064:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9064:81:6"
																			}
																		]
																	},
																	"nativeSrc": "8925:230:6",
																	"nodeType": "YulCase",
																	"src": "8925:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8278:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8278:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8286:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8286:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8275:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8275:2:6"
																},
																"nativeSrc": "8275:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8275:14:6"
															},
															"nativeSrc": "8268:887:6",
															"nodeType": "YulSwitch",
															"src": "8268:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7766:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7847:4:6",
														"nodeType": "YulTypedName",
														"src": "7847:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7853:3:6",
														"nodeType": "YulTypedName",
														"src": "7853:3:6",
														"type": ""
													}
												],
												"src": "7766:1395:6"
											},
											{
												"body": {
													"nativeSrc": "9212:81:6",
													"nodeType": "YulBlock",
													"src": "9212:81:6",
													"statements": [
														{
															"nativeSrc": "9222:65:6",
															"nodeType": "YulAssignment",
															"src": "9222:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9237:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9237:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9244:42:6",
																		"nodeType": "YulLiteral",
																		"src": "9244:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9233:3:6"
																},
																"nativeSrc": "9233:54:6",
																"nodeType": "YulFunctionCall",
																"src": "9233:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9222:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9222:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9167:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9194:5:6",
														"nodeType": "YulTypedName",
														"src": "9194:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9204:7:6",
														"nodeType": "YulTypedName",
														"src": "9204:7:6",
														"type": ""
													}
												],
												"src": "9167:126:6"
											},
											{
												"body": {
													"nativeSrc": "9344:51:6",
													"nodeType": "YulBlock",
													"src": "9344:51:6",
													"statements": [
														{
															"nativeSrc": "9354:35:6",
															"nodeType": "YulAssignment",
															"src": "9354:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9383:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9383:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9365:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9365:17:6"
																},
																"nativeSrc": "9365:24:6",
																"nodeType": "YulFunctionCall",
																"src": "9365:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9354:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9354:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9299:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9326:5:6",
														"nodeType": "YulTypedName",
														"src": "9326:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9336:7:6",
														"nodeType": "YulTypedName",
														"src": "9336:7:6",
														"type": ""
													}
												],
												"src": "9299:96:6"
											},
											{
												"body": {
													"nativeSrc": "9466:53:6",
													"nodeType": "YulBlock",
													"src": "9466:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9483:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9483:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9506:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9506:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9488:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9488:17:6"
																		},
																		"nativeSrc": "9488:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9488:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9476:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:6"
																},
																"nativeSrc": "9476:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9476:37:6"
															},
															"nativeSrc": "9476:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9476:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9401:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9454:5:6",
														"nodeType": "YulTypedName",
														"src": "9454:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9461:3:6",
														"nodeType": "YulTypedName",
														"src": "9461:3:6",
														"type": ""
													}
												],
												"src": "9401:118:6"
											},
											{
												"body": {
													"nativeSrc": "9623:124:6",
													"nodeType": "YulBlock",
													"src": "9623:124:6",
													"statements": [
														{
															"nativeSrc": "9633:26:6",
															"nodeType": "YulAssignment",
															"src": "9633:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9645:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9645:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9656:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9656:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9641:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9641:3:6"
																},
																"nativeSrc": "9641:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9641:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9633:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9633:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9713:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9713:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9726:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9726:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9737:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9737:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9722:3:6"
																		},
																		"nativeSrc": "9722:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9722:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9669:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9669:43:6"
																},
																"nativeSrc": "9669:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9669:71:6"
															},
															"nativeSrc": "9669:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9669:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9525:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9595:9:6",
														"nodeType": "YulTypedName",
														"src": "9595:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9607:6:6",
														"nodeType": "YulTypedName",
														"src": "9607:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9618:4:6",
														"nodeType": "YulTypedName",
														"src": "9618:4:6",
														"type": ""
													}
												],
												"src": "9525:222:6"
											},
											{
												"body": {
													"nativeSrc": "9781:152:6",
													"nodeType": "YulBlock",
													"src": "9781:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9798:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9798:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9801:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9801:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9791:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9791:6:6"
																},
																"nativeSrc": "9791:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9791:88:6"
															},
															"nativeSrc": "9791:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9791:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9895:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9895:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9898:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9898:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9888:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9888:6:6"
																},
																"nativeSrc": "9888:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9888:15:6"
															},
															"nativeSrc": "9888:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9888:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9919:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9919:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9922:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9922:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9912:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9912:6:6"
																},
																"nativeSrc": "9912:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9912:15:6"
															},
															"nativeSrc": "9912:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9912:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9753:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9753:180:6"
											},
											{
												"body": {
													"nativeSrc": "9983:147:6",
													"nodeType": "YulBlock",
													"src": "9983:147:6",
													"statements": [
														{
															"nativeSrc": "9993:25:6",
															"nodeType": "YulAssignment",
															"src": "9993:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10016:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10016:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9998:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9998:17:6"
																},
																"nativeSrc": "9998:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9998:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9993:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9993:1:6"
																}
															]
														},
														{
															"nativeSrc": "10027:25:6",
															"nodeType": "YulAssignment",
															"src": "10027:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10050:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10050:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10032:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10032:17:6"
																},
																"nativeSrc": "10032:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10032:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10027:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10027:1:6"
																}
															]
														},
														{
															"nativeSrc": "10061:16:6",
															"nodeType": "YulAssignment",
															"src": "10061:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10072:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10072:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10075:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10075:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10068:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10068:3:6"
																},
																"nativeSrc": "10068:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10068:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10061:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10061:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10101:22:6",
																"nodeType": "YulBlock",
																"src": "10101:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10103:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10103:16:6"
																			},
																			"nativeSrc": "10103:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10103:18:6"
																		},
																		"nativeSrc": "10103:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10103:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10093:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10093:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10096:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10096:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10090:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10090:2:6"
																},
																"nativeSrc": "10090:10:6",
																"nodeType": "YulFunctionCall",
																"src": "10090:10:6"
															},
															"nativeSrc": "10087:36:6",
															"nodeType": "YulIf",
															"src": "10087:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9939:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9970:1:6",
														"nodeType": "YulTypedName",
														"src": "9970:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9973:1:6",
														"nodeType": "YulTypedName",
														"src": "9973:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9979:3:6",
														"nodeType": "YulTypedName",
														"src": "9979:3:6",
														"type": ""
													}
												],
												"src": "9939:191:6"
											},
											{
												"body": {
													"nativeSrc": "10201:53:6",
													"nodeType": "YulBlock",
													"src": "10201:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10218:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10218:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10241:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10241:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10223:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "10223:17:6"
																		},
																		"nativeSrc": "10223:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10223:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10211:6:6"
																},
																"nativeSrc": "10211:37:6",
																"nodeType": "YulFunctionCall",
																"src": "10211:37:6"
															},
															"nativeSrc": "10211:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "10211:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10136:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10189:5:6",
														"nodeType": "YulTypedName",
														"src": "10189:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10196:3:6",
														"nodeType": "YulTypedName",
														"src": "10196:3:6",
														"type": ""
													}
												],
												"src": "10136:118:6"
											},
											{
												"body": {
													"nativeSrc": "10414:288:6",
													"nodeType": "YulBlock",
													"src": "10414:288:6",
													"statements": [
														{
															"nativeSrc": "10424:26:6",
															"nodeType": "YulAssignment",
															"src": "10424:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10436:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10436:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10447:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10447:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10432:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10432:3:6"
																},
																"nativeSrc": "10432:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10432:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10424:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10424:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10504:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10504:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10517:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10517:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10528:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10528:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10513:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10513:3:6"
																		},
																		"nativeSrc": "10513:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10513:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10460:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10460:43:6"
																},
																"nativeSrc": "10460:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10460:71:6"
															},
															"nativeSrc": "10460:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10460:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10585:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10585:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10598:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10598:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10609:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10609:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10594:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10594:3:6"
																		},
																		"nativeSrc": "10594:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10594:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10541:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10541:43:6"
																},
																"nativeSrc": "10541:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10541:72:6"
															},
															"nativeSrc": "10541:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10541:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10667:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10667:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10680:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10680:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10691:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10691:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10676:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:6"
																		},
																		"nativeSrc": "10676:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10623:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10623:43:6"
																},
																"nativeSrc": "10623:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10623:72:6"
															},
															"nativeSrc": "10623:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10623:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10260:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10370:9:6",
														"nodeType": "YulTypedName",
														"src": "10370:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10382:6:6",
														"nodeType": "YulTypedName",
														"src": "10382:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10390:6:6",
														"nodeType": "YulTypedName",
														"src": "10390:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10398:6:6",
														"nodeType": "YulTypedName",
														"src": "10398:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10409:4:6",
														"nodeType": "YulTypedName",
														"src": "10409:4:6",
														"type": ""
													}
												],
												"src": "10260:442:6"
											},
											{
												"body": {
													"nativeSrc": "10806:124:6",
													"nodeType": "YulBlock",
													"src": "10806:124:6",
													"statements": [
														{
															"nativeSrc": "10816:26:6",
															"nodeType": "YulAssignment",
															"src": "10816:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10828:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10828:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10839:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10839:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10824:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10824:3:6"
																},
																"nativeSrc": "10824:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10824:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10816:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10816:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10896:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10896:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10909:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10909:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10920:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10920:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10905:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10905:3:6"
																		},
																		"nativeSrc": "10905:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10905:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10852:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10852:43:6"
																},
																"nativeSrc": "10852:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10852:71:6"
															},
															"nativeSrc": "10852:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10852:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10708:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10778:9:6",
														"nodeType": "YulTypedName",
														"src": "10778:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10790:6:6",
														"nodeType": "YulTypedName",
														"src": "10790:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10801:4:6",
														"nodeType": "YulTypedName",
														"src": "10801:4:6",
														"type": ""
													}
												],
												"src": "10708:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001800380380620018008339818101604052810190620000369190620004ff565b83838160039081620000499190620007da565b5080600490816200005b9190620007da565b5050508160055f6101000a81548160ff021916908360ff1602179055506200008a33826200009460201b60201c565b50505050620009ea565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000107575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620000fe919062000901565b60405180910390fd5b6200011a5f83836200011e60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000172578060025f82825462000165919062000949565b9250508190555062000243565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620001fe578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620001f59392919062000994565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200028c578060025f8282540392505081905550620002d6565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003359190620009cf565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620003a3826200035b565b810181811067ffffffffffffffff82111715620003c557620003c46200036b565b5b80604052505050565b5f620003d962000342565b9050620003e7828262000398565b919050565b5f67ffffffffffffffff8211156200040957620004086200036b565b5b62000414826200035b565b9050602081019050919050565b5f5b838110156200044057808201518184015260208101905062000423565b5f8484015250505050565b5f620004616200045b84620003ec565b620003ce565b90508281526020810184848401111562000480576200047f62000357565b5b6200048d84828562000421565b509392505050565b5f82601f830112620004ac57620004ab62000353565b5b8151620004be8482602086016200044b565b91505092915050565b5f819050919050565b620004db81620004c7565b8114620004e6575f80fd5b50565b5f81519050620004f981620004d0565b92915050565b5f805f80608085870312156200051a57620005196200034b565b5b5f85015167ffffffffffffffff8111156200053a57620005396200034f565b5b620005488782880162000495565b945050602085015167ffffffffffffffff8111156200056c576200056b6200034f565b5b6200057a8782880162000495565b93505060406200058d87828801620004e9565b9250506060620005a087828801620004e9565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620005fb57607f821691505b602082108103620006115762000610620005b6565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620006757fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000638565b62000681868362000638565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620006c2620006bc620006b684620004c7565b62000699565b620004c7565b9050919050565b5f819050919050565b620006dd83620006a2565b620006f5620006ec82620006c9565b84845462000644565b825550505050565b5f90565b6200070b620006fd565b62000718818484620006d2565b505050565b5b818110156200073f57620007335f8262000701565b6001810190506200071e565b5050565b601f8211156200078e57620007588162000617565b620007638462000629565b8101602085101562000773578190505b6200078b620007828562000629565b8301826200071d565b50505b505050565b5f82821c905092915050565b5f620007b05f198460080262000793565b1980831691505092915050565b5f620007ca83836200079f565b9150826002028217905092915050565b620007e582620005ac565b67ffffffffffffffff8111156200080157620008006200036b565b5b6200080d8254620005e3565b6200081a82828562000743565b5f60209050601f83116001811462000850575f84156200083b578287015190505b620008478582620007bd565b865550620008b6565b601f198416620008608662000617565b5f5b82811015620008895784890151825560018201915060208501945060208101905062000862565b86831015620008a95784890151620008a5601f8916826200079f565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620008e982620008be565b9050919050565b620008fb81620008dd565b82525050565b5f602082019050620009165f830184620008f0565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200095582620004c7565b91506200096283620004c7565b92508282019050808211156200097d576200097c6200091c565b5b92915050565b6200098e81620004c7565b82525050565b5f606082019050620009a95f830186620008f0565b620009b8602083018562000983565b620009c7604083018462000983565b949350505050565b5f602082019050620009e45f83018462000983565b92915050565b610e0880620009f85f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610a81565b60405180910390f35b6100cd60048036038101906100c89190610b32565b61028d565b6040516100da9190610b8a565b60405180910390f35b6100eb6102af565b6040516100f89190610bb2565b60405180910390f35b61011b60048036038101906101169190610bcb565b6102b8565b6040516101289190610b8a565b60405180910390f35b6101396102e6565b6040516101469190610c36565b60405180910390f35b61016960048036038101906101649190610c4f565b6102fb565b6040516101769190610bb2565b60405180910390f35b610187610340565b6040516101949190610a81565b60405180910390f35b6101b760048036038101906101b29190610b32565b6103d0565b6040516101c49190610b8a565b60405180910390f35b6101e760048036038101906101e29190610c7a565b6103f2565b6040516101f49190610bb2565b60405180910390f35b60606003805461020c90610ce5565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610ce5565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f80610297610474565b90506102a481858561047b565b600191505092915050565b5f600254905090565b5f806102c2610474565b90506102cf85828561048d565b6102da85858561051f565b60019150509392505050565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034f90610ce5565b80601f016020809104026020016040519081016040528092919081815260200182805461037b90610ce5565b80156103c65780601f1061039d576101008083540402835291602001916103c6565b820191905f5260205f20905b8154815290600101906020018083116103a957829003601f168201915b5050505050905090565b5f806103da610474565b90506103e781858561051f565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610488838383600161060f565b505050565b5f61049884846103f2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610519578181101561050a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050193929190610d24565b60405180910390fd5b61051884848484035f61060f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361058f575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105869190610d59565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ff575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105f69190610d59565b60405180910390fd5b61060a8383836107de565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361067f575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106769190610d59565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106ef575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106e69190610d59565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107d8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107cf9190610bb2565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361082e578060025f8282546108229190610d9f565b925050819055506108fc565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108b7578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108ae93929190610d24565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610943578060025f828254039250508190555061098d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109ea9190610bb2565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a2e578082015181840152602081019050610a13565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610a53826109f7565b610a5d8185610a01565b9350610a6d818560208601610a11565b610a7681610a39565b840191505092915050565b5f6020820190508181035f830152610a998184610a49565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ace82610aa5565b9050919050565b610ade81610ac4565b8114610ae8575f80fd5b50565b5f81359050610af981610ad5565b92915050565b5f819050919050565b610b1181610aff565b8114610b1b575f80fd5b50565b5f81359050610b2c81610b08565b92915050565b5f8060408385031215610b4857610b47610aa1565b5b5f610b5585828601610aeb565b9250506020610b6685828601610b1e565b9150509250929050565b5f8115159050919050565b610b8481610b70565b82525050565b5f602082019050610b9d5f830184610b7b565b92915050565b610bac81610aff565b82525050565b5f602082019050610bc55f830184610ba3565b92915050565b5f805f60608486031215610be257610be1610aa1565b5b5f610bef86828701610aeb565b9350506020610c0086828701610aeb565b9250506040610c1186828701610b1e565b9150509250925092565b5f60ff82169050919050565b610c3081610c1b565b82525050565b5f602082019050610c495f830184610c27565b92915050565b5f60208284031215610c6457610c63610aa1565b5b5f610c7184828501610aeb565b91505092915050565b5f8060408385031215610c9057610c8f610aa1565b5b5f610c9d85828601610aeb565b9250506020610cae85828601610aeb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cfc57607f821691505b602082108103610d0f57610d0e610cb8565b5b50919050565b610d1e81610ac4565b82525050565b5f606082019050610d375f830186610d15565b610d446020830185610ba3565b610d516040830184610ba3565b949350505050565b5f602082019050610d6c5f830184610d15565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610da982610aff565b9150610db483610aff565b9250828201905080821115610dcc57610dcb610d72565b5b9291505056fea2646970667358221220f90e0ded08b7c39681fc1700f533ca663905923552b1069f86604ae8faae66e664736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1800 CODESIZE SUB DUP1 PUSH3 0x1800 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x4FF JUMP JUMPDEST DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x49 SWAP2 SWAP1 PUSH3 0x7DA JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5B SWAP2 SWAP1 PUSH3 0x7DA JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x8A CALLER DUP3 PUSH3 0x94 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x9EA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x107 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x11A PUSH0 DUP4 DUP4 PUSH3 0x11E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x172 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x165 SWAP2 SWAP1 PUSH3 0x949 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x243 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x1FE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x28C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x2D6 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x335 SWAP2 SWAP1 PUSH3 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x3A3 DUP3 PUSH3 0x35B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x3C5 JUMPI PUSH3 0x3C4 PUSH3 0x36B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3D9 PUSH3 0x342 JUMP JUMPDEST SWAP1 POP PUSH3 0x3E7 DUP3 DUP3 PUSH3 0x398 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x409 JUMPI PUSH3 0x408 PUSH3 0x36B JUMP JUMPDEST JUMPDEST PUSH3 0x414 DUP3 PUSH3 0x35B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x440 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x423 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x461 PUSH3 0x45B DUP5 PUSH3 0x3EC JUMP JUMPDEST PUSH3 0x3CE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x480 JUMPI PUSH3 0x47F PUSH3 0x357 JUMP JUMPDEST JUMPDEST PUSH3 0x48D DUP5 DUP3 DUP6 PUSH3 0x421 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x4AC JUMPI PUSH3 0x4AB PUSH3 0x353 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4BE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x44B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4DB DUP2 PUSH3 0x4C7 JUMP JUMPDEST DUP2 EQ PUSH3 0x4E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x4F9 DUP2 PUSH3 0x4D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x51A JUMPI PUSH3 0x519 PUSH3 0x34B JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x53A JUMPI PUSH3 0x539 PUSH3 0x34F JUMP JUMPDEST JUMPDEST PUSH3 0x548 DUP8 DUP3 DUP9 ADD PUSH3 0x495 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x56C JUMPI PUSH3 0x56B PUSH3 0x34F JUMP JUMPDEST JUMPDEST PUSH3 0x57A DUP8 DUP3 DUP9 ADD PUSH3 0x495 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x58D DUP8 DUP3 DUP9 ADD PUSH3 0x4E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x5A0 DUP8 DUP3 DUP9 ADD PUSH3 0x4E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x5FB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x611 JUMPI PUSH3 0x610 PUSH3 0x5B6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x675 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x638 JUMP JUMPDEST PUSH3 0x681 DUP7 DUP4 PUSH3 0x638 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x6C2 PUSH3 0x6BC PUSH3 0x6B6 DUP5 PUSH3 0x4C7 JUMP JUMPDEST PUSH3 0x699 JUMP JUMPDEST PUSH3 0x4C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6DD DUP4 PUSH3 0x6A2 JUMP JUMPDEST PUSH3 0x6F5 PUSH3 0x6EC DUP3 PUSH3 0x6C9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x644 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x70B PUSH3 0x6FD JUMP JUMPDEST PUSH3 0x718 DUP2 DUP5 DUP5 PUSH3 0x6D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x73F JUMPI PUSH3 0x733 PUSH0 DUP3 PUSH3 0x701 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x71E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x78E JUMPI PUSH3 0x758 DUP2 PUSH3 0x617 JUMP JUMPDEST PUSH3 0x763 DUP5 PUSH3 0x629 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x773 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x78B PUSH3 0x782 DUP6 PUSH3 0x629 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x71D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x7B0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x793 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x7CA DUP4 DUP4 PUSH3 0x79F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x7E5 DUP3 PUSH3 0x5AC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x801 JUMPI PUSH3 0x800 PUSH3 0x36B JUMP JUMPDEST JUMPDEST PUSH3 0x80D DUP3 SLOAD PUSH3 0x5E3 JUMP JUMPDEST PUSH3 0x81A DUP3 DUP3 DUP6 PUSH3 0x743 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x850 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x83B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x847 DUP6 DUP3 PUSH3 0x7BD JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x8B6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x860 DUP7 PUSH3 0x617 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x889 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x862 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x8A9 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x8A5 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x79F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x8E9 DUP3 PUSH3 0x8BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x8FB DUP2 PUSH3 0x8DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x916 PUSH0 DUP4 ADD DUP5 PUSH3 0x8F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x955 DUP3 PUSH3 0x4C7 JUMP JUMPDEST SWAP2 POP PUSH3 0x962 DUP4 PUSH3 0x4C7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x97D JUMPI PUSH3 0x97C PUSH3 0x91C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x98E DUP2 PUSH3 0x4C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x9A9 PUSH0 DUP4 ADD DUP7 PUSH3 0x8F0 JUMP JUMPDEST PUSH3 0x9B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x983 JUMP JUMPDEST PUSH3 0x9C7 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x983 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x9E4 PUSH0 DUP4 ADD DUP5 PUSH3 0x983 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE08 DUP1 PUSH3 0x9F8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC7A JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x297 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C2 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34F SWAP1 PUSH2 0xCE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37B SWAP1 PUSH2 0xCE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3DA PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E7 DUP2 DUP6 DUP6 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x488 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x60F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x498 DUP5 DUP5 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x519 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x50A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x518 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x60F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60A DUP4 DUP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x676 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7D8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8FC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8B7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x943 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA2E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA13 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA53 DUP3 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0xA5D DUP2 DUP6 PUSH2 0xA01 JUMP JUMPDEST SWAP4 POP PUSH2 0xA6D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA11 JUMP JUMPDEST PUSH2 0xA76 DUP2 PUSH2 0xA39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA99 DUP2 DUP5 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xACE DUP3 PUSH2 0xAA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0xAC4 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF9 DUP2 PUSH2 0xAD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB11 DUP2 PUSH2 0xAFF JUMP JUMPDEST DUP2 EQ PUSH2 0xB1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB2C DUP2 PUSH2 0xB08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB55 DUP6 DUP3 DUP7 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB66 DUP6 DUP3 DUP7 ADD PUSH2 0xB1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB84 DUP2 PUSH2 0xB70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9D PUSH0 DUP4 ADD DUP5 PUSH2 0xB7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAC DUP2 PUSH2 0xAFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC5 PUSH0 DUP4 ADD DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBEF DUP7 DUP3 DUP8 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC00 DUP7 DUP3 DUP8 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC11 DUP7 DUP3 DUP8 ADD PUSH2 0xB1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC30 DUP2 PUSH2 0xC1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH0 DUP4 ADD DUP5 PUSH2 0xC27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC71 DUP5 DUP3 DUP6 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC90 JUMPI PUSH2 0xC8F PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC9D DUP6 DUP3 DUP7 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCAE DUP6 DUP3 DUP7 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCFC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD0F JUMPI PUSH2 0xD0E PUSH2 0xCB8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xAC4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD37 PUSH0 DUP4 ADD DUP7 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0xD44 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0xD51 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6C PUSH0 DUP4 ADD DUP5 PUSH2 0xD15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDA9 DUP3 PUSH2 0xAFF JUMP JUMPDEST SWAP2 POP PUSH2 0xDB4 DUP4 PUSH2 0xAFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDCC JUMPI PUSH2 0xDCB PUSH2 0xD72 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xE 0xD 0xED ADDMOD 0xB7 0xC3 SWAP7 DUP2 0xFC OR STOP CREATE2 CALLER 0xCA PUSH7 0x3905923552B106 SWAP16 DUP7 PUSH1 0x4A 0xE8 STATICCALL 0xAE PUSH7 0xE664736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "241:404:0:-:0;;;316:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;428:5;435:7;1971:5:2;1963;:13;;;;;;:::i;:::-;;1996:7;1986;:17;;;;;;:::i;:::-;;1897:113;;477:9:0::1;454:14;;:33;;;;;;;;;;;;;;;;;;497:31;503:10;515:12;497:5;;;:31;;:::i;:::-;316:219:::0;;;;241:404;;7722:208:2;7811:1;7792:21;;:7;:21;;;7788:91;;7865:1;7836:32;;;;;;;;;;;:::i;:::-;;;;;;;;7788:91;7888:35;7904:1;7908:7;7917:5;7888:7;;;:35;;:::i;:::-;7722:208;;:::o;6272:1107::-;6377:1;6361:18;;:4;:18;;;6357:540;;6513:5;6497:12;;:21;;;;;;;:::i;:::-;;;;;;;;6357:540;;;6549:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;;6549:37;;6618:5;6604:11;:19;6600:115;;;6675:4;6681:11;6694:5;6650:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6600:115;6867:5;6853:11;:19;6835:9;:15;6845:4;6835:15;;;;;;;;;;;;;;;:37;;;;6535:362;6357:540;6925:1;6911:16;;:2;:16;;;6907:425;;7090:5;7074:12;;:21;;;;;;;;;;;6907:425;;;7302:5;7285:9;:13;7295:2;7285:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6907:425;7362:2;7347:25;;7356:4;7347:25;;;7366:5;7347:25;;;;;;:::i;:::-;;;;;;;;6272:1107;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1166::-;3154:6;3162;3170;3178;3227:3;3215:9;3206:7;3202:23;3198:33;3195:120;;;3234:79;;:::i;:::-;3195:120;3375:1;3364:9;3360:17;3354:24;3405:18;3397:6;3394:30;3391:117;;;3427:79;;:::i;:::-;3391:117;3532:74;3598:7;3589:6;3578:9;3574:22;3532:74;:::i;:::-;3522:84;;3325:291;3676:2;3665:9;3661:18;3655:25;3707:18;3699:6;3696:30;3693:117;;;3729:79;;:::i;:::-;3693:117;3834:74;3900:7;3891:6;3880:9;3876:22;3834:74;:::i;:::-;3824:84;;3626:292;3957:2;3983:64;4039:7;4030:6;4019:9;4015:22;3983:64;:::i;:::-;3973:74;;3928:129;4096:2;4122:64;4178:7;4169:6;4158:9;4154:22;4122:64;:::i;:::-;4112:74;;4067:129;3037:1166;;;;;;;:::o;4209:99::-;4261:6;4295:5;4289:12;4279:22;;4209:99;;;:::o;4314:180::-;4362:77;4359:1;4352:88;4459:4;4456:1;4449:15;4483:4;4480:1;4473:15;4500:320;4544:6;4581:1;4575:4;4571:12;4561:22;;4628:1;4622:4;4618:12;4649:18;4639:81;;4705:4;4697:6;4693:17;4683:27;;4639:81;4767:2;4759:6;4756:14;4736:18;4733:38;4730:84;;4786:18;;:::i;:::-;4730:84;4551:269;4500:320;;;:::o;4826:141::-;4875:4;4898:3;4890:11;;4921:3;4918:1;4911:14;4955:4;4952:1;4942:18;4934:26;;4826:141;;;:::o;4973:93::-;5010:6;5057:2;5052;5045:5;5041:14;5037:23;5027:33;;4973:93;;;:::o;5072:107::-;5116:8;5166:5;5160:4;5156:16;5135:37;;5072:107;;;;:::o;5185:393::-;5254:6;5304:1;5292:10;5288:18;5327:97;5357:66;5346:9;5327:97;:::i;:::-;5445:39;5475:8;5464:9;5445:39;:::i;:::-;5433:51;;5517:4;5513:9;5506:5;5502:21;5493:30;;5566:4;5556:8;5552:19;5545:5;5542:30;5532:40;;5261:317;;5185:393;;;;;:::o;5584:60::-;5612:3;5633:5;5626:12;;5584:60;;;:::o;5650:142::-;5700:9;5733:53;5751:34;5760:24;5778:5;5760:24;:::i;:::-;5751:34;:::i;:::-;5733:53;:::i;:::-;5720:66;;5650:142;;;:::o;5798:75::-;5841:3;5862:5;5855:12;;5798:75;;;:::o;5879:269::-;5989:39;6020:7;5989:39;:::i;:::-;6050:91;6099:41;6123:16;6099:41;:::i;:::-;6091:6;6084:4;6078:11;6050:91;:::i;:::-;6044:4;6037:105;5955:193;5879:269;;;:::o;6154:73::-;6199:3;6154:73;:::o;6233:189::-;6310:32;;:::i;:::-;6351:65;6409:6;6401;6395:4;6351:65;:::i;:::-;6286:136;6233:189;;:::o;6428:186::-;6488:120;6505:3;6498:5;6495:14;6488:120;;;6559:39;6596:1;6589:5;6559:39;:::i;:::-;6532:1;6525:5;6521:13;6512:22;;6488:120;;;6428:186;;:::o;6620:543::-;6721:2;6716:3;6713:11;6710:446;;;6755:38;6787:5;6755:38;:::i;:::-;6839:29;6857:10;6839:29;:::i;:::-;6829:8;6825:44;7022:2;7010:10;7007:18;7004:49;;;7043:8;7028:23;;7004:49;7066:80;7122:22;7140:3;7122:22;:::i;:::-;7112:8;7108:37;7095:11;7066:80;:::i;:::-;6725:431;;6710:446;6620:543;;;:::o;7169:117::-;7223:8;7273:5;7267:4;7263:16;7242:37;;7169:117;;;;:::o;7292:169::-;7336:6;7369:51;7417:1;7413:6;7405:5;7402:1;7398:13;7369:51;:::i;:::-;7365:56;7450:4;7444;7440:15;7430:25;;7343:118;7292:169;;;;:::o;7466:295::-;7542:4;7688:29;7713:3;7707:4;7688:29;:::i;:::-;7680:37;;7750:3;7747:1;7743:11;7737:4;7734:21;7726:29;;7466:295;;;;:::o;7766:1395::-;7883:37;7916:3;7883:37;:::i;:::-;7985:18;7977:6;7974:30;7971:56;;;8007:18;;:::i;:::-;7971:56;8051:38;8083:4;8077:11;8051:38;:::i;:::-;8136:67;8196:6;8188;8182:4;8136:67;:::i;:::-;8230:1;8254:4;8241:17;;8286:2;8278:6;8275:14;8303:1;8298:618;;;;8960:1;8977:6;8974:77;;;9026:9;9021:3;9017:19;9011:26;9002:35;;8974:77;9077:67;9137:6;9130:5;9077:67;:::i;:::-;9071:4;9064:81;8933:222;8268:887;;8298:618;8350:4;8346:9;8338:6;8334:22;8384:37;8416:4;8384:37;:::i;:::-;8443:1;8457:208;8471:7;8468:1;8465:14;8457:208;;;8550:9;8545:3;8541:19;8535:26;8527:6;8520:42;8601:1;8593:6;8589:14;8579:24;;8648:2;8637:9;8633:18;8620:31;;8494:4;8491:1;8487:12;8482:17;;8457:208;;;8693:6;8684:7;8681:19;8678:179;;;8751:9;8746:3;8742:19;8736:26;8794:48;8836:4;8828:6;8824:17;8813:9;8794:48;:::i;:::-;8786:6;8779:64;8701:156;8678:179;8903:1;8899;8891:6;8887:14;8883:22;8877:4;8870:36;8305:611;;;8268:887;;7858:1303;;;7766:1395;;:::o;9167:126::-;9204:7;9244:42;9237:5;9233:54;9222:65;;9167:126;;;:::o;9299:96::-;9336:7;9365:24;9383:5;9365:24;:::i;:::-;9354:35;;9299:96;;;:::o;9401:118::-;9488:24;9506:5;9488:24;:::i;:::-;9483:3;9476:37;9401:118;;:::o;9525:222::-;9618:4;9656:2;9645:9;9641:18;9633:26;;9669:71;9737:1;9726:9;9722:17;9713:6;9669:71;:::i;:::-;9525:222;;;;:::o;9753:180::-;9801:77;9798:1;9791:88;9898:4;9895:1;9888:15;9922:4;9919:1;9912:15;9939:191;9979:3;9998:20;10016:1;9998:20;:::i;:::-;9993:25;;10032:20;10050:1;10032:20;:::i;:::-;10027:25;;10075:1;10072;10068:9;10061:16;;10096:3;10093:1;10090:10;10087:36;;;10103:18;;:::i;:::-;10087:36;9939:191;;;;:::o;10136:118::-;10223:24;10241:5;10223:24;:::i;:::-;10218:3;10211:37;10136:118;;:::o;10260:442::-;10409:4;10447:2;10436:9;10432:18;10424:26;;10460:71;10528:1;10517:9;10513:17;10504:6;10460:71;:::i;:::-;10541:72;10609:2;10598:9;10594:18;10585:6;10541:72;:::i;:::-;10623;10691:2;10680:9;10676:18;10667:6;10623:72;:::i;:::-;10260:442;;;;;;:::o;10708:222::-;10801:4;10839:2;10828:9;10824:18;10816:26;;10852:71;10920:1;10909:9;10905:17;10896:6;10852:71;:::i;:::-;10708:222;;;;:::o;241:404:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_591": {
									"entryPoint": 1147,
									"id": 591,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_651": {
									"entryPoint": 1551,
									"id": 651,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_816": {
									"entryPoint": 1140,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_699": {
									"entryPoint": 1165,
									"id": 699,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_430": {
									"entryPoint": 1311,
									"id": 430,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_507": {
									"entryPoint": 2014,
									"id": 507,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_327": {
									"entryPoint": 1010,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_351": {
									"entryPoint": 653,
									"id": 351,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_286": {
									"entryPoint": 763,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_47": {
									"entryPoint": 742,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_246": {
									"entryPoint": 509,
									"id": 246,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_255": {
									"entryPoint": 832,
									"id": 255,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_273": {
									"entryPoint": 687,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_383": {
									"entryPoint": 696,
									"id": 383,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_310": {
									"entryPoint": 976,
									"id": 310,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3364,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2577,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3256,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7360:6",
										"nodeType": "YulBlock",
										"src": "0:7360:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:184:6",
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nativeSrc": "359:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:6",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:6",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:6",
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nativeSrc": "449:11:6",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nativeSrc": "468:11:6",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nativeSrc": "462:18:6",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nativeSrc": "442:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nativeSrc": "442:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nativeSrc": "386:13:6",
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nativeSrc": "378:113:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:6",
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nativeSrc": "402:15:6",
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:6",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nativeSrc": "407:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:6",
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nativeSrc": "507:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:6",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nativeSrc": "500:27:6",
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nativeSrc": "500:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nativeSrc": "587:54:6",
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nativeSrc": "597:38:6",
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:6",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nativeSrc": "611:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:6",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nativeSrc": "627:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nativeSrc": "607:28:6",
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:6",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:6",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nativeSrc": "739:285:6",
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nativeSrc": "749:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nativeSrc": "763:39:6",
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:6",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:6",
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nativeSrc": "818:71:6",
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:6",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nativeSrc": "933:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nativeSrc": "898:65:6",
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nativeSrc": "898:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nativeSrc": "972:46:6",
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nativeSrc": "988:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nativeSrc": "979:39:6",
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:6",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:6",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:6",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nativeSrc": "1148:195:6",
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nativeSrc": "1158:26:6",
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nativeSrc": "1166:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nativeSrc": "1201:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nativeSrc": "1220:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nativeSrc": "1194:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nativeSrc": "1194:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nativeSrc": "1250:86:6",
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nativeSrc": "1258:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:6",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:6",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:6",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nativeSrc": "1389:35:6",
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nativeSrc": "1399:19:6",
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nativeSrc": "1409:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:6",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nativeSrc": "1519:28:6",
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nativeSrc": "1529:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nativeSrc": "1529:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nativeSrc": "1642:28:6",
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nativeSrc": "1652:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nativeSrc": "1652:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nativeSrc": "1721:81:6",
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nativeSrc": "1731:65:6",
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nativeSrc": "1742:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:6",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:6",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nativeSrc": "1853:51:6",
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nativeSrc": "1863:35:6",
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nativeSrc": "1874:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:6",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:6",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nativeSrc": "1953:79:6",
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:6",
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nativeSrc": "2012:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nativeSrc": "2012:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nativeSrc": "1983:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nativeSrc": "1973:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nativeSrc": "1966:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nativeSrc": "1963:63:6",
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:6",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nativeSrc": "2090:87:6",
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nativeSrc": "2100:29:6",
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nativeSrc": "2109:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nativeSrc": "2138:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nativeSrc": "2138:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:6",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:6",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:6",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nativeSrc": "2228:32:6",
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nativeSrc": "2238:16:6",
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:6",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:6",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:6",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nativeSrc": "2309:79:6",
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:6",
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nativeSrc": "2368:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nativeSrc": "2368:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nativeSrc": "2339:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nativeSrc": "2329:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nativeSrc": "2322:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nativeSrc": "2319:63:6",
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:6",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nativeSrc": "2446:87:6",
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nativeSrc": "2456:29:6",
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nativeSrc": "2465:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nativeSrc": "2494:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nativeSrc": "2494:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:6",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:6",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:6",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nativeSrc": "2622:391:6",
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:6",
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nativeSrc": "2670:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nativeSrc": "2670:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nativeSrc": "2639:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nativeSrc": "2635:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nativeSrc": "2632:119:6",
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nativeSrc": "2761:117:6",
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nativeSrc": "2776:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nativeSrc": "2836:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nativeSrc": "2815:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:6",
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nativeSrc": "2903:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nativeSrc": "2964:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nativeSrc": "2943:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:6",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:6",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:6",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:6",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nativeSrc": "3061:48:6",
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nativeSrc": "3071:32:6",
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nativeSrc": "3089:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nativeSrc": "3082:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:6",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:6",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nativeSrc": "3174:50:6",
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nativeSrc": "3196:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nativeSrc": "3184:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nativeSrc": "3184:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:6",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:6",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nativeSrc": "3322:118:6",
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nativeSrc": "3332:26:6",
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nativeSrc": "3340:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nativeSrc": "3415:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nativeSrc": "3368:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nativeSrc": "3368:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:6",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:6",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:6",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nativeSrc": "3511:53:6",
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nativeSrc": "3533:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nativeSrc": "3521:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nativeSrc": "3521:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:6",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:6",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nativeSrc": "3668:124:6",
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nativeSrc": "3678:26:6",
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nativeSrc": "3686:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nativeSrc": "3767:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nativeSrc": "3714:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nativeSrc": "3714:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:6",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:6",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:6",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nativeSrc": "3898:519:6",
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:6",
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nativeSrc": "3946:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nativeSrc": "3946:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nativeSrc": "3915:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nativeSrc": "3911:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nativeSrc": "3908:119:6",
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nativeSrc": "4037:117:6",
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nativeSrc": "4052:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nativeSrc": "4112:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nativeSrc": "4091:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:6",
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nativeSrc": "4179:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nativeSrc": "4240:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nativeSrc": "4219:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:6",
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nativeSrc": "4307:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nativeSrc": "4368:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nativeSrc": "4347:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:6",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:6",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:6",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:6",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:6",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nativeSrc": "4466:43:6",
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nativeSrc": "4476:27:6",
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nativeSrc": "4487:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:6",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:6",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nativeSrc": "4576:51:6",
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nativeSrc": "4598:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nativeSrc": "4586:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nativeSrc": "4586:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:6",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:6",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nativeSrc": "4727:120:6",
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nativeSrc": "4737:26:6",
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nativeSrc": "4745:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nativeSrc": "4822:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nativeSrc": "4773:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nativeSrc": "4773:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:6",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:6",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:6",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nativeSrc": "4919:263:6",
													"nodeType": "YulBlock",
													"src": "4919:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:6",
																"nodeType": "YulBlock",
																"src": "4965:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:6"
																			},
																			"nativeSrc": "4967:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:6"
																		},
																		"nativeSrc": "4967:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:6"
																		},
																		"nativeSrc": "4936:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																},
																"nativeSrc": "4932:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:6"
															},
															"nativeSrc": "4929:119:6",
															"nodeType": "YulIf",
															"src": "4929:119:6"
														},
														{
															"nativeSrc": "5058:117:6",
															"nodeType": "YulBlock",
															"src": "5058:117:6",
															"statements": [
																{
																	"nativeSrc": "5073:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:6"
																				},
																				"nativeSrc": "5133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:6"
																		},
																		"nativeSrc": "5112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:6",
														"nodeType": "YulTypedName",
														"src": "4889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:6",
														"nodeType": "YulTypedName",
														"src": "4900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:6",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													}
												],
												"src": "4853:329:6"
											},
											{
												"body": {
													"nativeSrc": "5271:391:6",
													"nodeType": "YulBlock",
													"src": "5271:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5317:83:6",
																"nodeType": "YulBlock",
																"src": "5317:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5319:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:6"
																			},
																			"nativeSrc": "5319:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:6"
																		},
																		"nativeSrc": "5319:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5292:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5301:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5288:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:6"
																		},
																		"nativeSrc": "5288:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5284:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:6"
																},
																"nativeSrc": "5284:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5284:32:6"
															},
															"nativeSrc": "5281:119:6",
															"nodeType": "YulIf",
															"src": "5281:119:6"
														},
														{
															"nativeSrc": "5410:117:6",
															"nodeType": "YulBlock",
															"src": "5410:117:6",
															"statements": [
																{
																	"nativeSrc": "5425:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5439:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5429:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5454:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5454:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5489:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5500:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5485:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:6"
																				},
																				"nativeSrc": "5485:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5509:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5464:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:6"
																		},
																		"nativeSrc": "5464:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5454:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5537:118:6",
															"nodeType": "YulBlock",
															"src": "5537:118:6",
															"statements": [
																{
																	"nativeSrc": "5552:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5566:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5556:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5582:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5582:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5617:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5628:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5613:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:6"
																				},
																				"nativeSrc": "5613:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5637:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5592:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:6"
																		},
																		"nativeSrc": "5592:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5582:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5188:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5233:9:6",
														"nodeType": "YulTypedName",
														"src": "5233:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5244:7:6",
														"nodeType": "YulTypedName",
														"src": "5244:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5256:6:6",
														"nodeType": "YulTypedName",
														"src": "5256:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5264:6:6",
														"nodeType": "YulTypedName",
														"src": "5264:6:6",
														"type": ""
													}
												],
												"src": "5188:474:6"
											},
											{
												"body": {
													"nativeSrc": "5696:152:6",
													"nodeType": "YulBlock",
													"src": "5696:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5713:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5716:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5706:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:6"
																},
																"nativeSrc": "5706:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5706:88:6"
															},
															"nativeSrc": "5706:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5810:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5813:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5803:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:6"
																},
																"nativeSrc": "5803:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5803:15:6"
															},
															"nativeSrc": "5803:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5834:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5837:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5827:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:6"
																},
																"nativeSrc": "5827:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5827:15:6"
															},
															"nativeSrc": "5827:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5668:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:6"
											},
											{
												"body": {
													"nativeSrc": "5905:269:6",
													"nodeType": "YulBlock",
													"src": "5905:269:6",
													"statements": [
														{
															"nativeSrc": "5915:22:6",
															"nodeType": "YulAssignment",
															"src": "5915:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5929:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5935:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5925:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:6"
																},
																"nativeSrc": "5925:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5925:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5915:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:6"
																}
															]
														},
														{
															"nativeSrc": "5946:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5976:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5982:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5972:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:6"
																},
																"nativeSrc": "5972:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5972:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5950:18:6",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6023:51:6",
																"nodeType": "YulBlock",
																"src": "6023:51:6",
																"statements": [
																	{
																		"nativeSrc": "6037:27:6",
																		"nodeType": "YulAssignment",
																		"src": "6037:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6051:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6059:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6047:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:6"
																			},
																			"nativeSrc": "6047:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6037:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6003:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5996:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:6"
																},
																"nativeSrc": "5996:26:6",
																"nodeType": "YulFunctionCall",
																"src": "5996:26:6"
															},
															"nativeSrc": "5993:81:6",
															"nodeType": "YulIf",
															"src": "5993:81:6"
														},
														{
															"body": {
																"nativeSrc": "6126:42:6",
																"nodeType": "YulBlock",
																"src": "6126:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6140:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:6"
																			},
																			"nativeSrc": "6140:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:6"
																		},
																		"nativeSrc": "6140:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6090:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6113:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6121:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6110:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:6"
																		},
																		"nativeSrc": "6110:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6087:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:6"
																},
																"nativeSrc": "6087:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6087:38:6"
															},
															"nativeSrc": "6084:84:6",
															"nodeType": "YulIf",
															"src": "6084:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5854:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5889:4:6",
														"nodeType": "YulTypedName",
														"src": "5889:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5898:6:6",
														"nodeType": "YulTypedName",
														"src": "5898:6:6",
														"type": ""
													}
												],
												"src": "5854:320:6"
											},
											{
												"body": {
													"nativeSrc": "6245:53:6",
													"nodeType": "YulBlock",
													"src": "6245:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6262:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6262:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6285:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6285:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6267:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "6267:17:6"
																		},
																		"nativeSrc": "6267:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6267:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6255:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:6"
																},
																"nativeSrc": "6255:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6255:37:6"
															},
															"nativeSrc": "6255:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "6255:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6180:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6233:5:6",
														"nodeType": "YulTypedName",
														"src": "6233:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6240:3:6",
														"nodeType": "YulTypedName",
														"src": "6240:3:6",
														"type": ""
													}
												],
												"src": "6180:118:6"
											},
											{
												"body": {
													"nativeSrc": "6458:288:6",
													"nodeType": "YulBlock",
													"src": "6458:288:6",
													"statements": [
														{
															"nativeSrc": "6468:26:6",
															"nodeType": "YulAssignment",
															"src": "6468:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6480:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6480:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6491:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6491:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6476:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6476:3:6"
																},
																"nativeSrc": "6476:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6476:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6468:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6468:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6548:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6548:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6561:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6561:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6572:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6572:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6557:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6557:3:6"
																		},
																		"nativeSrc": "6557:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6557:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6504:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6504:43:6"
																},
																"nativeSrc": "6504:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6504:71:6"
															},
															"nativeSrc": "6504:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6504:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6629:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6642:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6653:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6653:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6638:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6638:3:6"
																		},
																		"nativeSrc": "6638:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6638:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6585:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6585:43:6"
																},
																"nativeSrc": "6585:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6585:72:6"
															},
															"nativeSrc": "6585:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6585:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6711:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6711:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6724:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6724:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6735:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6735:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6720:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6720:3:6"
																		},
																		"nativeSrc": "6720:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6720:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6667:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6667:43:6"
																},
																"nativeSrc": "6667:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6667:72:6"
															},
															"nativeSrc": "6667:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6667:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6304:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6414:9:6",
														"nodeType": "YulTypedName",
														"src": "6414:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6426:6:6",
														"nodeType": "YulTypedName",
														"src": "6426:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6434:6:6",
														"nodeType": "YulTypedName",
														"src": "6434:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6442:6:6",
														"nodeType": "YulTypedName",
														"src": "6442:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6453:4:6",
														"nodeType": "YulTypedName",
														"src": "6453:4:6",
														"type": ""
													}
												],
												"src": "6304:442:6"
											},
											{
												"body": {
													"nativeSrc": "6850:124:6",
													"nodeType": "YulBlock",
													"src": "6850:124:6",
													"statements": [
														{
															"nativeSrc": "6860:26:6",
															"nodeType": "YulAssignment",
															"src": "6860:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6872:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6872:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6883:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6883:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6868:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6868:3:6"
																},
																"nativeSrc": "6868:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6868:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6860:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6860:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6940:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6940:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6953:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6953:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6964:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6964:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6949:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6949:3:6"
																		},
																		"nativeSrc": "6949:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6949:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6896:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6896:43:6"
																},
																"nativeSrc": "6896:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6896:71:6"
															},
															"nativeSrc": "6896:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6896:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6752:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6822:9:6",
														"nodeType": "YulTypedName",
														"src": "6822:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6834:6:6",
														"nodeType": "YulTypedName",
														"src": "6834:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6845:4:6",
														"nodeType": "YulTypedName",
														"src": "6845:4:6",
														"type": ""
													}
												],
												"src": "6752:222:6"
											},
											{
												"body": {
													"nativeSrc": "7008:152:6",
													"nodeType": "YulBlock",
													"src": "7008:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7025:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7028:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7018:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:6"
																},
																"nativeSrc": "7018:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7018:88:6"
															},
															"nativeSrc": "7018:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7018:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7122:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7125:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7115:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:6"
																},
																"nativeSrc": "7115:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7115:15:6"
															},
															"nativeSrc": "7115:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7115:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7146:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7149:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7139:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:6"
																},
																"nativeSrc": "7139:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7139:15:6"
															},
															"nativeSrc": "7139:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7139:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6980:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:180:6"
											},
											{
												"body": {
													"nativeSrc": "7210:147:6",
													"nodeType": "YulBlock",
													"src": "7210:147:6",
													"statements": [
														{
															"nativeSrc": "7220:25:6",
															"nodeType": "YulAssignment",
															"src": "7220:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7243:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7225:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7225:17:6"
																},
																"nativeSrc": "7225:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7225:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7220:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7220:1:6"
																}
															]
														},
														{
															"nativeSrc": "7254:25:6",
															"nodeType": "YulAssignment",
															"src": "7254:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7277:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7259:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7259:17:6"
																},
																"nativeSrc": "7259:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7259:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7254:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7254:1:6"
																}
															]
														},
														{
															"nativeSrc": "7288:16:6",
															"nodeType": "YulAssignment",
															"src": "7288:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7299:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7302:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7302:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7295:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:6"
																},
																"nativeSrc": "7295:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7295:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7288:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7328:22:6",
																"nodeType": "YulBlock",
																"src": "7328:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7330:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7330:16:6"
																			},
																			"nativeSrc": "7330:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7330:18:6"
																		},
																		"nativeSrc": "7330:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7330:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7320:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7320:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7317:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7317:2:6"
																},
																"nativeSrc": "7317:10:6",
																"nodeType": "YulFunctionCall",
																"src": "7317:10:6"
															},
															"nativeSrc": "7314:36:6",
															"nodeType": "YulIf",
															"src": "7314:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7166:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7197:1:6",
														"nodeType": "YulTypedName",
														"src": "7197:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7200:1:6",
														"nodeType": "YulTypedName",
														"src": "7200:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7206:3:6",
														"nodeType": "YulTypedName",
														"src": "7206:3:6",
														"type": ""
													}
												],
												"src": "7166:191:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610a81565b60405180910390f35b6100cd60048036038101906100c89190610b32565b61028d565b6040516100da9190610b8a565b60405180910390f35b6100eb6102af565b6040516100f89190610bb2565b60405180910390f35b61011b60048036038101906101169190610bcb565b6102b8565b6040516101289190610b8a565b60405180910390f35b6101396102e6565b6040516101469190610c36565b60405180910390f35b61016960048036038101906101649190610c4f565b6102fb565b6040516101769190610bb2565b60405180910390f35b610187610340565b6040516101949190610a81565b60405180910390f35b6101b760048036038101906101b29190610b32565b6103d0565b6040516101c49190610b8a565b60405180910390f35b6101e760048036038101906101e29190610c7a565b6103f2565b6040516101f49190610bb2565b60405180910390f35b60606003805461020c90610ce5565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610ce5565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f80610297610474565b90506102a481858561047b565b600191505092915050565b5f600254905090565b5f806102c2610474565b90506102cf85828561048d565b6102da85858561051f565b60019150509392505050565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034f90610ce5565b80601f016020809104026020016040519081016040528092919081815260200182805461037b90610ce5565b80156103c65780601f1061039d576101008083540402835291602001916103c6565b820191905f5260205f20905b8154815290600101906020018083116103a957829003601f168201915b5050505050905090565b5f806103da610474565b90506103e781858561051f565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610488838383600161060f565b505050565b5f61049884846103f2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610519578181101561050a578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050193929190610d24565b60405180910390fd5b61051884848484035f61060f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361058f575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105869190610d59565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ff575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105f69190610d59565b60405180910390fd5b61060a8383836107de565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361067f575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106769190610d59565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106ef575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106e69190610d59565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107d8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107cf9190610bb2565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361082e578060025f8282546108229190610d9f565b925050819055506108fc565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108b7578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108ae93929190610d24565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610943578060025f828254039250508190555061098d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109ea9190610bb2565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610a2e578082015181840152602081019050610a13565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610a53826109f7565b610a5d8185610a01565b9350610a6d818560208601610a11565b610a7681610a39565b840191505092915050565b5f6020820190508181035f830152610a998184610a49565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610ace82610aa5565b9050919050565b610ade81610ac4565b8114610ae8575f80fd5b50565b5f81359050610af981610ad5565b92915050565b5f819050919050565b610b1181610aff565b8114610b1b575f80fd5b50565b5f81359050610b2c81610b08565b92915050565b5f8060408385031215610b4857610b47610aa1565b5b5f610b5585828601610aeb565b9250506020610b6685828601610b1e565b9150509250929050565b5f8115159050919050565b610b8481610b70565b82525050565b5f602082019050610b9d5f830184610b7b565b92915050565b610bac81610aff565b82525050565b5f602082019050610bc55f830184610ba3565b92915050565b5f805f60608486031215610be257610be1610aa1565b5b5f610bef86828701610aeb565b9350506020610c0086828701610aeb565b9250506040610c1186828701610b1e565b9150509250925092565b5f60ff82169050919050565b610c3081610c1b565b82525050565b5f602082019050610c495f830184610c27565b92915050565b5f60208284031215610c6457610c63610aa1565b5b5f610c7184828501610aeb565b91505092915050565b5f8060408385031215610c9057610c8f610aa1565b5b5f610c9d85828601610aeb565b9250506020610cae85828601610aeb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cfc57607f821691505b602082108103610d0f57610d0e610cb8565b5b50919050565b610d1e81610ac4565b82525050565b5f606082019050610d375f830186610d15565b610d446020830185610ba3565b610d516040830184610ba3565b949350505050565b5f602082019050610d6c5f830184610d15565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610da982610aff565b9150610db483610aff565b9250828201905080821115610dcc57610dcb610d72565b5b9291505056fea2646970667358221220f90e0ded08b7c39681fc1700f533ca663905923552b1069f86604ae8faae66e664736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB32 JUMP JUMPDEST PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC7A JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x297 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C2 PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x48D JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34F SWAP1 PUSH2 0xCE5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37B SWAP1 PUSH2 0xCE5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3DA PUSH2 0x474 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E7 DUP2 DUP6 DUP6 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x488 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x60F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x498 DUP5 DUP5 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x519 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x50A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x518 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x60F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60A DUP4 DUP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x67F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x676 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7D8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8FC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8B7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x943 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA2E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA13 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA53 DUP3 PUSH2 0x9F7 JUMP JUMPDEST PUSH2 0xA5D DUP2 DUP6 PUSH2 0xA01 JUMP JUMPDEST SWAP4 POP PUSH2 0xA6D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA11 JUMP JUMPDEST PUSH2 0xA76 DUP2 PUSH2 0xA39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA99 DUP2 DUP5 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xACE DUP3 PUSH2 0xAA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0xAC4 JUMP JUMPDEST DUP2 EQ PUSH2 0xAE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAF9 DUP2 PUSH2 0xAD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB11 DUP2 PUSH2 0xAFF JUMP JUMPDEST DUP2 EQ PUSH2 0xB1B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB2C DUP2 PUSH2 0xB08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB55 DUP6 DUP3 DUP7 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB66 DUP6 DUP3 DUP7 ADD PUSH2 0xB1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB84 DUP2 PUSH2 0xB70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9D PUSH0 DUP4 ADD DUP5 PUSH2 0xB7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBAC DUP2 PUSH2 0xAFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBC5 PUSH0 DUP4 ADD DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBEF DUP7 DUP3 DUP8 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC00 DUP7 DUP3 DUP8 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC11 DUP7 DUP3 DUP8 ADD PUSH2 0xB1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC30 DUP2 PUSH2 0xC1B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH0 DUP4 ADD DUP5 PUSH2 0xC27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC71 DUP5 DUP3 DUP6 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC90 JUMPI PUSH2 0xC8F PUSH2 0xAA1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC9D DUP6 DUP3 DUP7 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCAE DUP6 DUP3 DUP7 ADD PUSH2 0xAEB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCFC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD0F JUMPI PUSH2 0xD0E PUSH2 0xCB8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xAC4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD37 PUSH0 DUP4 ADD DUP7 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0xD44 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0xD51 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6C PUSH0 DUP4 ADD DUP5 PUSH2 0xD15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDA9 DUP3 PUSH2 0xAFF JUMP JUMPDEST SWAP2 POP PUSH2 0xDB4 DUP4 PUSH2 0xAFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDCC JUMPI PUSH2 0xDCB PUSH2 0xD72 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xE 0xD 0xED ADDMOD 0xB7 0xC3 SWAP7 DUP2 0xFC OR STOP CREATE2 CALLER 0xCA PUSH7 0x3905923552B106 SWAP16 DUP7 PUSH1 0x4A 0xE8 STATICCALL 0xAE PUSH7 0xE664736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "241:404:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2075:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4294:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3145:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5040:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;541:102:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3300:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2277:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3611:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3847:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2075:89;2120:13;2152:5;2145:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2075:89;:::o;4294:186::-;4367:4;4383:13;4399:12;:10;:12::i;:::-;4383:28;;4421:31;4430:5;4437:7;4446:5;4421:8;:31::i;:::-;4469:4;4462:11;;;4294:186;;;;:::o;3145:97::-;3197:7;3223:12;;3216:19;;3145:97;:::o;5040:244::-;5127:4;5143:15;5161:12;:10;:12::i;:::-;5143:30;;5183:37;5199:4;5205:7;5214:5;5183:15;:37::i;:::-;5230:26;5240:4;5246:2;5250:5;5230:9;:26::i;:::-;5273:4;5266:11;;;5040:244;;;;;:::o;541:102:0:-;591:5;621:14;;;;;;;;;;;608:28;;541:102;:::o;3300:116:2:-;3365:7;3391:9;:18;3401:7;3391:18;;;;;;;;;;;;;;;;3384:25;;3300:116;;;:::o;2277:93::-;2324:13;2356:7;2349:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:93;:::o;3611:178::-;3680:4;3696:13;3712:12;:10;:12::i;:::-;3696:28;;3734:27;3744:5;3751:2;3755:5;3734:9;:27::i;:::-;3778:4;3771:11;;;3611:178;;;;:::o;3847:140::-;3927:7;3953:11;:18;3965:5;3953:18;;;;;;;;;;;;;;;:27;3972:7;3953:27;;;;;;;;;;;;;;;;3946:34;;3847:140;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8990:128:2:-;9074:37;9083:5;9090:7;9099:5;9106:4;9074:8;:37::i;:::-;8990:128;;;:::o;10664:477::-;10763:24;10790:25;10800:5;10807:7;10790:9;:25::i;:::-;10763:52;;10849:17;10829:16;:37;10825:310;;10905:5;10886:16;:24;10882:130;;;10964:7;10973:16;10991:5;10937:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10882:130;11053:57;11062:5;11069:7;11097:5;11078:16;:24;11104:5;11053:8;:57::i;:::-;10825:310;10753:388;10664:477;;;:::o;5657:300::-;5756:1;5740:18;;:4;:18;;;5736:86;;5808:1;5781:30;;;;;;;;;;;:::i;:::-;;;;;;;;5736:86;5849:1;5835:16;;:2;:16;;;5831:86;;5903:1;5874:32;;;;;;;;;;;:::i;:::-;;;;;;;;5831:86;5926:24;5934:4;5940:2;5944:5;5926:7;:24::i;:::-;5657:300;;;:::o;9950:432::-;10079:1;10062:19;;:5;:19;;;10058:89;;10133:1;10104:32;;;;;;;;;;;:::i;:::-;;;;;;;;10058:89;10179:1;10160:21;;:7;:21;;;10156:90;;10232:1;10204:31;;;;;;;;;;;:::i;:::-;;;;;;;;10156:90;10285:5;10255:11;:18;10267:5;10255:18;;;;;;;;;;;;;;;:27;10274:7;10255:27;;;;;;;;;;;;;;;:35;;;;10304:9;10300:76;;;10350:7;10334:31;;10343:5;10334:31;;;10359:5;10334:31;;;;;;:::i;:::-;;;;;;;;10300:76;9950:432;;;;:::o;6272:1107::-;6377:1;6361:18;;:4;:18;;;6357:540;;6513:5;6497:12;;:21;;;;;;;:::i;:::-;;;;;;;;6357:540;;;6549:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;;6549:37;;6618:5;6604:11;:19;6600:115;;;6675:4;6681:11;6694:5;6650:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6600:115;6867:5;6853:11;:19;6835:9;:15;6845:4;6835:15;;;;;;;;;;;;;;;:37;;;;6535:362;6357:540;6925:1;6911:16;;:2;:16;;;6907:425;;7090:5;7074:12;;:21;;;;;;;;;;;6907:425;;;7302:5;7285:9;:13;7295:2;7285:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6907:425;7362:2;7347:25;;7356:4;7347:25;;;7366:5;7347:25;;;;;;:::i;:::-;;;;;;;;6272:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "718400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "2473",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 645,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 645,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 645,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 316,
									"end": 535,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 535,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 316,
									"end": 535,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 316,
									"end": 535,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 316,
									"end": 535,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 316,
									"end": 535,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 316,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 316,
									"end": 535,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 428,
									"end": 433,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 435,
									"end": 442,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1971,
									"end": 1976,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1963,
									"end": 1968,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1963,
									"end": 1976,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1963,
									"end": 1976,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1963,
									"end": 1976,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1963,
									"end": 1976,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1963,
									"end": 1976,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1963,
									"end": 1976,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1963,
									"end": 1976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1963,
									"end": 1976,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1963,
									"end": 1976,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1963,
									"end": 1976,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1996,
									"end": 2003,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1986,
									"end": 1993,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1986,
									"end": 2003,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1986,
									"end": 2003,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1986,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1986,
									"end": 2003,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1986,
									"end": 2003,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1986,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1986,
									"end": 2003,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1986,
									"end": 2003,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1986,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1986,
									"end": 2003,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1897,
									"end": 2010,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1897,
									"end": 2010,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 477,
									"end": 486,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 454,
									"end": 468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 454,
									"end": 468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 454,
									"end": 487,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 497,
									"end": 528,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 503,
									"end": 513,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 515,
									"end": 527,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 497,
									"end": 502,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 497,
									"end": 502,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 497,
									"end": 502,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 497,
									"end": 528,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 497,
									"end": 528,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 497,
									"end": 528,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 497,
									"end": 528,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 497,
									"end": 528,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 316,
									"end": 535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 241,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 241,
									"end": 645,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7722,
									"end": 7930,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 7722,
									"end": 7930,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7811,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7792,
									"end": 7813,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7792,
									"end": 7813,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7792,
									"end": 7799,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7792,
									"end": 7813,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7792,
									"end": 7813,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7792,
									"end": 7813,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7788,
									"end": 7879,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 7788,
									"end": 7879,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7865,
									"end": 7866,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 7836,
									"end": 7868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7836,
									"end": 7868,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7788,
									"end": 7879,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 7788,
									"end": 7879,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7888,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7908,
									"end": 7915,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7917,
									"end": 7922,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7888,
									"end": 7895,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7888,
									"end": 7895,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7888,
									"end": 7895,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7888,
									"end": 7923,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7888,
									"end": 7923,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7888,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7888,
									"end": 7923,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7888,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7722,
									"end": 7930,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7722,
									"end": 7930,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7722,
									"end": 7930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6272,
									"end": 7379,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 6272,
									"end": 7379,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6377,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6361,
									"end": 6379,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6361,
									"end": 6379,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6361,
									"end": 6365,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6361,
									"end": 6379,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6361,
									"end": 6379,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6361,
									"end": 6379,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6357,
									"end": 6897,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 6357,
									"end": 6897,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6513,
									"end": 6518,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6509,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6497,
									"end": 6509,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 6497,
									"end": 6518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6497,
									"end": 6518,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6357,
									"end": 6897,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6357,
									"end": 6897,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6357,
									"end": 6897,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 6357,
									"end": 6897,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6549,
									"end": 6568,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6549,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6549,
									"end": 6586,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6618,
									"end": 6623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6604,
									"end": 6615,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6604,
									"end": 6623,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6600,
									"end": 6715,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6600,
									"end": 6715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 6600,
									"end": 6715,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6675,
									"end": 6679,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6681,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6694,
									"end": 6699,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6650,
									"end": 6700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6650,
									"end": 6700,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6600,
									"end": 6715,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 6600,
									"end": 6715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6867,
									"end": 6872,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6853,
									"end": 6864,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6853,
									"end": 6872,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6835,
									"end": 6850,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6872,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6872,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6872,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6835,
									"end": 6872,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6535,
									"end": 6897,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6357,
									"end": 6897,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 6357,
									"end": 6897,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6911,
									"end": 6927,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6911,
									"end": 6927,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6911,
									"end": 6913,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6911,
									"end": 6927,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6911,
									"end": 6927,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6911,
									"end": 6927,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6907,
									"end": 7332,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6907,
									"end": 7332,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7090,
									"end": 7095,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7086,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7074,
									"end": 7086,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7074,
									"end": 7095,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6907,
									"end": 7332,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6907,
									"end": 7332,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6907,
									"end": 7332,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6907,
									"end": 7332,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7302,
									"end": 7307,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7294,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7295,
									"end": 7297,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6907,
									"end": 7332,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6907,
									"end": 7332,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7364,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7356,
									"end": 7360,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7366,
									"end": 7371,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7347,
									"end": 7372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7347,
									"end": 7372,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6272,
									"end": 7379,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6272,
									"end": 7379,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6272,
									"end": 7379,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6272,
									"end": 7379,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2677,
									"end": 2754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2851,
									"end": 2856,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2833,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2831,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2823,
									"end": 2858,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2870,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2862,
									"end": 2874,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2945,
									"end": 2950,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 2982,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2970,
									"end": 2983,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3019,
									"end": 3024,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 2992,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2888,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3154,
									"end": 3160,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3168,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3170,
									"end": 3176,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3178,
									"end": 3184,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3215,
									"end": 3224,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3206,
									"end": 3213,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3202,
									"end": 3225,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3198,
									"end": 3231,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3234,
									"end": 3313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 3234,
									"end": 3313,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 3195,
									"end": 3315,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3375,
									"end": 3376,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3364,
									"end": 3373,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3360,
									"end": 3377,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3354,
									"end": 3378,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3405,
									"end": 3423,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3397,
									"end": 3403,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3394,
									"end": 3424,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3427,
									"end": 3506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3427,
									"end": 3506,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3391,
									"end": 3508,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 3598,
									"end": 3605,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3589,
									"end": 3595,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3578,
									"end": 3587,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3574,
									"end": 3596,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3532,
									"end": 3606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 3532,
									"end": 3606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3522,
									"end": 3606,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3522,
									"end": 3606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3325,
									"end": 3616,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3676,
									"end": 3678,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3665,
									"end": 3674,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3661,
									"end": 3679,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3655,
									"end": 3680,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3707,
									"end": 3725,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3699,
									"end": 3705,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3726,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3729,
									"end": 3808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 3729,
									"end": 3808,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 3693,
									"end": 3810,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3900,
									"end": 3907,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3891,
									"end": 3897,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3880,
									"end": 3889,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3876,
									"end": 3898,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3834,
									"end": 3908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3834,
									"end": 3908,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3824,
									"end": 3908,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3824,
									"end": 3908,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3918,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3959,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 4039,
									"end": 4046,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4030,
									"end": 4036,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4019,
									"end": 4028,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3983,
									"end": 4047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3983,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3973,
									"end": 4047,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3973,
									"end": 4047,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3928,
									"end": 4057,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4096,
									"end": 4098,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 4178,
									"end": 4185,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4169,
									"end": 4175,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4158,
									"end": 4167,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4154,
									"end": 4176,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 4122,
									"end": 4186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 4122,
									"end": 4186,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4112,
									"end": 4186,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4112,
									"end": 4186,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4067,
									"end": 4196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 4203,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3037,
									"end": 4203,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4209,
									"end": 4308,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 4209,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4261,
									"end": 4267,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4295,
									"end": 4300,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4289,
									"end": 4301,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4279,
									"end": 4301,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4279,
									"end": 4301,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4209,
									"end": 4308,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4209,
									"end": 4308,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4209,
									"end": 4308,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4209,
									"end": 4308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4314,
									"end": 4494,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 4314,
									"end": 4494,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4362,
									"end": 4439,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4359,
									"end": 4360,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4352,
									"end": 4440,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4459,
									"end": 4463,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4456,
									"end": 4457,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4449,
									"end": 4464,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4480,
									"end": 4481,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4473,
									"end": 4488,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4500,
									"end": 4820,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 4500,
									"end": 4820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4544,
									"end": 4550,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4581,
									"end": 4582,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4575,
									"end": 4579,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4571,
									"end": 4583,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4561,
									"end": 4583,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4561,
									"end": 4583,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4628,
									"end": 4629,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4622,
									"end": 4626,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4618,
									"end": 4630,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4649,
									"end": 4667,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4639,
									"end": 4720,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4639,
									"end": 4720,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4705,
									"end": 4709,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 4697,
									"end": 4703,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4693,
									"end": 4710,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4710,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4710,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4639,
									"end": 4720,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4639,
									"end": 4720,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4767,
									"end": 4769,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4759,
									"end": 4765,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4756,
									"end": 4770,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4736,
									"end": 4754,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4733,
									"end": 4771,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4730,
									"end": 4814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4730,
									"end": 4814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4786,
									"end": 4804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4786,
									"end": 4804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 4786,
									"end": 4804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4786,
									"end": 4804,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4786,
									"end": 4804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4730,
									"end": 4814,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4730,
									"end": 4814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4551,
									"end": 4820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4500,
									"end": 4820,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4500,
									"end": 4820,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4500,
									"end": 4820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4500,
									"end": 4820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4826,
									"end": 4967,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4826,
									"end": 4967,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4875,
									"end": 4879,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4898,
									"end": 4901,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4890,
									"end": 4901,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4890,
									"end": 4901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4921,
									"end": 4924,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4918,
									"end": 4919,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4911,
									"end": 4925,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4955,
									"end": 4959,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4952,
									"end": 4953,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4942,
									"end": 4960,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 4960,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4934,
									"end": 4960,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4826,
									"end": 4967,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4826,
									"end": 4967,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4826,
									"end": 4967,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4826,
									"end": 4967,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 5066,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 4973,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5010,
									"end": 5016,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5057,
									"end": 5059,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5052,
									"end": 5054,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5045,
									"end": 5050,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5055,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5037,
									"end": 5060,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5027,
									"end": 5060,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5027,
									"end": 5060,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 5066,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 5066,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 5066,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4973,
									"end": 5066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5116,
									"end": 5124,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5166,
									"end": 5171,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5160,
									"end": 5164,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5156,
									"end": 5172,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 5135,
									"end": 5172,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5135,
									"end": 5172,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5072,
									"end": 5179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5072,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5254,
									"end": 5260,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5304,
									"end": 5305,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5292,
									"end": 5302,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5288,
									"end": 5306,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5327,
									"end": 5424,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 5357,
									"end": 5423,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5346,
									"end": 5355,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5327,
									"end": 5424,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5327,
									"end": 5424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5327,
									"end": 5424,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 5327,
									"end": 5424,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5445,
									"end": 5484,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 5475,
									"end": 5483,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5445,
									"end": 5484,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5445,
									"end": 5484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5445,
									"end": 5484,
									"name": "tag",
									"source": 6,
									"value": "132"
								},
								{
									"begin": 5445,
									"end": 5484,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5433,
									"end": 5484,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 5433,
									"end": 5484,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5517,
									"end": 5521,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5513,
									"end": 5522,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5506,
									"end": 5511,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5502,
									"end": 5523,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5493,
									"end": 5523,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5493,
									"end": 5523,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5566,
									"end": 5570,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5556,
									"end": 5564,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5552,
									"end": 5571,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5545,
									"end": 5550,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5542,
									"end": 5572,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5532,
									"end": 5572,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5532,
									"end": 5572,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5261,
									"end": 5578,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5261,
									"end": 5578,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5185,
									"end": 5578,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5185,
									"end": 5578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5584,
									"end": 5644,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 5584,
									"end": 5644,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5612,
									"end": 5615,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5633,
									"end": 5638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5626,
									"end": 5638,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5626,
									"end": 5638,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5584,
									"end": 5644,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5584,
									"end": 5644,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5584,
									"end": 5644,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5584,
									"end": 5644,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5650,
									"end": 5792,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 5650,
									"end": 5792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5700,
									"end": 5709,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5733,
									"end": 5786,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5751,
									"end": 5785,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5760,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5778,
									"end": 5783,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5760,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5760,
									"end": 5784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5760,
									"end": 5784,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5760,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5751,
									"end": 5785,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 5751,
									"end": 5785,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5751,
									"end": 5785,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5751,
									"end": 5785,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5733,
									"end": 5786,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5733,
									"end": 5786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5733,
									"end": 5786,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5733,
									"end": 5786,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5720,
									"end": 5786,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5720,
									"end": 5786,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5650,
									"end": 5792,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5650,
									"end": 5792,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5650,
									"end": 5792,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5650,
									"end": 5792,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5798,
									"end": 5873,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5798,
									"end": 5873,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5841,
									"end": 5844,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5862,
									"end": 5867,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5855,
									"end": 5867,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5855,
									"end": 5867,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5798,
									"end": 5873,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5798,
									"end": 5873,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5798,
									"end": 5873,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5798,
									"end": 5873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5879,
									"end": 6148,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 5879,
									"end": 6148,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5989,
									"end": 6028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 6020,
									"end": 6027,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5989,
									"end": 6028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 5989,
									"end": 6028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5989,
									"end": 6028,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 5989,
									"end": 6028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6050,
									"end": 6141,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 6099,
									"end": 6140,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 6123,
									"end": 6139,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6099,
									"end": 6140,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 6099,
									"end": 6140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6099,
									"end": 6140,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 6099,
									"end": 6140,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6091,
									"end": 6097,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6084,
									"end": 6088,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6078,
									"end": 6089,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6050,
									"end": 6141,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 6050,
									"end": 6141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6050,
									"end": 6141,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 6050,
									"end": 6141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6044,
									"end": 6048,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6037,
									"end": 6142,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5955,
									"end": 6148,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5879,
									"end": 6148,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5879,
									"end": 6148,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5879,
									"end": 6148,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5879,
									"end": 6148,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6154,
									"end": 6227,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 6154,
									"end": 6227,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6199,
									"end": 6202,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6154,
									"end": 6227,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6154,
									"end": 6227,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6422,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6233,
									"end": 6422,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6310,
									"end": 6342,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 6310,
									"end": 6342,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 6310,
									"end": 6342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6310,
									"end": 6342,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 6310,
									"end": 6342,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6351,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 6409,
									"end": 6415,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6401,
									"end": 6407,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6395,
									"end": 6399,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6351,
									"end": 6416,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 6351,
									"end": 6416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6351,
									"end": 6416,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 6351,
									"end": 6416,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6286,
									"end": 6422,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6422,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6422,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6233,
									"end": 6422,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6428,
									"end": 6614,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 6428,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6505,
									"end": 6508,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6498,
									"end": 6503,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6495,
									"end": 6509,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6559,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 6596,
									"end": 6597,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6589,
									"end": 6594,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6559,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6559,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6559,
									"end": 6598,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 6559,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6532,
									"end": 6533,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6525,
									"end": 6530,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6521,
									"end": 6534,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6512,
									"end": 6534,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6512,
									"end": 6534,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6488,
									"end": 6608,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6428,
									"end": 6614,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6428,
									"end": 6614,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6428,
									"end": 6614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 7163,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 6620,
									"end": 7163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6721,
									"end": 6723,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6713,
									"end": 6724,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6710,
									"end": 7156,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6710,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6710,
									"end": 7156,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6755,
									"end": 6793,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6787,
									"end": 6792,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6755,
									"end": 6793,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 6755,
									"end": 6793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6755,
									"end": 6793,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6755,
									"end": 6793,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6839,
									"end": 6868,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6857,
									"end": 6867,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6839,
									"end": 6868,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 6839,
									"end": 6868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6839,
									"end": 6868,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 6839,
									"end": 6868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6829,
									"end": 6837,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6825,
									"end": 6869,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7022,
									"end": 7024,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7010,
									"end": 7020,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7007,
									"end": 7025,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7004,
									"end": 7053,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7004,
									"end": 7053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7004,
									"end": 7053,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7043,
									"end": 7051,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7028,
									"end": 7051,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7028,
									"end": 7051,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7004,
									"end": 7053,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7004,
									"end": 7053,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7066,
									"end": 7146,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7140,
									"end": 7143,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 7122,
									"end": 7144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7112,
									"end": 7120,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7108,
									"end": 7145,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7095,
									"end": 7106,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7066,
									"end": 7146,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 7066,
									"end": 7146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7066,
									"end": 7146,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7066,
									"end": 7146,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6725,
									"end": 7156,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6725,
									"end": 7156,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6710,
									"end": 7156,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6710,
									"end": 7156,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 7163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 7163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 7163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 7163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7223,
									"end": 7231,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7273,
									"end": 7278,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7267,
									"end": 7271,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7263,
									"end": 7279,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 7242,
									"end": 7279,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7242,
									"end": 7279,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7169,
									"end": 7286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7169,
									"end": 7286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7336,
									"end": 7342,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7369,
									"end": 7420,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7417,
									"end": 7418,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7413,
									"end": 7419,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7405,
									"end": 7410,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7402,
									"end": 7403,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7398,
									"end": 7411,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7369,
									"end": 7420,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 7369,
									"end": 7420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7369,
									"end": 7420,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7369,
									"end": 7420,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7365,
									"end": 7421,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7450,
									"end": 7454,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7440,
									"end": 7455,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7430,
									"end": 7455,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7430,
									"end": 7455,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7343,
									"end": 7461,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7292,
									"end": 7461,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7292,
									"end": 7461,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7542,
									"end": 7546,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7688,
									"end": 7717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7713,
									"end": 7716,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7707,
									"end": 7711,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7688,
									"end": 7717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 7688,
									"end": 7717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7688,
									"end": 7717,
									"name": "tag",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7688,
									"end": 7717,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7680,
									"end": 7717,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7680,
									"end": 7717,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7750,
									"end": 7753,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7747,
									"end": 7748,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7743,
									"end": 7754,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7737,
									"end": 7741,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7734,
									"end": 7755,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 7726,
									"end": 7755,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7726,
									"end": 7755,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7466,
									"end": 7761,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7466,
									"end": 7761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 9161,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7766,
									"end": 9161,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7883,
									"end": 7920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7916,
									"end": 7919,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7883,
									"end": 7920,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 7883,
									"end": 7920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7883,
									"end": 7920,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7883,
									"end": 7920,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7985,
									"end": 8003,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7977,
									"end": 7983,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7974,
									"end": 8004,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7971,
									"end": 8027,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7971,
									"end": 8027,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7971,
									"end": 8027,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8007,
									"end": 8025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 8007,
									"end": 8025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 8007,
									"end": 8025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8007,
									"end": 8025,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 8007,
									"end": 8025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7971,
									"end": 8027,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7971,
									"end": 8027,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8051,
									"end": 8089,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 8083,
									"end": 8087,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8077,
									"end": 8088,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 8051,
									"end": 8089,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 8051,
									"end": 8089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8051,
									"end": 8089,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 8051,
									"end": 8089,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8136,
									"end": 8203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8188,
									"end": 8194,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8182,
									"end": 8186,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8136,
									"end": 8203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 8136,
									"end": 8203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8136,
									"end": 8203,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8136,
									"end": 8203,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8230,
									"end": 8231,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8254,
									"end": 8258,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8241,
									"end": 8258,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8241,
									"end": 8258,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8286,
									"end": 8288,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8278,
									"end": 8284,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8275,
									"end": 8289,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8303,
									"end": 8304,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8960,
									"end": 8961,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8977,
									"end": 8983,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8974,
									"end": 9051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8974,
									"end": 9051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 8974,
									"end": 9051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9026,
									"end": 9035,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9021,
									"end": 9024,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 9017,
									"end": 9036,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9011,
									"end": 9037,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9002,
									"end": 9037,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9002,
									"end": 9037,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8974,
									"end": 9051,
									"name": "tag",
									"source": 6,
									"value": "172"
								},
								{
									"begin": 8974,
									"end": 9051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9077,
									"end": 9144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 9137,
									"end": 9143,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9130,
									"end": 9135,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9077,
									"end": 9144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 9077,
									"end": 9144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9077,
									"end": 9144,
									"name": "tag",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 9077,
									"end": 9144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9071,
									"end": 9075,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9064,
									"end": 9145,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8933,
									"end": 9155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8268,
									"end": 9155,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 8268,
									"end": 9155,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8298,
									"end": 8916,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8350,
									"end": 8354,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8346,
									"end": 8355,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8338,
									"end": 8344,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8334,
									"end": 8356,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8421,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 8416,
									"end": 8420,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8421,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 8384,
									"end": 8421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8384,
									"end": 8421,
									"name": "tag",
									"source": 6,
									"value": "174"
								},
								{
									"begin": 8384,
									"end": 8421,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8443,
									"end": 8444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8471,
									"end": 8478,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8468,
									"end": 8469,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8465,
									"end": 8479,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8550,
									"end": 8559,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8545,
									"end": 8548,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8541,
									"end": 8560,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8535,
									"end": 8561,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8527,
									"end": 8533,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8520,
									"end": 8562,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8601,
									"end": 8602,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8593,
									"end": 8599,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8589,
									"end": 8603,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8579,
									"end": 8603,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8579,
									"end": 8603,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8648,
									"end": 8650,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8637,
									"end": 8646,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 8633,
									"end": 8651,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8620,
									"end": 8651,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 8620,
									"end": 8651,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8494,
									"end": 8498,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8491,
									"end": 8492,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8487,
									"end": 8499,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8482,
									"end": 8499,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8482,
									"end": 8499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "tag",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8457,
									"end": 8665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8693,
									"end": 8699,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 8684,
									"end": 8691,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8681,
									"end": 8700,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 8678,
									"end": 8857,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8678,
									"end": 8857,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 8678,
									"end": 8857,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8751,
									"end": 8760,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8746,
									"end": 8749,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8742,
									"end": 8761,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8736,
									"end": 8762,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8794,
									"end": 8842,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8836,
									"end": 8840,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 8828,
									"end": 8834,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 8824,
									"end": 8841,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8813,
									"end": 8822,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8794,
									"end": 8842,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 8794,
									"end": 8842,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8794,
									"end": 8842,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 8794,
									"end": 8842,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8786,
									"end": 8792,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8779,
									"end": 8843,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8701,
									"end": 8857,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8678,
									"end": 8857,
									"name": "tag",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 8678,
									"end": 8857,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8903,
									"end": 8904,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 8899,
									"end": 8900,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8891,
									"end": 8897,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8887,
									"end": 8901,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8883,
									"end": 8905,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8877,
									"end": 8881,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 8870,
									"end": 8906,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8268,
									"end": 9155,
									"name": "tag",
									"source": 6,
									"value": "170"
								},
								{
									"begin": 8268,
									"end": 9155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8268,
									"end": 9155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7858,
									"end": 9161,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7858,
									"end": 9161,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7858,
									"end": 9161,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 9161,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 9161,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7766,
									"end": 9161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9167,
									"end": 9293,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 9167,
									"end": 9293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9204,
									"end": 9211,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9244,
									"end": 9286,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9237,
									"end": 9242,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9233,
									"end": 9287,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9222,
									"end": 9287,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9222,
									"end": 9287,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9167,
									"end": 9293,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9167,
									"end": 9293,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9167,
									"end": 9293,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9167,
									"end": 9293,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9299,
									"end": 9395,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 9299,
									"end": 9395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9336,
									"end": 9343,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9365,
									"end": 9389,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9383,
									"end": 9388,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9365,
									"end": 9389,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 9365,
									"end": 9389,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9365,
									"end": 9389,
									"name": "tag",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9365,
									"end": 9389,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9354,
									"end": 9389,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9354,
									"end": 9389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9299,
									"end": 9395,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9299,
									"end": 9395,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9299,
									"end": 9395,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9299,
									"end": 9395,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9401,
									"end": 9519,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 9401,
									"end": 9519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9488,
									"end": 9512,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 9506,
									"end": 9511,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9488,
									"end": 9512,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 9488,
									"end": 9512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9488,
									"end": 9512,
									"name": "tag",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 9488,
									"end": 9512,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9483,
									"end": 9486,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9476,
									"end": 9513,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9401,
									"end": 9519,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9401,
									"end": 9519,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9401,
									"end": 9519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9525,
									"end": 9747,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 9525,
									"end": 9747,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9618,
									"end": 9622,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9656,
									"end": 9658,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9645,
									"end": 9654,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9641,
									"end": 9659,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9633,
									"end": 9659,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9633,
									"end": 9659,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9669,
									"end": 9740,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9737,
									"end": 9738,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9726,
									"end": 9735,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9722,
									"end": 9739,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9713,
									"end": 9719,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9669,
									"end": 9740,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 9669,
									"end": 9740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9669,
									"end": 9740,
									"name": "tag",
									"source": 6,
									"value": "186"
								},
								{
									"begin": 9669,
									"end": 9740,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9525,
									"end": 9747,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9525,
									"end": 9747,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9525,
									"end": 9747,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9525,
									"end": 9747,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9525,
									"end": 9747,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9753,
									"end": 9933,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 9753,
									"end": 9933,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9801,
									"end": 9878,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9798,
									"end": 9799,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9791,
									"end": 9879,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9898,
									"end": 9902,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 9895,
									"end": 9896,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9888,
									"end": 9903,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9922,
									"end": 9926,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 9919,
									"end": 9920,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9912,
									"end": 9927,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 9939,
									"end": 10130,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 9939,
									"end": 10130,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9979,
									"end": 9982,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9998,
									"end": 10018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 10016,
									"end": 10017,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9998,
									"end": 10018,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 9998,
									"end": 10018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9998,
									"end": 10018,
									"name": "tag",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 9998,
									"end": 10018,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9993,
									"end": 10018,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9993,
									"end": 10018,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10032,
									"end": 10052,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 10050,
									"end": 10051,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10032,
									"end": 10052,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 10032,
									"end": 10052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10032,
									"end": 10052,
									"name": "tag",
									"source": 6,
									"value": "190"
								},
								{
									"begin": 10032,
									"end": 10052,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10027,
									"end": 10052,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10027,
									"end": 10052,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10075,
									"end": 10076,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10072,
									"end": 10073,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10068,
									"end": 10077,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10061,
									"end": 10077,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10061,
									"end": 10077,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10096,
									"end": 10099,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10093,
									"end": 10094,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10090,
									"end": 10100,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 10087,
									"end": 10123,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10087,
									"end": 10123,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10087,
									"end": 10123,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10103,
									"end": 10121,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 10103,
									"end": 10121,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 10103,
									"end": 10121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10103,
									"end": 10121,
									"name": "tag",
									"source": 6,
									"value": "192"
								},
								{
									"begin": 10103,
									"end": 10121,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10087,
									"end": 10123,
									"name": "tag",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10087,
									"end": 10123,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9939,
									"end": 10130,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9939,
									"end": 10130,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9939,
									"end": 10130,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9939,
									"end": 10130,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9939,
									"end": 10130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10136,
									"end": 10254,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 10136,
									"end": 10254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10223,
									"end": 10247,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 10241,
									"end": 10246,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10223,
									"end": 10247,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 10223,
									"end": 10247,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10223,
									"end": 10247,
									"name": "tag",
									"source": 6,
									"value": "194"
								},
								{
									"begin": 10223,
									"end": 10247,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10218,
									"end": 10221,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10211,
									"end": 10248,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10136,
									"end": 10254,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10136,
									"end": 10254,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10136,
									"end": 10254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10702,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 10260,
									"end": 10702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10409,
									"end": 10413,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10447,
									"end": 10449,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 10436,
									"end": 10445,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10432,
									"end": 10450,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10450,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10424,
									"end": 10450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10460,
									"end": 10531,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 10528,
									"end": 10529,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10517,
									"end": 10526,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10513,
									"end": 10530,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10504,
									"end": 10510,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 10460,
									"end": 10531,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 10460,
									"end": 10531,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10460,
									"end": 10531,
									"name": "tag",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 10460,
									"end": 10531,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10541,
									"end": 10613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10609,
									"end": 10611,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10598,
									"end": 10607,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10594,
									"end": 10612,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10585,
									"end": 10591,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10541,
									"end": 10613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 10541,
									"end": 10613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10541,
									"end": 10613,
									"name": "tag",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10541,
									"end": 10613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10623,
									"end": 10695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "198"
								},
								{
									"begin": 10691,
									"end": 10693,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 10680,
									"end": 10689,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10676,
									"end": 10694,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10667,
									"end": 10673,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10623,
									"end": 10695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 10623,
									"end": 10695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10623,
									"end": 10695,
									"name": "tag",
									"source": 6,
									"value": "198"
								},
								{
									"begin": 10623,
									"end": 10695,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10702,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10702,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10702,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10702,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10702,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10702,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10260,
									"end": 10702,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10708,
									"end": 10930,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 10708,
									"end": 10930,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10801,
									"end": 10805,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10839,
									"end": 10841,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10828,
									"end": 10837,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10824,
									"end": 10842,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10816,
									"end": 10842,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10816,
									"end": 10842,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10852,
									"end": 10923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "200"
								},
								{
									"begin": 10920,
									"end": 10921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10909,
									"end": 10918,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10905,
									"end": 10922,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10896,
									"end": 10902,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10852,
									"end": 10923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 10852,
									"end": 10923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10852,
									"end": 10923,
									"name": "tag",
									"source": 6,
									"value": "200"
								},
								{
									"begin": 10852,
									"end": 10923,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10708,
									"end": 10930,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10708,
									"end": 10930,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10708,
									"end": 10930,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10708,
									"end": 10930,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10708,
									"end": 10930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 241,
									"end": 645,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 241,
									"end": 645,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 241,
									"end": 645,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 645,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 645,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 645,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 645,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 241,
									"end": 645,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 645,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f90e0ded08b7c39681fc1700f533ca663905923552b1069f86604ae8faae66e664736f6c63430008160033",
									".code": [
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 241,
											"end": 645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2075,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2075,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4294,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4294,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3145,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3145,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5040,
											"end": 5284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5040,
											"end": 5284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5040,
											"end": 5284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3300,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3300,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3300,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2277,
											"end": 2370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2277,
											"end": 2370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3611,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3611,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3611,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3847,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3847,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3847,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2133,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2152,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2145,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2145,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4367,
											"end": 4371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4399,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4399,
											"end": 4411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4411,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4399,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4421,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4430,
											"end": 4435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4444,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4446,
											"end": 4451,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4421,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4421,
											"end": 4452,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4421,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4469,
											"end": 4473,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4462,
											"end": 4473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3235,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3223,
											"end": 3235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5161,
											"end": 5171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5161,
											"end": 5173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5183,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5199,
											"end": 5203,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5214,
											"end": 5219,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5183,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5183,
											"end": 5220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5183,
											"end": 5220,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5183,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5230,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5240,
											"end": 5244,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5246,
											"end": 5248,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5250,
											"end": 5255,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5230,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5230,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5230,
											"end": 5256,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5230,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5266,
											"end": 5277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5040,
											"end": 5284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 608,
											"end": 636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3400,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3408,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3409,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2337,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2356,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2349,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2349,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3712,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3712,
											"end": 3724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3724,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3712,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 3724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 3724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3744,
											"end": 3749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3753,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3755,
											"end": 3760,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3734,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3761,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3734,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3778,
											"end": 3782,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3771,
											"end": 3782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 3782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 3782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 3970,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3980,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 9118,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8990,
											"end": 9118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 9083,
											"end": 9088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9090,
											"end": 9097,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9099,
											"end": 9104,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9110,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9074,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 9074,
											"end": 9111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9074,
											"end": 9111,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 9074,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10664,
											"end": 11141,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 10664,
											"end": 11141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10763,
											"end": 10787,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10790,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 10800,
											"end": 10805,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10807,
											"end": 10814,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 10790,
											"end": 10815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10815,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 10790,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10763,
											"end": 10815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10763,
											"end": 10815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10849,
											"end": 10866,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10866,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10825,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10825,
											"end": 11135,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10905,
											"end": 10910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 10902,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 10910,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10882,
											"end": 11012,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10882,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10882,
											"end": 11012,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10964,
											"end": 10971,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10973,
											"end": 10989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10991,
											"end": 10996,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 10937,
											"end": 10997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10937,
											"end": 10997,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10882,
											"end": 11012,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10882,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11053,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11062,
											"end": 11067,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11069,
											"end": 11076,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11097,
											"end": 11102,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11094,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11104,
											"end": 11109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11053,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 11053,
											"end": 11110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11053,
											"end": 11110,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11053,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10825,
											"end": 11135,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10825,
											"end": 11135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10753,
											"end": 11141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10664,
											"end": 11141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10664,
											"end": 11141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10664,
											"end": 11141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10664,
											"end": 11141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5957,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5657,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5736,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5736,
											"end": 5822,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5808,
											"end": 5809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5781,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5811,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5736,
											"end": 5822,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5736,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5851,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5835,
											"end": 5851,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5835,
											"end": 5851,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5835,
											"end": 5851,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5835,
											"end": 5851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5831,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5831,
											"end": 5917,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5903,
											"end": 5904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5874,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5831,
											"end": 5917,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 5831,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5926,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5934,
											"end": 5938,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5940,
											"end": 5942,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5944,
											"end": 5949,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5926,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5926,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5926,
											"end": 5950,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 5926,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9950,
											"end": 10382,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 9950,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10079,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10062,
											"end": 10081,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10062,
											"end": 10081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10062,
											"end": 10067,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10062,
											"end": 10081,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10062,
											"end": 10081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10062,
											"end": 10081,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10058,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10058,
											"end": 10147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10133,
											"end": 10134,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10104,
											"end": 10136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10136,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10058,
											"end": 10147,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10058,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10179,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10160,
											"end": 10181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10160,
											"end": 10181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10167,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10160,
											"end": 10181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10160,
											"end": 10181,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10156,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 10156,
											"end": 10246,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10232,
											"end": 10233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10204,
											"end": 10235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10204,
											"end": 10235,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10156,
											"end": 10246,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 10156,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10285,
											"end": 10290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10266,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10272,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10274,
											"end": 10281,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10255,
											"end": 10282,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10290,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10255,
											"end": 10290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10304,
											"end": 10313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10350,
											"end": 10357,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10343,
											"end": 10348,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 10334,
											"end": 10365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10334,
											"end": 10365,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 10300,
											"end": 10376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9950,
											"end": 10382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9950,
											"end": 10382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9950,
											"end": 10382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9950,
											"end": 10382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9950,
											"end": 10382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 7379,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 6272,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6365,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6357,
											"end": 6897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6518,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6509,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6497,
											"end": 6509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6497,
											"end": 6518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6357,
											"end": 6897,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6897,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6357,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6549,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6618,
											"end": 6623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6604,
											"end": 6615,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6604,
											"end": 6623,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6715,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6600,
											"end": 6715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6675,
											"end": 6679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6681,
											"end": 6692,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6694,
											"end": 6699,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6650,
											"end": 6700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6700,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6715,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6600,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6867,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6853,
											"end": 6872,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6845,
											"end": 6849,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6872,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6835,
											"end": 6872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6535,
											"end": 6897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6897,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6357,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6927,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6911,
											"end": 6927,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6913,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6927,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6911,
											"end": 6927,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6911,
											"end": 6927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6907,
											"end": 7332,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7090,
											"end": 7095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7086,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7074,
											"end": 7086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6907,
											"end": 7332,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 7332,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6907,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7295,
											"end": 7297,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7285,
											"end": 7307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 7332,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6907,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7364,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7356,
											"end": 7360,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7366,
											"end": 7371,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7347,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7372,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 7379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 7379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 7379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 7379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6285,
											"end": 6290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6267,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 6267,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6255,
											"end": 6292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6491,
											"end": 6493,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6480,
											"end": 6489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6476,
											"end": 6494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 6494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6570,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6548,
											"end": 6554,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6504,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6504,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6653,
											"end": 6655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6629,
											"end": 6635,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6585,
											"end": 6657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6585,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6724,
											"end": 6733,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6667,
											"end": 6739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6667,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6964,
											"end": 6965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6962,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 6966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6896,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 6896,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7154,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7225,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7259,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7327,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"MyERC20/backend/contracts/MyERC20TokenOZ.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the ERC. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":\"MyERC20TokenOZ\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MyERC20/backend/contracts/MyERC20TokenOZ.sol\":{\"keccak256\":\"0x7760f327f5e4e946ca2f1a4346ba40170d04d79f4d9b70cac6e4fea9a33f1f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce8ee797addee2da0f5df8b81905f14f5f558e57875dddeec5b6a64a55d69745\",\"dweb:/ipfs/QmX1CUcUpbs8h2DYo5DgygFaCiFp4VDFbUkjBucvy2RFvp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 208,
								"contract": "MyERC20/backend/contracts/MyERC20TokenOZ.sol:MyERC20TokenOZ",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 214,
								"contract": "MyERC20/backend/contracts/MyERC20TokenOZ.sol:MyERC20TokenOZ",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 216,
								"contract": "MyERC20/backend/contracts/MyERC20TokenOZ.sol:MyERC20TokenOZ",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 218,
								"contract": "MyERC20/backend/contracts/MyERC20TokenOZ.sol:MyERC20TokenOZ",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 220,
								"contract": "MyERC20/backend/contracts/MyERC20TokenOZ.sol:MyERC20TokenOZ",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 6,
								"contract": "MyERC20/backend/contracts/MyERC20TokenOZ.sol:MyERC20TokenOZ",
								"label": "token_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the ERC may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the ERC. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the ERC may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the ERC. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 208,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 214,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 216,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 218,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 220,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"MyERC20/backend/contracts/MyERC20TokenOZ.sol": {
				"ast": {
					"absolutePath": "MyERC20/backend/contracts/MyERC20TokenOZ.sol",
					"exportedSymbols": {
						"Context": [
							834
						],
						"ERC20": [
							700
						],
						"IERC20": [
							778
						],
						"IERC20Errors": [
							90
						],
						"IERC20Metadata": [
							804
						],
						"MyERC20TokenOZ": [
							48
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 49,
							"sourceUnit": 701,
							"src": "57:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC20",
										"nameLocations": [
											"268:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 700,
										"src": "268:5:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "268:5:0"
								}
							],
							"canonicalName": "MyERC20TokenOZ",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48,
								700,
								90,
								804,
								778,
								834
							],
							"name": "MyERC20TokenOZ",
							"nameLocation": "250:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "token_decimals",
									"nameLocation": "295:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 48,
									"src": "281:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 5,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "281:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "444:91:0",
										"statements": [
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "token_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "454:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 24,
																"name": "_decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "477:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "471:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 22,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "471:5:0",
																"typeDescriptions": {}
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "471:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "454:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "454:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 29,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "503:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "507:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "503:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 31,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "515:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 28,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "497:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "497:31:0"
											}
										]
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 17,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "428:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 18,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 19,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 16,
												"name": "ERC20",
												"nameLocations": [
													"422:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 700,
												"src": "422:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "422:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "342:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "328:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 7,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "328:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "349:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "349:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "380:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "372:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_totalSupply",
												"nameLocation": "399:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "391:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:85:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:0:0"
									},
									"scope": 48,
									"src": "316:219:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										264
									],
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "598:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 43,
															"name": "token_decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "621:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "615:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 41,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "615:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "615:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 40,
												"id": 45,
												"nodeType": "Return",
												"src": "608:28:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "550:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 37,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "573:8:0"
									},
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "558:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "591:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 38,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "591:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:7:0"
									},
									"scope": 48,
									"src": "541:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 49,
							"src": "241:404:0",
							"usedErrors": [
								60,
								65,
								70,
								79,
								84,
								89
							],
							"usedEvents": [
								712,
								721
							]
						}
					],
					"src": "31:615:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							185
						],
						"IERC20Errors": [
							90
						],
						"IERC721Errors": [
							138
						]
					},
					"id": 186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 50,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 51,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 90,
							"linearizedBaseContracts": [
								90
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 60,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 65,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 70,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 79,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 84,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 89,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 186,
							"src": "280:1764:1",
							"usedErrors": [
								60,
								65,
								70,
								79,
								84,
								89
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 91,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 138,
							"linearizedBaseContracts": [
								138
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 96,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 101,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 110,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 115,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 120,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 127,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 132,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 137,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 186,
							"src": "2190:2092:1",
							"usedErrors": [
								96,
								101,
								110,
								115,
								120,
								127,
								132,
								137
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 139,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 185,
							"linearizedBaseContracts": [
								185
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 150,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 155,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 160,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 167,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 172,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 177,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 184,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 186,
							"src": "4430:2107:1",
							"usedErrors": [
								150,
								155,
								160,
								167,
								172,
								177,
								184
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							834
						],
						"ERC20": [
							700
						],
						"IERC20": [
							778
						],
						"IERC20Errors": [
							90
						],
						"IERC20Metadata": [
							804
						]
					},
					"id": 701,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 701,
							"sourceUnit": 779,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 188,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 778,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 701,
							"sourceUnit": 805,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 190,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 701,
							"sourceUnit": 835,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 192,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 834,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 701,
							"sourceUnit": 186,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 194,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 90,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 197,
										"name": "Context",
										"nameLocations": [
											"1429:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 834,
										"src": "1429:7:2"
									},
									"id": 198,
									"nodeType": "InheritanceSpecifier",
									"src": "1429:7:2"
								},
								{
									"baseName": {
										"id": 199,
										"name": "IERC20",
										"nameLocations": [
											"1438:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 778,
										"src": "1438:6:2"
									},
									"id": 200,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:6:2"
								},
								{
									"baseName": {
										"id": 201,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1446:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "1446:14:2"
									},
									"id": 202,
									"nodeType": "InheritanceSpecifier",
									"src": "1446:14:2"
								},
								{
									"baseName": {
										"id": 203,
										"name": "IERC20Errors",
										"nameLocations": [
											"1462:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 90,
										"src": "1462:12:2"
									},
									"id": 204,
									"nodeType": "InheritanceSpecifier",
									"src": "1462:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "348:1053:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the ERC may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 700,
							"linearizedBaseContracts": [
								700,
								90,
								804,
								778,
								834
							],
							"name": "ERC20",
							"nameLocation": "1420:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 208,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1525:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 700,
									"src": "1481:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 207,
										"keyName": "account",
										"keyNameLocation": "1497:7:2",
										"keyType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1489:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1481:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 206,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1508:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 214,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1613:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 700,
									"src": "1541:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 213,
										"keyName": "account",
										"keyNameLocation": "1557:7:2",
										"keyType": {
											"id": 209,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1549:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1541:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 212,
											"keyName": "spender",
											"keyNameLocation": "1584:7:2",
											"keyType": {
												"id": 210,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1576:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1568:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 211,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1595:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 216,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1647:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 700,
									"src": "1631:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1631:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 218,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1681:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 700,
									"src": "1666:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 217,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1666:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 220,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1707:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 700,
									"src": "1692:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 219,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1692:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1953:57:2",
										"statements": [
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 228,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1963:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 229,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1971:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1963:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "1963:13:2"
											},
											{
												"expression": {
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1986:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 233,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "1996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1986:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "1986:17:2"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "1721:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 237,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1923:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1909:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 222,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1909:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1944:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1930:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 224,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1930:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:44:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:0:2"
									},
									"scope": 700,
									"src": "1897:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										791
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "2135:29:2",
										"statements": [
											{
												"expression": {
													"id": 243,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 218,
													"src": "2152:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 242,
												"id": 244,
												"nodeType": "Return",
												"src": "2145:12:2"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "2016:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2084:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2088:2:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2120:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2120:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2119:15:2"
									},
									"scope": 700,
									"src": "2075:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										797
									],
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2339:31:2",
										"statements": [
											{
												"expression": {
													"id": 252,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "2356:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 251,
												"id": 253,
												"nodeType": "Return",
												"src": "2349:14:2"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "2170:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2286:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2292:2:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2324:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2324:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:15:2"
									},
									"scope": 700,
									"src": "2277:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										803
									],
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "3059:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3076:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 260,
												"id": 262,
												"nodeType": "Return",
												"src": "3069:9:2"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "2376:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3012:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3020:2:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "3052:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 258,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3052:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:7:2"
									},
									"scope": 700,
									"src": "3003:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										727
									],
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "3206:36:2",
										"statements": [
											{
												"expression": {
													"id": 270,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "3223:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 269,
												"id": 271,
												"nodeType": "Return",
												"src": "3216:19:2"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "3091:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3154:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3165:2:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3197:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3197:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3196:9:2"
									},
									"scope": 700,
									"src": "3145:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										735
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3374:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 281,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3391:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 283,
													"indexExpression": {
														"id": 282,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "3401:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3391:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 280,
												"id": 284,
												"nodeType": "Return",
												"src": "3384:25:2"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "3248:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3309:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3327:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3319:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3319:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3318:17:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3365:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3365:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:9:2"
									},
									"scope": 700,
									"src": "3300:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										745
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "3686:103:2",
										"statements": [
											{
												"assignments": [
													297
												],
												"declarations": [
													{
														"constant": false,
														"id": 297,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3704:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 309,
														"src": "3696:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 296,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3696:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 298,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "3712:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3712:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3696:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "3744:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3751:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 304,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "3755:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 301,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "3734:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3734:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "3734:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 295,
												"id": 308,
												"nodeType": "Return",
												"src": "3771:11:2"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "3422:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3620:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3637:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "3629:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3649:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "3641:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3628:27:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "3680:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3680:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3679:6:2"
									},
									"scope": 700,
									"src": "3611:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										755
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "3936:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 320,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3953:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 322,
														"indexExpression": {
															"id": 321,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3965:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3953:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 324,
													"indexExpression": {
														"id": 323,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "3972:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3953:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 325,
												"nodeType": "Return",
												"src": "3946:34:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "3795:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3856:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3874:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3866:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3889:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3881:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3865:32:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3927:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3926:9:2"
									},
									"scope": 700,
									"src": "3847:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										765
									],
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "4373:107:2",
										"statements": [
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4391:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "4383:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4383:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 339,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "4399:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4399:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4383:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4430:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 344,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4437:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4446:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															591,
															651
														],
														"referencedDeclaration": 591,
														"src": "4421:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4421:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "4421:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4469:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 336,
												"id": 349,
												"nodeType": "Return",
												"src": "4462:11:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "3993:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4303:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4319:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "4311:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4336:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "4328:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4328:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4310:32:2"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "4367:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4367:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4366:6:2"
									},
									"scope": 700,
									"src": "4294:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										777
									],
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "5133:151:2",
										"statements": [
											{
												"assignments": [
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5151:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "5143:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 363,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5143:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 365,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "5161:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5161:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5143:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "5199:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5205:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "5183:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5183:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "5183:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "5240:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "5246:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5250:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "5230:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5230:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5230:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5273:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 362,
												"id": 381,
												"nodeType": "Return",
												"src": "5266:11:2"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "4486:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the ERC. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5049:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5070:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5062:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5062:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5084:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5076:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5096:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5088:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5088:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5061:41:2"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5127:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5127:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5126:6:2"
									},
									"scope": 700,
									"src": "5040:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "5726:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "5740:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5756:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5748:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5748:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5748:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5740:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "5736:86:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "5760:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5808:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5800:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5800:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5800:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "5781:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5781:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "5774:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 408,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "5835:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5849:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5841:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 409,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5841:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5841:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5835:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 422,
												"nodeType": "IfStatement",
												"src": "5831:86:2",
												"trueBody": {
													"id": 421,
													"nodeType": "Block",
													"src": "5853:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5903:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5895:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 415,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5895:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5895:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 414,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "5874:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5874:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 420,
															"nodeType": "RevertStatement",
															"src": "5867:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "5934:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "5940:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5944:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 423,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "5926:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5926:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "5926:24:2"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "5290:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5666:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5684:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5676:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5698:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5690:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5710:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5702:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5702:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5675:41:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5726:0:2"
									},
									"scope": 700,
									"src": "5657:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "6347:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 440,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "6361:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6377:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6369:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 441,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6369:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6369:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6361:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "6535:362:2",
													"statements": [
														{
															"assignments": [
																452
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 452,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6557:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 477,
																	"src": "6549:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 451,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6549:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 456,
															"initialValue": {
																"baseExpression": {
																	"id": 453,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "6571:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 455,
																"indexExpression": {
																	"id": 454,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "6581:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6571:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6549:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 457,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6604:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 458,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "6618:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6604:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 467,
															"nodeType": "IfStatement",
															"src": "6600:115:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "6625:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 461,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "6675:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 462,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "6681:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 463,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "6694:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 460,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 60,
																				"src": "6650:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6650:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 465,
																		"nodeType": "RevertStatement",
																		"src": "6643:57:2"
																	}
																]
															}
														},
														{
															"id": 476,
															"nodeType": "UncheckedBlock",
															"src": "6728:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 468,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 208,
																				"src": "6835:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 470,
																			"indexExpression": {
																				"id": 469,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 433,
																				"src": "6845:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6835:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 471,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "6853:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 472,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "6867:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6853:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6835:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 475,
																	"nodeType": "ExpressionStatement",
																	"src": "6835:37:2"
																}
															]
														}
													]
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "6357:540:2",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "6381:148:2",
													"statements": [
														{
															"expression": {
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 446,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "6497:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 447,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "6513:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6497:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 449,
															"nodeType": "ExpressionStatement",
															"src": "6497:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "6911:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6925:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6917:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6917:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6917:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6911:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "7126:206:2",
													"statements": [
														{
															"id": 497,
															"nodeType": "UncheckedBlock",
															"src": "7140:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 491,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 208,
																				"src": "7285:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 493,
																			"indexExpression": {
																				"id": 492,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 435,
																				"src": "7295:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7285:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 494,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "7302:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7285:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 496,
																	"nodeType": "ExpressionStatement",
																	"src": "7285:22:2"
																}
															]
														}
													]
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "6907:425:2",
												"trueBody": {
													"id": 490,
													"nodeType": "Block",
													"src": "6929:191:2",
													"statements": [
														{
															"id": 489,
															"nodeType": "UncheckedBlock",
															"src": "6943:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 485,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "7074:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 486,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "7090:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7074:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 488,
																	"nodeType": "ExpressionStatement",
																	"src": "7074:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 501,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "7356:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "7362:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "7366:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 500,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "7347:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7347:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "EmitStatement",
												"src": "7342:30:2"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "5963:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6281:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6311:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6303:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6323:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6315:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6315:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6288:41:2"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6347:0:2"
									},
									"scope": 700,
									"src": "6272:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "7778:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 515,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "7792:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 516,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7792:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 529,
												"nodeType": "IfStatement",
												"src": "7788:91:2",
												"trueBody": {
													"id": 528,
													"nodeType": "Block",
													"src": "7815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 522,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 521,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "7836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 527,
															"nodeType": "RevertStatement",
															"src": "7829:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7904:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7896:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 531,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7896:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7896:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "7908:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "7917:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "7888:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7888:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "7888:35:2"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "7385:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7731:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "7737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7762:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "7754:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7754:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7736:32:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7778:0:2"
									},
									"scope": 700,
									"src": "7722:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "8304:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 548,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "8318:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8337:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8329:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 549,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8329:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8329:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8318:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "IfStatement",
												"src": "8314:89:2",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "8341:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8389:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8381:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 555,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8381:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8381:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 554,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "8362:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8362:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 560,
															"nodeType": "RevertStatement",
															"src": "8355:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "8420:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8437:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8429:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 565,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8429:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8429:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "8441:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "8412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8412:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "8412:35:2"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "7936:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8257:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8271:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "8263:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8263:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8288:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "8280:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8280:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8262:32:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8304:0:2"
									},
									"scope": 700,
									"src": "8248:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "9064:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 584,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "9083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9090:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "9099:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9106:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 583,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															591,
															651
														],
														"referencedDeclaration": 651,
														"src": "9074:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9074:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "9074:37:2"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "8460:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8999:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9016:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "9008:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "9023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9048:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "9040:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9040:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9007:47:2"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9064:0:2"
									},
									"scope": 700,
									"src": "8990:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "10048:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 603,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "10062:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10079:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10071:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 604,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10071:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10071:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10062:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"nodeType": "IfStatement",
												"src": "10058:89:2",
												"trueBody": {
													"id": 616,
													"nodeType": "Block",
													"src": "10083:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10133:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10125:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 610,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10125:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10125:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 609,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "10104:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10104:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 615,
															"nodeType": "RevertStatement",
															"src": "10097:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 618,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "10160:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10179:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10171:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 619,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10171:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10171:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10160:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 632,
												"nodeType": "IfStatement",
												"src": "10156:90:2",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "10183:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10232:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10224:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 625,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10224:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10224:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "10204:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10204:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "RevertStatement",
															"src": "10197:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 633,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "10255:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 636,
															"indexExpression": {
																"id": 634,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "10267:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10255:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 637,
														"indexExpression": {
															"id": 635,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "10274:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10255:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 638,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "10285:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10255:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "10255:35:2"
											},
											{
												"condition": {
													"id": 641,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 600,
													"src": "10304:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 649,
												"nodeType": "IfStatement",
												"src": "10300:76:2",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "10315:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 643,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "10343:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 644,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "10350:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 645,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "10359:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 642,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "10334:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10334:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 647,
															"nodeType": "EmitStatement",
															"src": "10329:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "9124:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9959:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9976:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "9968:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9968:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9991:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "9983:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9983:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10008:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "10000:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10020:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "10015:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10015:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9967:63:2"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10048:0:2"
									},
									"scope": 700,
									"src": "9950:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "10753:388:2",
										"statements": [
											{
												"assignments": [
													662
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10771:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "10763:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10763:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"arguments": [
														{
															"id": 664,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "10800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "10807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 663,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "10790:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10790:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10763:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 668,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "10829:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10854:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 670,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10854:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 669,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10849:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10849:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10863:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10849:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10829:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "10825:310:2",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "10868:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 675,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "10886:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 676,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "10905:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10886:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 685,
															"nodeType": "IfStatement",
															"src": "10882:130:2",
															"trueBody": {
																"id": 684,
																"nodeType": "Block",
																"src": "10912:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 679,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 656,
																					"src": "10964:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 680,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 662,
																					"src": "10973:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 681,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 658,
																					"src": "10991:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 678,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 79,
																				"src": "10937:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10937:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 683,
																		"nodeType": "RevertStatement",
																		"src": "10930:67:2"
																	}
																]
															}
														},
														{
															"id": 695,
															"nodeType": "UncheckedBlock",
															"src": "11025:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 687,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "11062:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 688,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 656,
																				"src": "11069:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 689,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 662,
																					"src": "11078:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 690,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 658,
																					"src": "11097:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11078:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11104:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 686,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				591,
																				651
																			],
																			"referencedDeclaration": 651,
																			"src": "11053:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11053:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 694,
																	"nodeType": "ExpressionStatement",
																	"src": "11053:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "10388:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10673:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10697:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "10689:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10712:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "10704:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10704:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10729:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "10721:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10688:47:2"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10753:0:2"
									},
									"scope": 700,
									"src": "10664:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 701,
							"src": "1402:9741:2",
							"usedErrors": [
								60,
								65,
								70,
								79,
								84,
								89
							],
							"usedEvents": [
								712,
								721
							]
						}
					],
					"src": "105:11039:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							778
						]
					},
					"id": 779,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 702,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 703,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 778,
							"linearizedBaseContracts": [
								778
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 712,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 721,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 778,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 778,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 778,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 778,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 778,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 774,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 778,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 779,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								712,
								721
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							778
						],
						"IERC20Metadata": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 780,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 782,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 805,
							"sourceUnit": 779,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 781,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 778,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 784,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 778,
										"src": "306:6:4"
									},
									"id": 785,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 783,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 804,
							"linearizedBaseContracts": [
								804,
								778
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 788,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 804,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 794,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 804,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 800,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 804,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 805,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								712,
								721
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							834
						]
					},
					"id": 835,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 834,
							"linearizedBaseContracts": [
								834
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 812,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 811,
												"id": 814,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 834,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 821,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 820,
												"id": 823,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 834,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 829,
												"id": 831,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 834,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 835,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			}
		}
	}
}